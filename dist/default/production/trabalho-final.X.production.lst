

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Aug  1 09:30:49 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    59                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    60                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    61                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    62  0000                     
    63                           ; Version 2.32
    64                           ; Generated 02/02/2021 GMT
    65                           ; 
    66                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    67                           ; All rights reserved.
    68                           ; 
    69                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    70                           ; 
    71                           ; Redistribution and use in source and binary forms, with or without modification, are
    72                           ; permitted provided that the following conditions are met:
    73                           ; 
    74                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    75                           ;        conditions and the following disclaimer.
    76                           ; 
    77                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    78                           ;        of conditions and the following disclaimer in the documentation and/or other
    79                           ;        materials provided with the distribution. Publication is not required when
    80                           ;        this file is used in an embedded application.
    81                           ; 
    82                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    83                           ;        software without specific prior written permission.
    84                           ; 
    85                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    86                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    87                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    88                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    89                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    90                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    91                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    92                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    93                           ; 
    94                           ; 
    95                           ; Code-generator required, PIC18F4520 Definitions
    96                           ; 
    97                           ; SFR Addresses
    98  0000                     
    99                           	psect	idataBANK0
   100  0020E4                     __pidataBANK0:
   101                           	callstack 0
   102                           
   103                           ;initializer for textWait@F2779
   104  0020E4  45                 	db	69
   105  0020E5  73                 	db	115
   106  0020E6  70                 	db	112
   107  0020E7  65                 	db	101
   108  0020E8  72                 	db	114
   109  0020E9  61                 	db	97
   110  0020EA  6E                 	db	110
   111  0020EB  64                 	db	100
   112  0020EC  6F                 	db	111
   113  0020ED  00                 	db	0
   114  0020EE  00                 	db	0
   115  0020EF  00                 	db	0
   116  0020F0  00                 	db	0
   117  0020F1  00                 	db	0
   118  0020F2  00                 	db	0
   119                           
   120                           ;initializer for textApostas@F2770
   121  0020F3  70                 	db	112
   122  0020F4  61                 	db	97
   123  0020F5  72                 	db	114
   124  0020F6  61                 	db	97
   125  0020F7  20                 	db	32
   126  0020F8  41                 	db	65
   127  0020F9  50                 	db	80
   128  0020FA  4F                 	db	79
   129  0020FB  53                 	db	83
   130  0020FC  54                 	db	84
   131  0020FD  41                 	db	65
   132  0020FE  52                 	db	82
   133  0020FF  21                 	db	33
   134  002100  00                 	db	0
   135  002101  00                 	db	0
   136                           
   137                           ;initializer for textApostas@F2768
   138  002102  43                 	db	67
   139  002103  6C                 	db	108
   140  002104  69                 	db	105
   141  002105  71                 	db	113
   142  002106  75                 	db	117
   143  002107  65                 	db	101
   144  002108  20                 	db	32
   145  002109  65                 	db	101
   146  00210A  6D                 	db	109
   147  00210B  20                 	db	32
   148  00210C  32                 	db	50
   149  00210D  00                 	db	0
   150  00210E  00                 	db	0
   151  00210F  00                 	db	0
   152  002110  00                 	db	0
   153                           
   154                           ;initializer for textInstrutions@F2765
   155  002111  70                 	db	112
   156  002112  61                 	db	97
   157  002113  72                 	db	114
   158  002114  61                 	db	97
   159  002115  20                 	db	32
   160  002116  6F                 	db	111
   161  002117  20                 	db	32
   162  002118  73                 	db	115
   163  002119  61                 	db	97
   164  00211A  6C                 	db	108
   165  00211B  64                 	db	100
   166  00211C  6F                 	db	111
   167  00211D  00                 	db	0
   168  00211E  00                 	db	0
   169  00211F  00                 	db	0
   170                           
   171                           ;initializer for textInstrutions@F2763
   172  002120  43                 	db	67
   173  002121  6C                 	db	108
   174  002122  69                 	db	105
   175  002123  71                 	db	113
   176  002124  75                 	db	117
   177  002125  65                 	db	101
   178  002126  20                 	db	32
   179  002127  65                 	db	101
   180  002128  6D                 	db	109
   181  002129  20                 	db	32
   182  00212A  31                 	db	49
   183  00212B  00                 	db	0
   184  00212C  00                 	db	0
   185  00212D  00                 	db	0
   186  00212E  00                 	db	0
   187                           
   188                           ;initializer for textInit@F2750
   189  00212F  42                 	db	66
   190  002130  65                 	db	101
   191  002131  6D                 	db	109
   192  002132  20                 	db	32
   193  002133  56                 	db	86
   194  002134  69                 	db	105
   195  002135  6E                 	db	110
   196  002136  64                 	db	100
   197  002137  6F                 	db	111
   198  002138  20                 	db	32
   199  002139  61                 	db	97
   200  00213A  6F                 	db	111
   201                           
   202                           ;initializer for textSaldo@F2774
   203  00213B  53                 	db	83
   204  00213C  61                 	db	97
   205  00213D  6C                 	db	108
   206  00213E  64                 	db	100
   207  00213F  6F                 	db	111
   208  002140  3A                 	db	58
   209                           
   210                           ;initializer for _saldo
   211  002141  028A               	dw	650
   212                           
   213                           	psect	idataBANK1
   214  001BF8                     __pidataBANK1:
   215                           	callstack 0
   216                           
   217                           ;initializer for textGameOver@F2786
   218  001BF8  73                 	db	115
   219  001BF9  61                 	db	97
   220  001BFA  6C                 	db	108
   221  001BFB  64                 	db	100
   222  001BFC  6F                 	db	111
   223  001BFD  20                 	db	32
   224  001BFE  69                 	db	105
   225  001BFF  6E                 	db	110
   226  001C00  73                 	db	115
   227  001C01  75                 	db	117
   228  001C02  66                 	db	102
   229  001C03  2E                 	db	46
   230  001C04  2E                 	db	46
   231  001C05  2E                 	db	46
   232  001C06  00                 	db	0
   233  001C07  00                 	db	0
   234  001C08  00                 	db	0
   235  001C09  00                 	db	0
   236  001C0A  00                 	db	0
   237  001C0B  00                 	db	0
   238                           
   239                           ;initializer for textInit@F2752
   240  001C0C  43                 	db	67
   241  001C0D  41                 	db	65
   242  001C0E  53                 	db	83
   243  001C0F  53                 	db	83
   244  001C10  49                 	db	73
   245  001C11  4E                 	db	78
   246  001C12  4F                 	db	79
   247  001C13  20                 	db	32
   248  001C14  55                 	db	85
   249  001C15  4E                 	db	78
   250  001C16  49                 	db	73
   251  001C17  46                 	db	70
   252  001C18  45                 	db	69
   253  001C19  49                 	db	73
   254  001C1A  21                 	db	33
   255  001C1B  21                 	db	33
   256                           
   257                           ;initializer for textApostando@F2806
   258  001C1C  43                 	db	67
   259  001C1D  75                 	db	117
   260  001C1E  73                 	db	115
   261  001C1F  74                 	db	116
   262  001C20  6F                 	db	111
   263  001C21  3A                 	db	58
   264  001C22  20                 	db	32
   265  001C23  2D                 	db	45
   266  001C24  32                 	db	50
   267  001C25  30                 	db	48
   268  001C26  30                 	db	48
   269  001C27  20                 	db	32
   270  001C28  00                 	db	0
   271  001C29  00                 	db	0
   272  001C2A  00                 	db	0
   273                           
   274                           ;initializer for textApostando@F2804
   275  001C2B  41                 	db	65
   276  001C2C  70                 	db	112
   277  001C2D  6F                 	db	111
   278  001C2E  73                 	db	115
   279  001C2F  74                 	db	116
   280  001C30  61                 	db	97
   281  001C31  6E                 	db	110
   282  001C32  64                 	db	100
   283  001C33  6F                 	db	111
   284  001C34  00                 	db	0
   285  001C35  00                 	db	0
   286  001C36  00                 	db	0
   287  001C37  00                 	db	0
   288  001C38  00                 	db	0
   289  001C39  00                 	db	0
   290                           
   291                           ;initializer for textWin@F2796
   292  001C3A  43                 	db	67
   293  001C3B  75                 	db	117
   294  001C3C  73                 	db	115
   295  001C3D  74                 	db	116
   296  001C3E  6F                 	db	111
   297  001C3F  3A                 	db	58
   298  001C40  20                 	db	32
   299  001C41  2B                 	db	43
   300  001C42  32                 	db	50
   301  001C43  30                 	db	48
   302  001C44  30                 	db	48
   303  001C45  20                 	db	32
   304  001C46  00                 	db	0
   305  001C47  00                 	db	0
   306  001C48  00                 	db	0
   307                           
   308                           ;initializer for textWin@F2794
   309  001C49  56                 	db	86
   310  001C4A  43                 	db	67
   311  001C4B  20                 	db	32
   312  001C4C  47                 	db	71
   313  001C4D  41                 	db	65
   314  001C4E  4E                 	db	78
   315  001C4F  48                 	db	72
   316  001C50  4F                 	db	79
   317  001C51  55                 	db	85
   318  001C52  00                 	db	0
   319  001C53  00                 	db	0
   320  001C54  00                 	db	0
   321  001C55  00                 	db	0
   322  001C56  00                 	db	0
   323  001C57  00                 	db	0
   324                           
   325                           ;initializer for textLost@F2791
   326  001C58  43                 	db	67
   327  001C59  75                 	db	117
   328  001C5A  73                 	db	115
   329  001C5B  74                 	db	116
   330  001C5C  6F                 	db	111
   331  001C5D  3A                 	db	58
   332  001C5E  20                 	db	32
   333  001C5F  2D                 	db	45
   334  001C60  32                 	db	50
   335  001C61  30                 	db	48
   336  001C62  30                 	db	48
   337  001C63  20                 	db	32
   338  001C64  00                 	db	0
   339  001C65  00                 	db	0
   340  001C66  00                 	db	0
   341                           
   342                           ;initializer for textLost@F2789
   343  001C67  56                 	db	86
   344  001C68  43                 	db	67
   345  001C69  20                 	db	32
   346  001C6A  50                 	db	80
   347  001C6B  45                 	db	69
   348  001C6C  52                 	db	82
   349  001C6D  44                 	db	68
   350  001C6E  45                 	db	69
   351  001C6F  55                 	db	85
   352  001C70  00                 	db	0
   353  001C71  00                 	db	0
   354  001C72  00                 	db	0
   355  001C73  00                 	db	0
   356  001C74  00                 	db	0
   357  001C75  00                 	db	0
   358                           
   359                           ;initializer for textGameOver@F2784
   360  001C76  47                 	db	71
   361  001C77  41                 	db	65
   362  001C78  4D                 	db	77
   363  001C79  45                 	db	69
   364  001C7A  20                 	db	32
   365  001C7B  4F                 	db	79
   366  001C7C  56                 	db	86
   367  001C7D  45                 	db	69
   368  001C7E  52                 	db	82
   369  001C7F  00                 	db	0
   370  001C80  00                 	db	0
   371  001C81  00                 	db	0
   372  001C82  00                 	db	0
   373  001C83  00                 	db	0
   374  001C84  00                 	db	0
   375                           
   376                           ;initializer for textWait@F2781
   377  001C85  41                 	db	65
   378  001C86  70                 	db	112
   379  001C87  6F                 	db	111
   380  001C88  73                 	db	115
   381  001C89  74                 	db	116
   382  001C8A  65                 	db	101
   383  001C8B  20                 	db	32
   384  001C8C  63                 	db	99
   385  001C8D  6F                 	db	111
   386  001C8E  6D                 	db	109
   387  001C8F  20                 	db	32
   388  001C90  32                 	db	50
   389  001C91  00                 	db	0
   390  001C92  00                 	db	0
   391  001C93  00                 	db	0
   392                           
   393                           	psect	smallconst
   394  000600                     __psmallconst:
   395                           	callstack 0
   396  000600  00                 	db	0
   397  000601                     _valor@ssd$F222:
   398                           	callstack 0
   399  000601  3F                 	db	63
   400  000602  06                 	db	6
   401  000603  5B                 	db	91
   402  000604  4F                 	db	79
   403  000605  66                 	db	102
   404  000606  6D                 	db	109
   405  000607  7D                 	db	125
   406  000608  07                 	db	7
   407  000609  7F                 	db	127
   408  00060A  6F                 	db	111
   409  00060B  77                 	db	119
   410  00060C  7C                 	db	124
   411  00060D  39                 	db	57
   412  00060E  5E                 	db	94
   413  00060F  79                 	db	121
   414  000610  71                 	db	113
   415  000611                     __end_of_valor@ssd$F222:
   416                           	callstack 0
   417  000611                     STR_1:
   418                           
   419                           ; BSR set to: 0
   420  000611  7A                 	db	122	;'z'
   421  000612  79                 	db	121	;'y'
   422  000613  78                 	db	120	;'x'
   423  000614  77                 	db	119	;'w'
   424  000615  76                 	db	118	;'v'
   425  000616  75                 	db	117	;'u'
   426  000617  74                 	db	116	;'t'
   427  000618  73                 	db	115	;'s'
   428  000619  72                 	db	114	;'r'
   429  00061A  71                 	db	113	;'q'
   430  00061B  70                 	db	112	;'p'
   431  00061C  6F                 	db	111	;'o'
   432  00061D  6E                 	db	110	;'n'
   433  00061E  6D                 	db	109	;'m'
   434  00061F  6C                 	db	108	;'l'
   435  000620  6B                 	db	107	;'k'
   436  000621  6A                 	db	106	;'j'
   437  000622  69                 	db	105	;'i'
   438  000623  68                 	db	104	;'h'
   439  000624  67                 	db	103	;'g'
   440  000625  66                 	db	102	;'f'
   441  000626  65                 	db	101	;'e'
   442  000627  64                 	db	100	;'d'
   443  000628  63                 	db	99	;'c'
   444  000629  62                 	db	98	;'b'
   445  00062A  61                 	db	97	;'a'
   446  00062B  39                 	db	57	;'9'
   447  00062C  38                 	db	56	;'8'
   448  00062D  37                 	db	55	;'7'
   449  00062E  36                 	db	54	;'6'
   450  00062F  35                 	db	53	;'5'
   451  000630  34                 	db	52	;'4'
   452  000631  33                 	db	51	;'3'
   453  000632  32                 	db	50	;'2'
   454  000633  31                 	db	49	;'1'
   455  000634  30                 	db	48	;'0'
   456  000635  31                 	db	49	;'1'
   457  000636  32                 	db	50	;'2'
   458  000637  33                 	db	51	;'3'
   459  000638  34                 	db	52	;'4'
   460  000639  35                 	db	53	;'5'
   461  00063A  36                 	db	54	;'6'
   462  00063B  37                 	db	55	;'7'
   463  00063C  38                 	db	56	;'8'
   464  00063D  39                 	db	57	;'9'
   465  00063E  61                 	db	97	;'a'
   466  00063F  62                 	db	98	;'b'
   467  000640  63                 	db	99	;'c'
   468  000641  64                 	db	100	;'d'
   469  000642  65                 	db	101	;'e'
   470  000643  66                 	db	102	;'f'
   471  000644  67                 	db	103	;'g'
   472  000645  68                 	db	104	;'h'
   473  000646  69                 	db	105	;'i'
   474  000647  6A                 	db	106	;'j'
   475  000648  6B                 	db	107	;'k'
   476  000649  6C                 	db	108	;'l'
   477  00064A  6D                 	db	109	;'m'
   478  00064B  6E                 	db	110	;'n'
   479  00064C  6F                 	db	111	;'o'
   480  00064D  70                 	db	112	;'p'
   481  00064E  71                 	db	113	;'q'
   482  00064F  72                 	db	114	;'r'
   483  000650  73                 	db	115	;'s'
   484  000651  74                 	db	116	;'t'
   485  000652  75                 	db	117	;'u'
   486  000653  76                 	db	118	;'v'
   487  000654  77                 	db	119	;'w'
   488  000655  78                 	db	120	;'x'
   489  000656  79                 	db	121	;'y'
   490  000657  7A                 	db	122	;'z'
   491  000658  00                 	db	0
   492  000659  00                 	db	0	; dummy byte at the end
   493  0000                     
   494                           	psect	nvBANK0
   495  0000F6                     __pnvBANK0:
   496                           	callstack 0
   497  0000F6                     _seed:
   498                           	callstack 0
   499  0000F6                     	ds	4
   500  0000                     _T2CON	set	4042
   501  0000                     _CCP1CON	set	4029
   502  0000                     _CCPR1L	set	4030
   503  0000                     _PR2	set	4043
   504  0000                     _TRISE	set	3990
   505  0000                     _TRISD	set	3989
   506  0000                     _TRISC	set	3988
   507  0000                     _TRISB	set	3987
   508  0000                     _TRISA	set	3986
   509  0000                     _PORTE	set	3972
   510  0000                     _PORTD	set	3971
   511  0000                     _PORTC	set	3970
   512  0000                     _PORTB	set	3969
   513  0000                     _PORTA	set	3968
   514                           
   515                           ; #config settings
   516                           
   517                           	psect	cinit
   518  0022B4                     __pcinit:
   519                           	callstack 0
   520  0022B4                     start_initialization:
   521                           	callstack 0
   522  0022B4                     __initialization:
   523                           	callstack 0
   524                           
   525                           ; Initialize objects allocated to BANK1 (156 bytes)
   526                           ; load TBLPTR registers with __pidataBANK1
   527  0022B4  0EF8               	movlw	low __pidataBANK1
   528  0022B6  6EF6               	movwf	tblptrl,c
   529  0022B8  0E1B               	movlw	high __pidataBANK1
   530  0022BA  6EF7               	movwf	tblptrh,c
   531  0022BC  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   532  0022BE  6EF8               	movwf	tblptru,c
   533  0022C0  EE01  F000         	lfsr	0,__pdataBANK1
   534  0022C4  EE10 F09C          	lfsr	1,156
   535  0022C8                     copy_data0:
   536  0022C8  0009               	tblrd		*+
   537  0022CA  CFF5 FFEE          	movff	tablat,postinc0
   538  0022CE  50E5               	movf	postdec1,w,c
   539  0022D0  50E1               	movf	fsr1l,w,c
   540  0022D2  E1FA               	bnz	copy_data0
   541                           
   542                           ; Initialize objects allocated to BANK0 (95 bytes)
   543                           ; load TBLPTR registers with __pidataBANK0
   544  0022D4  0EE4               	movlw	low __pidataBANK0
   545  0022D6  6EF6               	movwf	tblptrl,c
   546  0022D8  0E20               	movlw	high __pidataBANK0
   547  0022DA  6EF7               	movwf	tblptrh,c
   548  0022DC  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   549  0022DE  6EF8               	movwf	tblptru,c
   550  0022E0  EE00  F080         	lfsr	0,__pdataBANK0
   551  0022E4  EE10 F05F          	lfsr	1,95
   552  0022E8                     copy_data1:
   553  0022E8  0009               	tblrd		*+
   554  0022EA  CFF5 FFEE          	movff	tablat,postinc0
   555  0022EE  50E5               	movf	postdec1,w,c
   556  0022F0  50E1               	movf	fsr1l,w,c
   557  0022F2  E1FA               	bnz	copy_data1
   558                           
   559                           ; Clear objects allocated to BANK0 (23 bytes)
   560  0022F4  EE00  F0DF         	lfsr	0,__pbssBANK0
   561  0022F8  0E17               	movlw	23
   562  0022FA                     clear_0:
   563  0022FA  6AEE               	clrf	postinc0,c
   564  0022FC  06E8               	decf	wreg,f,c
   565  0022FE  E1FD               	bnz	clear_0
   566                           
   567                           ; Clear objects allocated to COMRAM (2 bytes)
   568  002300  6A7F               	clrf	(__pbssCOMRAM+1)& (0+255),c
   569  002302  6A7E               	clrf	__pbssCOMRAM& (0+255),c
   570  002304                     end_of_initialization:
   571                           	callstack 0
   572  002304                     __end_of__initialization:
   573                           	callstack 0
   574  002304  0E00               	movlw	low (__Lmediumconst shr (0+16))
   575  002306  6EF8               	movwf	tblptru,c
   576  002308  0100               	movlb	0
   577  00230A  EF67  F00C         	goto	_main	;jump to C main() function
   578                           
   579                           	psect	bssCOMRAM
   580  00007E                     __pbssCOMRAM:
   581                           	callstack 0
   582  00007E                     _sorte:
   583                           	callstack 0
   584  00007E                     	ds	2
   585                           
   586                           	psect	bssBANK0
   587  0000DF                     __pbssBANK0:
   588                           	callstack 0
   589  0000DF                     	ds	10
   590  0000E9                     kpDebounce@valorAntigo:
   591                           	callstack 0
   592  0000E9                     	ds	2
   593  0000EB                     kpDebounce@valorNovo:
   594                           	callstack 0
   595  0000EB                     	ds	2
   596  0000ED                     _valor:
   597                           	callstack 0
   598  0000ED                     	ds	2
   599  0000EF                     _i:
   600                           	callstack 0
   601  0000EF                     	ds	1
   602  0000F0                     _v3:
   603                           	callstack 0
   604  0000F0                     	ds	1
   605  0000F1                     _v2:
   606                           	callstack 0
   607  0000F1                     	ds	1
   608  0000F2                     _v1:
   609                           	callstack 0
   610  0000F2                     	ds	1
   611  0000F3                     _v0:
   612                           	callstack 0
   613  0000F3                     	ds	1
   614  0000F4                     _display:
   615                           	callstack 0
   616  0000F4                     	ds	1
   617  0000F5                     kpDebounce@tempo:
   618                           	callstack 0
   619  0000F5                     	ds	1
   620                           
   621                           	psect	dataBANK0
   622  000080                     __pdataBANK0:
   623                           	callstack 0
   624  000080                     textWait@F2779:
   625                           	callstack 0
   626  000080                     	ds	15
   627  00008F                     textApostas@F2770:
   628                           	callstack 0
   629  00008F                     	ds	15
   630  00009E                     textApostas@F2768:
   631                           	callstack 0
   632  00009E                     	ds	15
   633  0000AD                     textInstrutions@F2765:
   634                           	callstack 0
   635  0000AD                     	ds	15
   636  0000BC                     textInstrutions@F2763:
   637                           	callstack 0
   638  0000BC                     	ds	15
   639  0000CB                     textInit@F2750:
   640                           	callstack 0
   641  0000CB                     	ds	12
   642  0000D7                     textSaldo@F2774:
   643                           	callstack 0
   644  0000D7                     	ds	6
   645  0000DD                     _saldo:
   646                           	callstack 0
   647  0000DD                     	ds	2
   648                           
   649                           	psect	dataBANK1
   650  000100                     __pdataBANK1:
   651                           	callstack 0
   652  000100                     textGameOver@F2786:
   653                           	callstack 0
   654  000100                     	ds	20
   655  000114                     textInit@F2752:
   656                           	callstack 0
   657  000114                     	ds	16
   658  000124                     textApostando@F2806:
   659                           	callstack 0
   660  000124                     	ds	15
   661  000133                     textApostando@F2804:
   662                           	callstack 0
   663  000133                     	ds	15
   664  000142                     textWin@F2796:
   665                           	callstack 0
   666  000142                     	ds	15
   667  000151                     textWin@F2794:
   668                           	callstack 0
   669  000151                     	ds	15
   670  000160                     textLost@F2791:
   671                           	callstack 0
   672  000160                     	ds	15
   673  00016F                     textLost@F2789:
   674                           	callstack 0
   675  00016F                     	ds	15
   676  00017E                     textGameOver@F2784:
   677                           	callstack 0
   678  00017E                     	ds	15
   679  00018D                     textWait@F2781:
   680                           	callstack 0
   681  00018D                     	ds	15
   682                           
   683                           	psect	cstackCOMRAM
   684  000001                     __pcstackCOMRAM:
   685                           	callstack 0
   686  000001                     ??_kpDebounce:
   687  000001                     ?_kpRead:
   688                           	callstack 0
   689  000001                     ?___wmul:
   690                           	callstack 0
   691  000001                     ?___awdiv:
   692                           	callstack 0
   693  000001                     ?___lwdiv:
   694                           	callstack 0
   695  000001                     ?___fladd:
   696                           	callstack 0
   697  000001                     ?___lmul:
   698                           	callstack 0
   699  000001                     ?___aldiv:
   700                           	callstack 0
   701  000001                     ?_time:
   702                           	callstack 0
   703  000001                     Delay40us@i:
   704                           	callstack 0
   705  000001                     delay@i:
   706                           	callstack 0
   707  000001                     digitalWrite@pin:
   708                           	callstack 0
   709  000001                     pinMode@pin:
   710                           	callstack 0
   711  000001                     ___wmul@multiplier:
   712                           	callstack 0
   713  000001                     ___awdiv@dividend:
   714                           	callstack 0
   715  000001                     ___lwdiv@dividend:
   716                           	callstack 0
   717  000001                     time@t:
   718                           	callstack 0
   719  000001                     ___lmul@multiplier:
   720                           	callstack 0
   721  000001                     ___aldiv@dividend:
   722                           	callstack 0
   723  000001                     ___flge@ff1:
   724                           	callstack 0
   725  000001                     ___fladd@b:
   726                           	callstack 0
   727                           
   728                           ; 4 bytes @ 0x0
   729  000001                     	ds	1
   730  000002                     Delay2ms@i:
   731                           	callstack 0
   732  000002                     delay@j:
   733                           	callstack 0
   734                           
   735                           ; 1 bytes @ 0x1
   736  000002                     	ds	1
   737  000003                     verso@k:
   738                           	callstack 0
   739  000003                     inverso@k:
   740                           	callstack 0
   741  000003                     digitalWrite@value:
   742                           	callstack 0
   743  000003                     pinMode@type:
   744                           	callstack 0
   745  000003                     ___wmul@multiplicand:
   746                           	callstack 0
   747  000003                     ___awdiv@divisor:
   748                           	callstack 0
   749  000003                     ___lwdiv@divisor:
   750                           	callstack 0
   751                           
   752                           ; 2 bytes @ 0x2
   753  000003                     	ds	1
   754  000004                     verso@x:
   755                           	callstack 0
   756  000004                     inverso@x:
   757                           	callstack 0
   758                           
   759                           ; 1 bytes @ 0x3
   760  000004                     	ds	1
   761  000005                     ??_digitalWrite:
   762  000005                     ??_pinMode:
   763  000005                     ___awdiv@counter:
   764                           	callstack 0
   765  000005                     ___wmul@product:
   766                           	callstack 0
   767  000005                     ___lwdiv@quotient:
   768                           	callstack 0
   769  000005                     ___lmul@multiplicand:
   770                           	callstack 0
   771  000005                     ___aldiv@divisor:
   772                           	callstack 0
   773  000005                     ___flge@ff2:
   774                           	callstack 0
   775  000005                     ___fladd@a:
   776                           	callstack 0
   777                           
   778                           ; 4 bytes @ 0x4
   779  000005                     	ds	1
   780  000006                     kpDebounce@old_D:
   781                           	callstack 0
   782  000006                     ___awdiv@sign:
   783                           	callstack 0
   784                           
   785                           ; 1 bytes @ 0x5
   786  000006                     	ds	1
   787  000007                     ??_ssdUpdate:
   788  000007                     lcdCommand@old_D:
   789                           	callstack 0
   790  000007                     lcdData@valor:
   791                           	callstack 0
   792  000007                     ___lwdiv@counter:
   793                           	callstack 0
   794  000007                     kpDebounce@k:
   795                           	callstack 0
   796  000007                     ___awdiv@quotient:
   797                           	callstack 0
   798                           
   799                           ; 2 bytes @ 0x6
   800  000007                     	ds	1
   801  000008                     ??_pwmSet:
   802  000008                     lcdCommand@cmd:
   803                           	callstack 0
   804  000008                     lcdData@old_D:
   805                           	callstack 0
   806                           
   807                           ; 1 bytes @ 0x7
   808  000008                     	ds	1
   809  000009                     ??___fladd:
   810  000009                     ??___flge:
   811  000009                     kpDebounce@j:
   812                           	callstack 0
   813  000009                     ___aldiv@counter:
   814                           	callstack 0
   815  000009                     escreve@text:
   816                           	callstack 0
   817  000009                     itoa@value:
   818                           	callstack 0
   819  000009                     srand@s:
   820                           	callstack 0
   821  000009                     ___lmul@product:
   822                           	callstack 0
   823                           
   824                           ; 4 bytes @ 0x8
   825  000009                     	ds	1
   826  00000A                     kpDebounce@i:
   827                           	callstack 0
   828  00000A                     pwmSet@porcento:
   829                           	callstack 0
   830  00000A                     ___aldiv@sign:
   831                           	callstack 0
   832                           
   833                           ; 1 bytes @ 0x9
   834  00000A                     	ds	1
   835  00000B                     ??_srand:
   836  00000B                     escreve@i:
   837                           	callstack 0
   838  00000B                     pwmSet@val:
   839                           	callstack 0
   840  00000B                     itoa@result:
   841                           	callstack 0
   842  00000B                     ___aldiv@quotient:
   843                           	callstack 0
   844                           
   845                           ; 4 bytes @ 0xA
   846  00000B                     	ds	1
   847  00000C                     textInstrutions@text:
   848                           	callstack 0
   849  00000C                     textApostas@text:
   850                           	callstack 0
   851  00000C                     textWait@text:
   852                           	callstack 0
   853  00000C                     textInit@text2:
   854                           	callstack 0
   855                           
   856                           ; 16 bytes @ 0xB
   857  00000C                     	ds	1
   858  00000D                     ?_rand:
   859                           	callstack 0
   860  00000D                     ___fladd@signs:
   861                           	callstack 0
   862  00000D                     itoa@basea:
   863                           	callstack 0
   864                           
   865                           ; 2 bytes @ 0xC
   866  00000D                     	ds	1
   867  00000E                     ___fladd@aexp:
   868                           	callstack 0
   869                           
   870                           ; 1 bytes @ 0xD
   871  00000E                     	ds	1
   872  00000F                     ??_rand:
   873  00000F                     ??_itoa:
   874  00000F                     ___fladd@bexp:
   875                           	callstack 0
   876  00000F                     pwmFrequency@freq:
   877                           	callstack 0
   878                           
   879                           ; 2 bytes @ 0xE
   880  00000F                     	ds	1
   881  000010                     ___fladd@grs:
   882                           	callstack 0
   883                           
   884                           ; 1 bytes @ 0xF
   885  000010                     	ds	1
   886  000011                     itoa@tmp_char:
   887                           	callstack 0
   888                           
   889                           ; 1 bytes @ 0x10
   890  000011                     	ds	1
   891  000012                     itoa@tmp_value:
   892                           	callstack 0
   893                           
   894                           ; 2 bytes @ 0x11
   895  000012                     	ds	1
   896  000013                     ?___awmod:
   897                           	callstack 0
   898  000013                     ___awmod@dividend:
   899                           	callstack 0
   900                           
   901                           ; 2 bytes @ 0x12
   902  000013                     	ds	1
   903  000014                     itoa@ptr1:
   904                           	callstack 0
   905                           
   906                           ; 2 bytes @ 0x13
   907  000014                     	ds	1
   908  000015                     ___awmod@divisor:
   909                           	callstack 0
   910                           
   911                           ; 2 bytes @ 0x14
   912  000015                     	ds	1
   913  000016                     itoa@ptr:
   914                           	callstack 0
   915                           
   916                           ; 2 bytes @ 0x15
   917  000016                     	ds	1
   918  000017                     ___awmod@counter:
   919                           	callstack 0
   920                           
   921                           ; 1 bytes @ 0x16
   922  000017                     	ds	1
   923  000018                     ___awmod@sign:
   924                           	callstack 0
   925  000018                     textSaldo@text:
   926                           	callstack 0
   927                           
   928                           ; 6 bytes @ 0x17
   929  000018                     	ds	1
   930  000019                     ssdDigit@pos:
   931                           	callstack 0
   932                           
   933                           ; 1 bytes @ 0x18
   934  000019                     	ds	1
   935  00001A                     ssdDigit@val:
   936                           	callstack 0
   937                           
   938                           ; 1 bytes @ 0x19
   939  00001A                     	ds	1
   940  00001B                     textInstrutions@text2:
   941                           	callstack 0
   942  00001B                     textApostas@text2:
   943                           	callstack 0
   944  00001B                     textWait@text2:
   945                           	callstack 0
   946                           
   947                           ; 15 bytes @ 0x1A
   948  00001B                     	ds	1
   949  00001C                     textInit@text:
   950                           	callstack 0
   951                           
   952                           ; 12 bytes @ 0x1B
   953  00001C                     	ds	2
   954  00001E                     textSaldo@text2:
   955                           	callstack 0
   956                           
   957                           ; 10 bytes @ 0x1D
   958  00001E                     	ds	10
   959  000028                     textLost@text:
   960                           	callstack 0
   961  000028                     textWin@text:
   962                           	callstack 0
   963  000028                     textGameOver@text2:
   964                           	callstack 0
   965                           
   966                           ; 20 bytes @ 0x27
   967  000028                     	ds	15
   968  000037                     textLost@text2:
   969                           	callstack 0
   970  000037                     textWin@text2:
   971                           	callstack 0
   972                           
   973                           ; 15 bytes @ 0x36
   974  000037                     	ds	5
   975  00003C                     textGameOver@text:
   976                           	callstack 0
   977                           
   978                           ; 15 bytes @ 0x3B
   979  00003C                     	ds	10
   980  000046                     Apostando@ssorte:
   981                           	callstack 0
   982                           
   983                           ; 4 bytes @ 0x45
   984  000046                     	ds	4
   985  00004A                     Apostando@t:
   986                           	callstack 0
   987                           
   988                           ; 4 bytes @ 0x49
   989  00004A                     	ds	4
   990  00004E                     Apostando@tempo:
   991                           	callstack 0
   992                           
   993                           ; 4 bytes @ 0x4D
   994  00004E                     	ds	4
   995  000052                     ??_textApostando:
   996                           
   997                           ; 1 bytes @ 0x51
   998  000052                     	ds	4
   999  000056                     textApostando@text:
  1000                           	callstack 0
  1001                           
  1002                           ; 15 bytes @ 0x55
  1003  000056                     	ds	15
  1004  000065                     textApostando@text2:
  1005                           	callstack 0
  1006                           
  1007                           ; 15 bytes @ 0x64
  1008  000065                     	ds	15
  1009  000074                     ??_main:
  1010                           
  1011                           ; 1 bytes @ 0x73
  1012  000074                     	ds	8
  1013  00007C                     main@tecla:
  1014                           	callstack 0
  1015                           
  1016                           ; 2 bytes @ 0x7B
  1017  00007C                     	ds	2
  1018                           
  1019 ;;
  1020 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
  1021 ;;
  1022 ;; *************** function _main *****************
  1023 ;; Defined at:
  1024 ;;		line 28 in file "main.c"
  1025 ;; Parameters:    Size  Location     Type
  1026 ;;		None
  1027 ;; Auto vars:     Size  Location     Type
  1028 ;;  tempo           4    0        float 
  1029 ;;  tecla           2  123[COMRAM] unsigned int 
  1030 ;; Return value:  Size  Location     Type
  1031 ;;                  1    wreg      void 
  1032 ;; Registers used:
  1033 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1034 ;; Tracked objects:
  1035 ;;		On entry : 0/0
  1036 ;;		On exit  : 0/0
  1037 ;;		Unchanged: 0/0
  1038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1039 ;;      Params:         0       0       0       0       0       0       0
  1040 ;;      Locals:         2       0       0       0       0       0       0
  1041 ;;      Temps:          8       0       0       0       0       0       0
  1042 ;;      Totals:        10       0       0       0       0       0       0
  1043 ;;Total ram usage:       10 bytes
  1044 ;; Hardware stack levels required when called: 7
  1045 ;; This function calls:
  1046 ;;		_kpDebounce
  1047 ;;		_kpInit
  1048 ;;		_kpRead
  1049 ;;		_lcdCommand
  1050 ;;		_lcdInit
  1051 ;;		_pwmInit
  1052 ;;		_srand
  1053 ;;		_ssdInit
  1054 ;;		_textApostando
  1055 ;;		_textApostas
  1056 ;;		_textInit
  1057 ;;		_textInstrutions
  1058 ;;		_textSaldo
  1059 ;;		_textWait
  1060 ;;		_time
  1061 ;; This function is called by:
  1062 ;;		Startup code after reset
  1063 ;; This function uses a non-reentrant model
  1064 ;;
  1065                           
  1066                           	psect	text0
  1067  0018CE                     __ptext0:
  1068                           	callstack 0
  1069  0018CE                     _main:
  1070                           	callstack 24
  1071  0018CE                     
  1072                           ;main.c: 29:     unsigned int tecla = 16;
  1073  0018CE  0E00               	movlw	0
  1074  0018D0  6E7D               	movwf	(main@tecla+1)^0,c
  1075  0018D2  0E10               	movlw	16
  1076  0018D4  6E7C               	movwf	main@tecla^0,c
  1077  0018D6                     
  1078                           ;main.c: 30:     float tempo;;main.c: 32:     srand(time(((void*)0)));
  1079  0018D6  0E00               	movlw	0
  1080  0018D8  6E01               	movwf	time@t^0,c
  1081  0018DA  0E00               	movlw	0
  1082  0018DC  6E02               	movwf	(time@t+1)^0,c
  1083  0018DE  EC08  F012         	call	_time	;wreg free
  1084  0018E2  C001  F074         	movff	?_time,??_main
  1085  0018E6  C002  F075         	movff	?_time+1,??_main+1
  1086  0018EA  C003  F076         	movff	?_time+2,??_main+2
  1087  0018EE  C004  F077         	movff	?_time+3,??_main+3
  1088  0018F2  C005  F078         	movff	?_time+4,??_main+4
  1089  0018F6  C006  F079         	movff	?_time+5,??_main+5
  1090  0018FA  C007  F07A         	movff	?_time+6,??_main+6
  1091  0018FE  C008  F07B         	movff	?_time+7,??_main+7
  1092  001902  C074  F009         	movff	??_main,srand@s
  1093  001906  C076  F00A         	movff	??_main+2,srand@s+1
  1094  00190A  EC9B  F012         	call	_srand	;wreg free
  1095  00190E                     
  1096                           ;main.c: 33:     pwmInit();
  1097  00190E  ECE3  F012         	call	_pwmInit	;wreg free
  1098  001912                     
  1099                           ;main.c: 34:     ssdInit();
  1100  001912  ECB3  F011         	call	_ssdInit	;wreg free
  1101  001916                     
  1102                           ;main.c: 35:     lcdInit();
  1103  001916  ECC5  F00E         	call	_lcdInit	;wreg free
  1104  00191A                     
  1105                           ;main.c: 36:     kpInit();
  1106  00191A  EC01  F013         	call	_kpInit	;wreg free
  1107  00191E                     
  1108                           ;main.c: 37:     lcdCommand(0x0F);
  1109  00191E  0E0F               	movlw	15
  1110  001920  EC4A  F00E         	call	_lcdCommand
  1111  001924                     
  1112                           ;main.c: 38:     textInit();
  1113  001924  ECFE  F010         	call	_textInit	;wreg free
  1114  001928                     
  1115                           ;main.c: 39:     textSaldo();
  1116  001928  EC89  F00E         	call	_textSaldo	;wreg free
  1117  00192C                     
  1118                           ;main.c: 40:     textInstrutions();
  1119  00192C  ECD0  F010         	call	_textInstrutions	;wreg free
  1120  001930                     
  1121                           ;main.c: 41:     textWait();
  1122  001930  ECA2  F010         	call	_textWait	;wreg free
  1123  001934                     l3316:
  1124                           
  1125                           ;main.c: 43:         kpDebounce();
  1126  001934  EC44  F009         	call	_kpDebounce	;wreg free
  1127  001938                     
  1128                           ;main.c: 44:         if (kpRead() != tecla) {
  1129  001938  ECFC  F012         	call	_kpRead	;wreg free
  1130  00193C  507C               	movf	main@tecla^0,w,c
  1131  00193E  1801               	xorwf	?_kpRead^0,w,c
  1132  001940  E109               	bnz	u3440
  1133  001942  507D               	movf	(main@tecla+1)^0,w,c
  1134  001944  1802               	xorwf	(?_kpRead+1)^0,w,c
  1135  001946  B4D8               	btfsc	status,2,c
  1136  001948  EFA8  F00C         	goto	u3441
  1137  00194C  EFAA  F00C         	goto	u3440
  1138  001950                     u3441:
  1139  001950  EF9A  F00C         	goto	l3316
  1140  001954                     u3440:
  1141  001954                     
  1142                           ;main.c: 45:             tecla = kpRead();
  1143  001954  ECFC  F012         	call	_kpRead	;wreg free
  1144  001958  C001  F07C         	movff	?_kpRead,main@tecla
  1145  00195C  C002  F07D         	movff	?_kpRead+1,main@tecla+1
  1146  001960                     
  1147                           ;main.c: 46:             if (((tecla) & (1<<(7)))) {
  1148  001960  AE7C               	btfss	main@tecla^0,7,c
  1149  001962  EFB5  F00C         	goto	u3451
  1150  001966  EFB7  F00C         	goto	u3450
  1151  00196A                     u3451:
  1152  00196A  EFBE  F00C         	goto	l3330
  1153  00196E                     u3450:
  1154  00196E                     
  1155                           ;main.c: 47:                 lcdCommand(0x01);
  1156  00196E  0E01               	movlw	1
  1157  001970  EC4A  F00E         	call	_lcdCommand
  1158  001974                     
  1159                           ;main.c: 48:                 textApostando();
  1160  001974  ECDC  F00C         	call	_textApostando	;wreg free
  1161  001978                     
  1162                           ;main.c: 49:                 textWait();
  1163  001978  ECA2  F010         	call	_textWait	;wreg free
  1164  00197C                     l3330:
  1165                           
  1166                           ;main.c: 51:             if (((tecla) & (1<<(3)))) {
  1167  00197C  A67C               	btfss	main@tecla^0,3,c
  1168  00197E  EFC3  F00C         	goto	u3461
  1169  001982  EFC5  F00C         	goto	u3460
  1170  001986                     u3461:
  1171  001986  EFCE  F00C         	goto	l3340
  1172  00198A                     u3460:
  1173  00198A                     
  1174                           ;main.c: 52:                 lcdCommand(0x01);
  1175  00198A  0E01               	movlw	1
  1176  00198C  EC4A  F00E         	call	_lcdCommand
  1177  001990                     
  1178                           ;main.c: 53:                 textSaldo();
  1179  001990  EC89  F00E         	call	_textSaldo	;wreg free
  1180  001994                     
  1181                           ;main.c: 54:                 textApostas();
  1182  001994  EC2C  F011         	call	_textApostas	;wreg free
  1183  001998                     
  1184                           ;main.c: 55:                 textWait();
  1185  001998  ECA2  F010         	call	_textWait	;wreg free
  1186  00199C                     l3340:
  1187                           
  1188                           ;main.c: 58:             if (((tecla) & (1<<(8)))) {
  1189  00199C  A07D               	btfss	(main@tecla+1)^0,0,c
  1190  00199E  EFD3  F00C         	goto	u3471
  1191  0019A2  EFD5  F00C         	goto	u3470
  1192  0019A6                     u3471:
  1193  0019A6  EF9A  F00C         	goto	l3316
  1194  0019AA                     u3470:
  1195  0019AA                     
  1196                           ;main.c: 59:                 lcdCommand(0x01);
  1197  0019AA  0E01               	movlw	1
  1198  0019AC  EC4A  F00E         	call	_lcdCommand
  1199  0019B0  EF9A  F00C         	goto	l3316
  1200  0019B4  EF00  F000         	goto	start
  1201  0019B8                     __end_of_main:
  1202                           	callstack 0
  1203                           
  1204 ;; *************** function _time *****************
  1205 ;; Defined at:
  1206 ;;		line 6 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/time.c"
  1207 ;; Parameters:    Size  Location     Type
  1208 ;;  t               2    0[COMRAM] PTR long long 
  1209 ;;		 -> NULL(0), 
  1210 ;; Auto vars:     Size  Location     Type
  1211 ;;		None
  1212 ;; Return value:  Size  Location     Type
  1213 ;;                  8    0[COMRAM] long long 
  1214 ;; Registers used:
  1215 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1216 ;; Tracked objects:
  1217 ;;		On entry : 0/0
  1218 ;;		On exit  : 0/0
  1219 ;;		Unchanged: 0/0
  1220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1221 ;;      Params:         8       0       0       0       0       0       0
  1222 ;;      Locals:         0       0       0       0       0       0       0
  1223 ;;      Temps:          0       0       0       0       0       0       0
  1224 ;;      Totals:         8       0       0       0       0       0       0
  1225 ;;Total ram usage:        8 bytes
  1226 ;; Hardware stack levels used: 1
  1227 ;; This function calls:
  1228 ;;		Nothing
  1229 ;; This function is called by:
  1230 ;;		_main
  1231 ;; This function uses a non-reentrant model
  1232 ;;
  1233                           
  1234                           	psect	text1
  1235  002410                     __ptext1:
  1236                           	callstack 0
  1237  002410                     _time:
  1238                           	callstack 30
  1239  002410  5001               	movf	time@t^0,w,c
  1240  002412  1002               	iorwf	(time@t+1)^0,w,c
  1241  002414  B4D8               	btfsc	status,2,c
  1242  002416  EF0F  F012         	goto	u3321
  1243  00241A  EF11  F012         	goto	u3320
  1244  00241E                     u3321:
  1245  00241E  EF25  F012         	goto	l3168
  1246  002422                     u3320:
  1247  002422  C001  FFD9         	movff	time@t,fsr2l
  1248  002426  C002  FFDA         	movff	time@t+1,fsr2h
  1249  00242A  0EFF               	movlw	255
  1250  00242C  6EDE               	movwf	postinc2,c
  1251  00242E  0EFF               	movlw	255
  1252  002430  6EDE               	movwf	postinc2,c
  1253  002432  0EFF               	movlw	255
  1254  002434  6EDE               	movwf	postinc2,c
  1255  002436  0EFF               	movlw	255
  1256  002438  6EDE               	movwf	postinc2,c
  1257  00243A  0EFF               	movlw	255
  1258  00243C  6EDE               	movwf	postinc2,c
  1259  00243E  0EFF               	movlw	255
  1260  002440  6EDE               	movwf	postinc2,c
  1261  002442  0EFF               	movlw	255
  1262  002444  6EDE               	movwf	postinc2,c
  1263  002446  0EFF               	movlw	255
  1264  002448  6EDD               	movwf	postdec2,c
  1265  00244A                     l3168:
  1266  00244A  6801               	setf	?_time^0,c
  1267  00244C  6802               	setf	(?_time+1)^0,c
  1268  00244E  6803               	setf	(?_time+2)^0,c
  1269  002450  6804               	setf	(?_time+3)^0,c
  1270  002452  6805               	setf	(?_time+4)^0,c
  1271  002454  6806               	setf	(?_time+5)^0,c
  1272  002456  6807               	setf	(?_time+6)^0,c
  1273  002458  6808               	setf	(?_time+7)^0,c
  1274  00245A  0012               	return		;funcret
  1275  00245C                     __end_of_time:
  1276                           	callstack 0
  1277                           
  1278 ;; *************** function _textWait *****************
  1279 ;; Defined at:
  1280 ;;		line 167 in file "apostas.c"
  1281 ;; Parameters:    Size  Location     Type
  1282 ;;		None
  1283 ;; Auto vars:     Size  Location     Type
  1284 ;;  text2          15   26[COMRAM] unsigned char [15]
  1285 ;;  text           15   11[COMRAM] unsigned char [15]
  1286 ;; Return value:  Size  Location     Type
  1287 ;;                  1    wreg      void 
  1288 ;; Registers used:
  1289 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1290 ;; Tracked objects:
  1291 ;;		On entry : 0/0
  1292 ;;		On exit  : 0/0
  1293 ;;		Unchanged: 0/0
  1294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1295 ;;      Params:         0       0       0       0       0       0       0
  1296 ;;      Locals:        30       0       0       0       0       0       0
  1297 ;;      Temps:          0       0       0       0       0       0       0
  1298 ;;      Totals:        30       0       0       0       0       0       0
  1299 ;;Total ram usage:       30 bytes
  1300 ;; Hardware stack levels used: 1
  1301 ;; Hardware stack levels required when called: 3
  1302 ;; This function calls:
  1303 ;;		_delay
  1304 ;;		_escreve
  1305 ;;		_lcdCommand
  1306 ;; This function is called by:
  1307 ;;		_main
  1308 ;; This function uses a non-reentrant model
  1309 ;;
  1310                           
  1311                           	psect	text2
  1312  002144                     __ptext2:
  1313                           	callstack 0
  1314  002144                     _textWait:
  1315                           	callstack 27
  1316  002144                     
  1317                           ;apostas.c: 168:     lcdCommand(0x01);
  1318  002144  0E01               	movlw	1
  1319  002146  EC4A  F00E         	call	_lcdCommand
  1320  00214A                     
  1321                           ;apostas.c: 169:     char text[15] = "Esperando";
  1322  00214A  EE20  F080         	lfsr	2,textWait@F2779
  1323  00214E  EE10  F00C         	lfsr	1,textWait@text
  1324  002152  0E0E               	movlw	14
  1325  002154                     u3371:
  1326  002154  CFDB FFE3          	movff	plusw2,plusw1
  1327  002158  06E8               	decf	wreg,f,c
  1328  00215A  E2FC               	bc	u3371
  1329  00215C                     
  1330                           ;apostas.c: 170:     char text2[15] = "Aposte com 2";
  1331  00215C  EE21  F08D         	lfsr	2,textWait@F2781
  1332  002160  EE10  F01B         	lfsr	1,textWait@text2
  1333  002164  0E0E               	movlw	14
  1334  002166                     u3381:
  1335  002166  CFDB FFE3          	movff	plusw2,plusw1
  1336  00216A  06E8               	decf	wreg,f,c
  1337  00216C  E2FC               	bc	u3381
  1338                           
  1339                           ;apostas.c: 171:     lcdCommand(0x80 | (0));
  1340  00216E  0E80               	movlw	128
  1341  002170  EC4A  F00E         	call	_lcdCommand
  1342  002174                     
  1343                           ;apostas.c: 172:     escreve(text);
  1344  002174  0E0C               	movlw	low textWait@text
  1345  002176  6E09               	movwf	escreve@text^0,c
  1346  002178  0E00               	movlw	high textWait@text
  1347  00217A  6E0A               	movwf	(escreve@text+1)^0,c
  1348  00217C  EC50  F012         	call	_escreve	;wreg free
  1349  002180                     
  1350                           ;apostas.c: 173:     lcdCommand(0xC0 | (0));
  1351  002180  0EC0               	movlw	192
  1352  002182  EC4A  F00E         	call	_lcdCommand
  1353                           
  1354                           ;apostas.c: 174:     escreve(text2);
  1355  002186  0E1B               	movlw	low textWait@text2
  1356  002188  6E09               	movwf	escreve@text^0,c
  1357  00218A  0E00               	movlw	high textWait@text2
  1358  00218C  6E0A               	movwf	(escreve@text+1)^0,c
  1359  00218E  EC50  F012         	call	_escreve	;wreg free
  1360  002192                     
  1361                           ;apostas.c: 176:     delay();
  1362  002192  EC2E  F012         	call	_delay	;wreg free
  1363  002196                     
  1364                           ;apostas.c: 177:     delay();
  1365  002196  EC2E  F012         	call	_delay	;wreg free
  1366  00219A                     
  1367                           ;apostas.c: 178:     delay();
  1368  00219A  EC2E  F012         	call	_delay	;wreg free
  1369  00219E  0012               	return		;funcret
  1370  0021A0                     __end_of_textWait:
  1371                           	callstack 0
  1372                           
  1373 ;; *************** function _textInstrutions *****************
  1374 ;; Defined at:
  1375 ;;		line 116 in file "apostas.c"
  1376 ;; Parameters:    Size  Location     Type
  1377 ;;		None
  1378 ;; Auto vars:     Size  Location     Type
  1379 ;;  text2          15   26[COMRAM] unsigned char [15]
  1380 ;;  text           15   11[COMRAM] unsigned char [15]
  1381 ;; Return value:  Size  Location     Type
  1382 ;;                  1    wreg      void 
  1383 ;; Registers used:
  1384 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1385 ;; Tracked objects:
  1386 ;;		On entry : 0/0
  1387 ;;		On exit  : 0/0
  1388 ;;		Unchanged: 0/0
  1389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1390 ;;      Params:         0       0       0       0       0       0       0
  1391 ;;      Locals:        30       0       0       0       0       0       0
  1392 ;;      Temps:          0       0       0       0       0       0       0
  1393 ;;      Totals:        30       0       0       0       0       0       0
  1394 ;;Total ram usage:       30 bytes
  1395 ;; Hardware stack levels used: 1
  1396 ;; Hardware stack levels required when called: 3
  1397 ;; This function calls:
  1398 ;;		_delay
  1399 ;;		_escreve
  1400 ;;		_lcdCommand
  1401 ;; This function is called by:
  1402 ;;		_main
  1403 ;; This function uses a non-reentrant model
  1404 ;;
  1405                           
  1406                           	psect	text3
  1407  0021A0                     __ptext3:
  1408                           	callstack 0
  1409  0021A0                     _textInstrutions:
  1410                           	callstack 27
  1411  0021A0                     
  1412                           ;apostas.c: 117:     char text[15] = "Clique em 1";
  1413  0021A0  EE20  F0BC         	lfsr	2,textInstrutions@F2763
  1414  0021A4  EE10  F00C         	lfsr	1,textInstrutions@text
  1415  0021A8  0E0E               	movlw	14
  1416  0021AA                     u3351:
  1417  0021AA  CFDB FFE3          	movff	plusw2,plusw1
  1418  0021AE  06E8               	decf	wreg,f,c
  1419  0021B0  E2FC               	bc	u3351
  1420                           
  1421                           ;apostas.c: 118:     char text2[15] = "para o saldo";
  1422  0021B2  EE20  F0AD         	lfsr	2,textInstrutions@F2765
  1423  0021B6  EE10  F01B         	lfsr	1,textInstrutions@text2
  1424  0021BA  0E0E               	movlw	14
  1425  0021BC                     u3361:
  1426  0021BC  CFDB FFE3          	movff	plusw2,plusw1
  1427  0021C0  06E8               	decf	wreg,f,c
  1428  0021C2  E2FC               	bc	u3361
  1429  0021C4                     
  1430                           ;apostas.c: 119:     lcdCommand(0x80 | (0));
  1431  0021C4  0E80               	movlw	128
  1432  0021C6  EC4A  F00E         	call	_lcdCommand
  1433  0021CA                     
  1434                           ;apostas.c: 120:     escreve(text);
  1435  0021CA  0E0C               	movlw	low textInstrutions@text
  1436  0021CC  6E09               	movwf	escreve@text^0,c
  1437  0021CE  0E00               	movlw	high textInstrutions@text
  1438  0021D0  6E0A               	movwf	(escreve@text+1)^0,c
  1439  0021D2  EC50  F012         	call	_escreve	;wreg free
  1440  0021D6                     
  1441                           ;apostas.c: 121:     lcdCommand(0xC0 | (0));
  1442  0021D6  0EC0               	movlw	192
  1443  0021D8  EC4A  F00E         	call	_lcdCommand
  1444  0021DC                     
  1445                           ;apostas.c: 122:     escreve(text2);
  1446  0021DC  0E1B               	movlw	low textInstrutions@text2
  1447  0021DE  6E09               	movwf	escreve@text^0,c
  1448  0021E0  0E00               	movlw	high textInstrutions@text2
  1449  0021E2  6E0A               	movwf	(escreve@text+1)^0,c
  1450  0021E4  EC50  F012         	call	_escreve	;wreg free
  1451  0021E8                     
  1452                           ;apostas.c: 124:     delay();
  1453  0021E8  EC2E  F012         	call	_delay	;wreg free
  1454  0021EC                     
  1455                           ;apostas.c: 125:     delay();
  1456  0021EC  EC2E  F012         	call	_delay	;wreg free
  1457  0021F0                     
  1458                           ;apostas.c: 126:     delay();
  1459  0021F0  EC2E  F012         	call	_delay	;wreg free
  1460  0021F4                     
  1461                           ;apostas.c: 129:     lcdCommand(0x01);
  1462  0021F4  0E01               	movlw	1
  1463  0021F6  EC4A  F00E         	call	_lcdCommand
  1464  0021FA  0012               	return		;funcret
  1465  0021FC                     __end_of_textInstrutions:
  1466                           	callstack 0
  1467                           
  1468 ;; *************** function _textInit *****************
  1469 ;; Defined at:
  1470 ;;		line 74 in file "apostas.c"
  1471 ;; Parameters:    Size  Location     Type
  1472 ;;		None
  1473 ;; Auto vars:     Size  Location     Type
  1474 ;;  text2          16   11[COMRAM] unsigned char [16]
  1475 ;;  text           12   27[COMRAM] unsigned char [12]
  1476 ;; Return value:  Size  Location     Type
  1477 ;;                  1    wreg      void 
  1478 ;; Registers used:
  1479 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1480 ;; Tracked objects:
  1481 ;;		On entry : 0/0
  1482 ;;		On exit  : 0/0
  1483 ;;		Unchanged: 0/0
  1484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1485 ;;      Params:         0       0       0       0       0       0       0
  1486 ;;      Locals:        28       0       0       0       0       0       0
  1487 ;;      Temps:          0       0       0       0       0       0       0
  1488 ;;      Totals:        28       0       0       0       0       0       0
  1489 ;;Total ram usage:       28 bytes
  1490 ;; Hardware stack levels used: 1
  1491 ;; Hardware stack levels required when called: 3
  1492 ;; This function calls:
  1493 ;;		_delay
  1494 ;;		_escreve
  1495 ;;		_lcdCommand
  1496 ;; This function is called by:
  1497 ;;		_main
  1498 ;; This function uses a non-reentrant model
  1499 ;;
  1500                           
  1501                           	psect	text4
  1502  0021FC                     __ptext4:
  1503                           	callstack 0
  1504  0021FC                     _textInit:
  1505                           	callstack 27
  1506  0021FC                     
  1507                           ;apostas.c: 75:     char text[12] = "Bem Vindo ao";
  1508  0021FC  EE20  F0CB         	lfsr	2,textInit@F2750
  1509  002200  EE10  F01C         	lfsr	1,textInit@text
  1510  002204  0E0B               	movlw	11
  1511  002206                     u3331:
  1512  002206  CFDB FFE3          	movff	plusw2,plusw1
  1513  00220A  06E8               	decf	wreg,f,c
  1514  00220C  E2FC               	bc	u3331
  1515                           
  1516                           ;apostas.c: 76:     char text2[16] = "CASSINO UNIFEI!!!";
  1517  00220E  EE21  F014         	lfsr	2,textInit@F2752
  1518  002212  EE10  F00C         	lfsr	1,textInit@text2
  1519  002216  0E0F               	movlw	15
  1520  002218                     u3341:
  1521  002218  CFDB FFE3          	movff	plusw2,plusw1
  1522  00221C  06E8               	decf	wreg,f,c
  1523  00221E  E2FC               	bc	u3341
  1524  002220                     
  1525                           ;apostas.c: 77:     lcdCommand(0x80 | (0));
  1526  002220  0E80               	movlw	128
  1527  002222  EC4A  F00E         	call	_lcdCommand
  1528  002226                     
  1529                           ;apostas.c: 78:     escreve(text);
  1530  002226  0E1C               	movlw	low textInit@text
  1531  002228  6E09               	movwf	escreve@text^0,c
  1532  00222A  0E00               	movlw	high textInit@text
  1533  00222C  6E0A               	movwf	(escreve@text+1)^0,c
  1534  00222E  EC50  F012         	call	_escreve	;wreg free
  1535  002232                     
  1536                           ;apostas.c: 79:     lcdCommand(0xC0 | (0));
  1537  002232  0EC0               	movlw	192
  1538  002234  EC4A  F00E         	call	_lcdCommand
  1539  002238                     
  1540                           ;apostas.c: 80:     escreve(text2);
  1541  002238  0E0C               	movlw	low textInit@text2
  1542  00223A  6E09               	movwf	escreve@text^0,c
  1543  00223C  0E00               	movlw	high textInit@text2
  1544  00223E  6E0A               	movwf	(escreve@text+1)^0,c
  1545  002240  EC50  F012         	call	_escreve	;wreg free
  1546  002244                     
  1547                           ;apostas.c: 82:     delay();
  1548  002244  EC2E  F012         	call	_delay	;wreg free
  1549  002248                     
  1550                           ;apostas.c: 83:     delay();
  1551  002248  EC2E  F012         	call	_delay	;wreg free
  1552  00224C                     
  1553                           ;apostas.c: 84:     delay();
  1554  00224C  EC2E  F012         	call	_delay	;wreg free
  1555  002250                     
  1556                           ;apostas.c: 86:     lcdCommand(0x01);
  1557  002250  0E01               	movlw	1
  1558  002252  EC4A  F00E         	call	_lcdCommand
  1559  002256  0012               	return		;funcret
  1560  002258                     __end_of_textInit:
  1561                           	callstack 0
  1562                           
  1563 ;; *************** function _textApostas *****************
  1564 ;; Defined at:
  1565 ;;		line 132 in file "apostas.c"
  1566 ;; Parameters:    Size  Location     Type
  1567 ;;		None
  1568 ;; Auto vars:     Size  Location     Type
  1569 ;;  text2          15   26[COMRAM] unsigned char [15]
  1570 ;;  text           15   11[COMRAM] unsigned char [15]
  1571 ;; Return value:  Size  Location     Type
  1572 ;;                  1    wreg      void 
  1573 ;; Registers used:
  1574 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1575 ;; Tracked objects:
  1576 ;;		On entry : 0/0
  1577 ;;		On exit  : 0/0
  1578 ;;		Unchanged: 0/0
  1579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1580 ;;      Params:         0       0       0       0       0       0       0
  1581 ;;      Locals:        30       0       0       0       0       0       0
  1582 ;;      Temps:          0       0       0       0       0       0       0
  1583 ;;      Totals:        30       0       0       0       0       0       0
  1584 ;;Total ram usage:       30 bytes
  1585 ;; Hardware stack levels used: 1
  1586 ;; Hardware stack levels required when called: 3
  1587 ;; This function calls:
  1588 ;;		_delay
  1589 ;;		_escreve
  1590 ;;		_lcdCommand
  1591 ;; This function is called by:
  1592 ;;		_main
  1593 ;; This function uses a non-reentrant model
  1594 ;;
  1595                           
  1596                           	psect	text5
  1597  002258                     __ptext5:
  1598                           	callstack 0
  1599  002258                     _textApostas:
  1600                           	callstack 27
  1601  002258                     
  1602                           ;apostas.c: 133:     char text[15] = "Clique em 2";
  1603  002258  EE20  F09E         	lfsr	2,textApostas@F2768
  1604  00225C  EE10  F00C         	lfsr	1,textApostas@text
  1605  002260  0E0E               	movlw	14
  1606  002262                     u3421:
  1607  002262  CFDB FFE3          	movff	plusw2,plusw1
  1608  002266  06E8               	decf	wreg,f,c
  1609  002268  E2FC               	bc	u3421
  1610                           
  1611                           ;apostas.c: 134:     char text2[15] = "para APOSTAR!";
  1612  00226A  EE20  F08F         	lfsr	2,textApostas@F2770
  1613  00226E  EE10  F01B         	lfsr	1,textApostas@text2
  1614  002272  0E0E               	movlw	14
  1615  002274                     u3431:
  1616  002274  CFDB FFE3          	movff	plusw2,plusw1
  1617  002278  06E8               	decf	wreg,f,c
  1618  00227A  E2FC               	bc	u3431
  1619  00227C                     
  1620                           ;apostas.c: 135:     lcdCommand(0x80 | (0));
  1621  00227C  0E80               	movlw	128
  1622  00227E  EC4A  F00E         	call	_lcdCommand
  1623  002282                     
  1624                           ;apostas.c: 136:     escreve(text);
  1625  002282  0E0C               	movlw	low textApostas@text
  1626  002284  6E09               	movwf	escreve@text^0,c
  1627  002286  0E00               	movlw	high textApostas@text
  1628  002288  6E0A               	movwf	(escreve@text+1)^0,c
  1629  00228A  EC50  F012         	call	_escreve	;wreg free
  1630  00228E                     
  1631                           ;apostas.c: 137:     lcdCommand(0xC0 | (0));
  1632  00228E  0EC0               	movlw	192
  1633  002290  EC4A  F00E         	call	_lcdCommand
  1634  002294                     
  1635                           ;apostas.c: 138:     escreve(text2);
  1636  002294  0E1B               	movlw	low textApostas@text2
  1637  002296  6E09               	movwf	escreve@text^0,c
  1638  002298  0E00               	movlw	high textApostas@text2
  1639  00229A  6E0A               	movwf	(escreve@text+1)^0,c
  1640  00229C  EC50  F012         	call	_escreve	;wreg free
  1641  0022A0                     
  1642                           ;apostas.c: 140:     delay();
  1643  0022A0  EC2E  F012         	call	_delay	;wreg free
  1644  0022A4                     
  1645                           ;apostas.c: 141:     delay();
  1646  0022A4  EC2E  F012         	call	_delay	;wreg free
  1647  0022A8                     
  1648                           ;apostas.c: 142:     delay();
  1649  0022A8  EC2E  F012         	call	_delay	;wreg free
  1650  0022AC                     
  1651                           ;apostas.c: 144:     lcdCommand(0x01);
  1652  0022AC  0E01               	movlw	1
  1653  0022AE  EC4A  F00E         	call	_lcdCommand
  1654  0022B2  0012               	return		;funcret
  1655  0022B4                     __end_of_textApostas:
  1656                           	callstack 0
  1657                           
  1658 ;; *************** function _textApostando *****************
  1659 ;; Defined at:
  1660 ;;		line 255 in file "apostas.c"
  1661 ;; Parameters:    Size  Location     Type
  1662 ;;		None
  1663 ;; Auto vars:     Size  Location     Type
  1664 ;;  text2          15  100[COMRAM] unsigned char [15]
  1665 ;;  text           15   85[COMRAM] unsigned char [15]
  1666 ;; Return value:  Size  Location     Type
  1667 ;;                  1    wreg      void 
  1668 ;; Registers used:
  1669 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1670 ;; Tracked objects:
  1671 ;;		On entry : 0/0
  1672 ;;		On exit  : 0/0
  1673 ;;		Unchanged: 0/0
  1674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1675 ;;      Params:         0       0       0       0       0       0       0
  1676 ;;      Locals:        30       0       0       0       0       0       0
  1677 ;;      Temps:          4       0       0       0       0       0       0
  1678 ;;      Totals:        34       0       0       0       0       0       0
  1679 ;;Total ram usage:       34 bytes
  1680 ;; Hardware stack levels used: 1
  1681 ;; Hardware stack levels required when called: 6
  1682 ;; This function calls:
  1683 ;;		_Apostando
  1684 ;;		_escreve
  1685 ;;		_inverso
  1686 ;;		_lcdCommand
  1687 ;;		_pwmFrequency
  1688 ;;		_pwmSet
  1689 ;;		_textGameOver
  1690 ;;		_verso
  1691 ;; This function is called by:
  1692 ;;		_main
  1693 ;; This function uses a non-reentrant model
  1694 ;;
  1695                           
  1696                           	psect	text6
  1697  0019B8                     __ptext6:
  1698                           	callstack 0
  1699  0019B8                     _textApostando:
  1700                           	callstack 24
  1701  0019B8                     
  1702                           ;apostas.c: 256:     if (saldo - 200 <= 0) {
  1703  0019B8  0E38               	movlw	56
  1704  0019BA  6E52               	movwf	??_textApostando^0,c
  1705  0019BC  0EFF               	movlw	255
  1706  0019BE  6E53               	movwf	(??_textApostando+1)^0,c
  1707  0019C0  C0DD  F054         	movff	_saldo,??_textApostando+2
  1708  0019C4  C0DE  F055         	movff	_saldo+1,??_textApostando+3
  1709  0019C8  5052               	movf	??_textApostando^0,w,c
  1710  0019CA  2654               	addwf	(??_textApostando+2)^0,f,c
  1711  0019CC  5053               	movf	(??_textApostando+1)^0,w,c
  1712  0019CE  2255               	addwfc	(??_textApostando+3)^0,f,c
  1713  0019D0  BE55               	btfsc	(??_textApostando+3)^0,7,c
  1714  0019D2  EFF5  F00C         	goto	u3390
  1715  0019D6  5055               	movf	(??_textApostando+3)^0,w,c
  1716  0019D8  E106               	bnz	u3391
  1717  0019DA  0454               	decf	(??_textApostando+2)^0,w,c
  1718  0019DC  B0D8               	btfsc	status,0,c
  1719  0019DE  EFF3  F00C         	goto	u3391
  1720  0019E2  EFF5  F00C         	goto	u3390
  1721  0019E6                     u3391:
  1722  0019E6  EFF9  F00C         	goto	l3244
  1723  0019EA                     u3390:
  1724  0019EA                     
  1725                           ;apostas.c: 257:         textGameOver();
  1726  0019EA  EC12  F010         	call	_textGameOver	;wreg free
  1727                           
  1728                           ;apostas.c: 258:     } else {
  1729  0019EE  EF41  F00D         	goto	l380
  1730  0019F2                     l3244:
  1731                           
  1732                           ;apostas.c: 259:         char text[15] = "Apostando";
  1733  0019F2  EE21  F033         	lfsr	2,textApostando@F2804
  1734  0019F6  EE10  F056         	lfsr	1,textApostando@text
  1735  0019FA  0E0E               	movlw	14
  1736  0019FC                     u3401:
  1737  0019FC  CFDB FFE3          	movff	plusw2,plusw1
  1738  001A00  06E8               	decf	wreg,f,c
  1739  001A02  E2FC               	bc	u3401
  1740                           
  1741                           ;apostas.c: 260:         char text2[15] = "Custo: -200 ";
  1742  001A04  EE21  F024         	lfsr	2,textApostando@F2806
  1743  001A08  EE10  F065         	lfsr	1,textApostando@text2
  1744  001A0C  0E0E               	movlw	14
  1745  001A0E                     u3411:
  1746  001A0E  CFDB FFE3          	movff	plusw2,plusw1
  1747  001A12  06E8               	decf	wreg,f,c
  1748  001A14  E2FC               	bc	u3411
  1749  001A16                     
  1750                           ;apostas.c: 261:         lcdCommand(0x80 | (0));
  1751  001A16  0E80               	movlw	128
  1752  001A18  EC4A  F00E         	call	_lcdCommand
  1753  001A1C                     
  1754                           ;apostas.c: 262:         escreve(text);
  1755  001A1C  0E56               	movlw	low textApostando@text
  1756  001A1E  6E09               	movwf	escreve@text^0,c
  1757  001A20  0E00               	movlw	high textApostando@text
  1758  001A22  6E0A               	movwf	(escreve@text+1)^0,c
  1759  001A24  EC50  F012         	call	_escreve	;wreg free
  1760  001A28                     
  1761                           ;apostas.c: 263:         lcdCommand(0xC0 | (0));
  1762  001A28  0EC0               	movlw	192
  1763  001A2A  EC4A  F00E         	call	_lcdCommand
  1764  001A2E                     
  1765                           ;apostas.c: 264:         escreve(text2);
  1766  001A2E  0E65               	movlw	low textApostando@text2
  1767  001A30  6E09               	movwf	escreve@text^0,c
  1768  001A32  0E00               	movlw	high textApostando@text2
  1769  001A34  6E0A               	movwf	(escreve@text+1)^0,c
  1770  001A36  EC50  F012         	call	_escreve	;wreg free
  1771  001A3A                     
  1772                           ;apostas.c: 266:         saldo -= 200;
  1773  001A3A  0100               	movlb	0	; () banked
  1774  001A3C  0E38               	movlw	56
  1775  001A3E  27DD               	addwf	_saldo& (0+255),f,b
  1776  001A40  0EFF               	movlw	255
  1777  001A42  23DE               	addwfc	(_saldo+1)& (0+255),f,b
  1778  001A44                     
  1779                           ; BSR set to: 0
  1780                           ;apostas.c: 267:         pwmSet(99);
  1781  001A44  0E63               	movlw	99
  1782  001A46  EC72  F00F         	call	_pwmSet
  1783  001A4A                     
  1784                           ;apostas.c: 268:         pwmFrequency(1000);
  1785  001A4A  0E03               	movlw	3
  1786  001A4C  6E10               	movwf	(pwmFrequency@freq+1)^0,c
  1787  001A4E  0EE8               	movlw	232
  1788  001A50  6E0F               	movwf	pwmFrequency@freq^0,c
  1789  001A52  ECC2  F012         	call	_pwmFrequency	;wreg free
  1790  001A56                     
  1791                           ;apostas.c: 269:         TRISD = 0x00;
  1792  001A56  0E00               	movlw	0
  1793  001A58  6E95               	movwf	149,c	;volatile
  1794  001A5A                     
  1795                           ;apostas.c: 270:         PORTD = 0x00;
  1796  001A5A  0E00               	movlw	0
  1797  001A5C  6E83               	movwf	131,c	;volatile
  1798  001A5E                     
  1799                           ;apostas.c: 271:         verso();
  1800  001A5E  EC6D  F012         	call	_verso	;wreg free
  1801  001A62                     
  1802                           ;apostas.c: 272:         inverso();
  1803  001A62  EC84  F012         	call	_inverso	;wreg free
  1804  001A66                     
  1805                           ;apostas.c: 273:         pwmSet(0);
  1806  001A66  0E00               	movlw	0
  1807  001A68  EC72  F00F         	call	_pwmSet
  1808  001A6C                     
  1809                           ;apostas.c: 274:         pwmFrequency(0);
  1810  001A6C  0E00               	movlw	0
  1811  001A6E  6E10               	movwf	(pwmFrequency@freq+1)^0,c
  1812  001A70  0E00               	movlw	0
  1813  001A72  6E0F               	movwf	pwmFrequency@freq^0,c
  1814  001A74  ECC2  F012         	call	_pwmFrequency	;wreg free
  1815  001A78                     
  1816                           ;apostas.c: 275:         Apostando();
  1817  001A78  EC8D  F005         	call	_Apostando	;wreg free
  1818  001A7C                     
  1819                           ;apostas.c: 277:         lcdCommand(0x01);
  1820  001A7C  0E01               	movlw	1
  1821  001A7E  EC4A  F00E         	call	_lcdCommand
  1822  001A82                     l380:
  1823  001A82  0012               	return		;funcret
  1824  001A84                     __end_of_textApostando:
  1825                           	callstack 0
  1826                           
  1827 ;; *************** function _verso *****************
  1828 ;; Defined at:
  1829 ;;		line 52 in file "apostas.c"
  1830 ;; Parameters:    Size  Location     Type
  1831 ;;		None
  1832 ;; Auto vars:     Size  Location     Type
  1833 ;;  x               1    3[COMRAM] unsigned char 
  1834 ;;  k               1    2[COMRAM] unsigned char 
  1835 ;; Return value:  Size  Location     Type
  1836 ;;                  1    wreg      void 
  1837 ;; Registers used:
  1838 ;;		wreg, status,2, status,0, cstack
  1839 ;; Tracked objects:
  1840 ;;		On entry : 0/0
  1841 ;;		On exit  : 0/0
  1842 ;;		Unchanged: 0/0
  1843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1844 ;;      Params:         0       0       0       0       0       0       0
  1845 ;;      Locals:         2       0       0       0       0       0       0
  1846 ;;      Temps:          0       0       0       0       0       0       0
  1847 ;;      Totals:         2       0       0       0       0       0       0
  1848 ;;Total ram usage:        2 bytes
  1849 ;; Hardware stack levels used: 1
  1850 ;; Hardware stack levels required when called: 1
  1851 ;; This function calls:
  1852 ;;		_delay
  1853 ;; This function is called by:
  1854 ;;		_textApostando
  1855 ;; This function uses a non-reentrant model
  1856 ;;
  1857                           
  1858                           	psect	text7
  1859  0024DA                     __ptext7:
  1860                           	callstack 0
  1861  0024DA                     _verso:
  1862                           	callstack 28
  1863  0024DA                     
  1864                           ;apostas.c: 53:     delay();
  1865  0024DA  EC2E  F012         	call	_delay	;wreg free
  1866  0024DE                     
  1867                           ;apostas.c: 54:     unsigned char k, x;;apostas.c: 55:     x = 0b10000001;
  1868  0024DE  0E81               	movlw	129
  1869  0024E0  6E04               	movwf	verso@x^0,c
  1870  0024E2                     
  1871                           ;apostas.c: 56:     for (k = 0; k < 8; k++) {
  1872  0024E2  0E00               	movlw	0
  1873  0024E4  6E03               	movwf	verso@k^0,c
  1874  0024E6                     l2986:
  1875                           
  1876                           ;apostas.c: 57:         delay();
  1877  0024E6  EC2E  F012         	call	_delay	;wreg free
  1878  0024EA                     
  1879                           ;apostas.c: 58:         PORTD = x;
  1880  0024EA  C004  FF83         	movff	verso@x,3971	;volatile
  1881  0024EE                     
  1882                           ;apostas.c: 59:         x = x << 1;
  1883  0024EE  5004               	movf	verso@x^0,w,c
  1884  0024F0  2404               	addwf	verso@x^0,w,c
  1885  0024F2  6E04               	movwf	verso@x^0,c
  1886  0024F4                     
  1887                           ;apostas.c: 60:     }
  1888  0024F4  2A03               	incf	verso@k^0,f,c
  1889  0024F6  0E07               	movlw	7
  1890  0024F8  6403               	cpfsgt	verso@k^0,c
  1891  0024FA  EF81  F012         	goto	u3101
  1892  0024FE  EF83  F012         	goto	u3100
  1893  002502                     u3101:
  1894  002502  EF73  F012         	goto	l2986
  1895  002506                     u3100:
  1896  002506  0012               	return		;funcret
  1897  002508                     __end_of_verso:
  1898                           	callstack 0
  1899                           
  1900 ;; *************** function _textGameOver *****************
  1901 ;; Defined at:
  1902 ;;		line 182 in file "apostas.c"
  1903 ;; Parameters:    Size  Location     Type
  1904 ;;		None
  1905 ;; Auto vars:     Size  Location     Type
  1906 ;;  text2          20   39[COMRAM] unsigned char [20]
  1907 ;;  text           15   59[COMRAM] unsigned char [15]
  1908 ;; Return value:  Size  Location     Type
  1909 ;;                  1    wreg      void 
  1910 ;; Registers used:
  1911 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1912 ;; Tracked objects:
  1913 ;;		On entry : 0/0
  1914 ;;		On exit  : 0/0
  1915 ;;		Unchanged: 0/0
  1916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1917 ;;      Params:         0       0       0       0       0       0       0
  1918 ;;      Locals:        35       0       0       0       0       0       0
  1919 ;;      Temps:          0       0       0       0       0       0       0
  1920 ;;      Totals:        35       0       0       0       0       0       0
  1921 ;;Total ram usage:       35 bytes
  1922 ;; Hardware stack levels used: 1
  1923 ;; Hardware stack levels required when called: 4
  1924 ;; This function calls:
  1925 ;;		_delay
  1926 ;;		_escreve
  1927 ;;		_lcdCommand
  1928 ;;		_textSaldo
  1929 ;; This function is called by:
  1930 ;;		_textApostando
  1931 ;; This function uses a non-reentrant model
  1932 ;;
  1933                           
  1934                           	psect	text8
  1935  002024                     __ptext8:
  1936                           	callstack 0
  1937  002024                     _textGameOver:
  1938                           	callstack 25
  1939  002024                     
  1940                           ;apostas.c: 183:     char text[15] = "GAME OVER";
  1941  002024  EE21  F07E         	lfsr	2,textGameOver@F2784
  1942  002028  EE10  F03C         	lfsr	1,textGameOver@text
  1943  00202C  0E0E               	movlw	14
  1944  00202E                     u3121:
  1945  00202E  CFDB FFE3          	movff	plusw2,plusw1
  1946  002032  06E8               	decf	wreg,f,c
  1947  002034  E2FC               	bc	u3121
  1948                           
  1949                           ;apostas.c: 184:     char text2[20] = "saldo insuf...";
  1950  002036  EE21  F000         	lfsr	2,textGameOver@F2786
  1951  00203A  EE10  F028         	lfsr	1,textGameOver@text2
  1952  00203E  0E13               	movlw	19
  1953  002040                     u3131:
  1954  002040  CFDB FFE3          	movff	plusw2,plusw1
  1955  002044  06E8               	decf	wreg,f,c
  1956  002046  E2FC               	bc	u3131
  1957  002048                     
  1958                           ;apostas.c: 185:     lcdCommand(0x80 | (0));
  1959  002048  0E80               	movlw	128
  1960  00204A  EC4A  F00E         	call	_lcdCommand
  1961  00204E                     
  1962                           ;apostas.c: 186:     escreve(text);
  1963  00204E  0E3C               	movlw	low textGameOver@text
  1964  002050  6E09               	movwf	escreve@text^0,c
  1965  002052  0E00               	movlw	high textGameOver@text
  1966  002054  6E0A               	movwf	(escreve@text+1)^0,c
  1967  002056  EC50  F012         	call	_escreve	;wreg free
  1968  00205A                     
  1969                           ;apostas.c: 187:     lcdCommand(0xC0 | (0));
  1970  00205A  0EC0               	movlw	192
  1971  00205C  EC4A  F00E         	call	_lcdCommand
  1972  002060                     
  1973                           ;apostas.c: 188:     escreve(text2);
  1974  002060  0E28               	movlw	low textGameOver@text2
  1975  002062  6E09               	movwf	escreve@text^0,c
  1976  002064  0E00               	movlw	high textGameOver@text2
  1977  002066  6E0A               	movwf	(escreve@text+1)^0,c
  1978  002068  EC50  F012         	call	_escreve	;wreg free
  1979  00206C                     
  1980                           ;apostas.c: 190:     delay();
  1981  00206C  EC2E  F012         	call	_delay	;wreg free
  1982  002070                     
  1983                           ;apostas.c: 191:     delay();
  1984  002070  EC2E  F012         	call	_delay	;wreg free
  1985  002074                     
  1986                           ;apostas.c: 192:     delay();
  1987  002074  EC2E  F012         	call	_delay	;wreg free
  1988  002078                     
  1989                           ;apostas.c: 193:     lcdCommand(0x01);
  1990  002078  0E01               	movlw	1
  1991  00207A  EC4A  F00E         	call	_lcdCommand
  1992  00207E                     
  1993                           ;apostas.c: 194:     textSaldo();
  1994  00207E  EC89  F00E         	call	_textSaldo	;wreg free
  1995  002082  0012               	return		;funcret
  1996  002084                     __end_of_textGameOver:
  1997                           	callstack 0
  1998                           
  1999 ;; *************** function _pwmSet *****************
  2000 ;; Defined at:
  2001 ;;		line 24 in file "pwm.c"
  2002 ;; Parameters:    Size  Location     Type
  2003 ;;  porcento        1    wreg     unsigned char 
  2004 ;; Auto vars:     Size  Location     Type
  2005 ;;  porcento        1    9[COMRAM] unsigned char 
  2006 ;;  val             2   10[COMRAM] unsigned int 
  2007 ;; Return value:  Size  Location     Type
  2008 ;;                  1    wreg      void 
  2009 ;; Registers used:
  2010 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2011 ;; Tracked objects:
  2012 ;;		On entry : 0/0
  2013 ;;		On exit  : 0/0
  2014 ;;		Unchanged: 0/0
  2015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2016 ;;      Params:         0       0       0       0       0       0       0
  2017 ;;      Locals:         3       0       0       0       0       0       0
  2018 ;;      Temps:          2       0       0       0       0       0       0
  2019 ;;      Totals:         5       0       0       0       0       0       0
  2020 ;;Total ram usage:        5 bytes
  2021 ;; Hardware stack levels used: 1
  2022 ;; Hardware stack levels required when called: 1
  2023 ;; This function calls:
  2024 ;;		___lwdiv
  2025 ;;		___wmul
  2026 ;; This function is called by:
  2027 ;;		_textApostando
  2028 ;; This function uses a non-reentrant model
  2029 ;;
  2030                           
  2031                           	psect	text9
  2032  001EE4                     __ptext9:
  2033                           	callstack 0
  2034  001EE4                     _pwmSet:
  2035                           	callstack 28
  2036                           
  2037                           ;incstack = 0
  2038                           ;pwmSet@porcento stored from wreg
  2039  001EE4  6E0A               	movwf	pwmSet@porcento^0,c
  2040  001EE6                     
  2041                           ;pwm.c: 24: void pwmSet(unsigned char porcento);pwm.c: 25: {;pwm.c: 31:  unsigned int va
      +                          l = ((unsigned int)porcento) *(PR2+1);
  2042  001EE6  0E01               	movlw	1
  2043  001EE8  24CB               	addwf	203,w,c	;volatile
  2044  001EEA  6E01               	movwf	___wmul@multiplier^0,c
  2045  001EEC  6A02               	clrf	(___wmul@multiplier+1)^0,c
  2046  001EEE  0E00               	movlw	0
  2047  001EF0  2202               	addwfc	(___wmul@multiplier+1)^0,f,c
  2048  001EF2  C00A  F003         	movff	pwmSet@porcento,___wmul@multiplicand
  2049  001EF6  6A04               	clrf	(___wmul@multiplicand+1)^0,c
  2050  001EF8  ECAF  F012         	call	___wmul	;wreg free
  2051  001EFC  C001  F00B         	movff	?___wmul,pwmSet@val
  2052  001F00  C002  F00C         	movff	?___wmul+1,pwmSet@val+1
  2053  001F04                     
  2054                           ;pwm.c: 33:     val = val / 25;
  2055  001F04  C00B  F001         	movff	pwmSet@val,___lwdiv@dividend
  2056  001F08  C00C  F002         	movff	pwmSet@val+1,___lwdiv@dividend+1
  2057  001F0C  0E00               	movlw	0
  2058  001F0E  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  2059  001F10  0E19               	movlw	25
  2060  001F12  6E03               	movwf	___lwdiv@divisor^0,c
  2061  001F14  EC01  F00F         	call	___lwdiv	;wreg free
  2062  001F18  C001  F00B         	movff	?___lwdiv,pwmSet@val
  2063  001F1C  C002  F00C         	movff	?___lwdiv+1,pwmSet@val+1
  2064  001F20                     
  2065                           ;pwm.c: 35:  val &= 0x03ff;
  2066  001F20  0EFF               	movlw	255
  2067  001F22  160B               	andwf	pwmSet@val^0,f,c
  2068  001F24  0E03               	movlw	3
  2069  001F26  160C               	andwf	(pwmSet@val+1)^0,f,c
  2070  001F28                     
  2071                           ;pwm.c: 37:  CCPR1L = val >> 2;
  2072  001F28  C00B  F008         	movff	pwmSet@val,??_pwmSet
  2073  001F2C  C00C  F009         	movff	pwmSet@val+1,??_pwmSet+1
  2074  001F30  90D8               	bcf	status,0,c
  2075  001F32  3209               	rrcf	(??_pwmSet+1)^0,f,c
  2076  001F34  3208               	rrcf	??_pwmSet^0,f,c
  2077  001F36  90D8               	bcf	status,0,c
  2078  001F38  3209               	rrcf	(??_pwmSet+1)^0,f,c
  2079  001F3A  3208               	rrcf	??_pwmSet^0,f,c
  2080  001F3C  5008               	movf	??_pwmSet^0,w,c
  2081  001F3E  6EBE               	movwf	190,c	;volatile
  2082  001F40                     
  2083                           ;pwm.c: 39:  CCP1CON |= (val & 0x0003) << 4;
  2084  001F40  C00B  F008         	movff	pwmSet@val,??_pwmSet	;volatile
  2085  001F44  0E03               	movlw	3
  2086  001F46  1608               	andwf	??_pwmSet^0,f,c
  2087  001F48  3808               	swapf	??_pwmSet^0,w,c
  2088  001F4A  0BF0               	andlw	240
  2089  001F4C  12BD               	iorwf	189,f,c	;volatile
  2090  001F4E  0012               	return		;funcret
  2091  001F50                     __end_of_pwmSet:
  2092                           	callstack 0
  2093                           
  2094 ;; *************** function ___lwdiv *****************
  2095 ;; Defined at:
  2096 ;;		line 7 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/lwdiv.c"
  2097 ;; Parameters:    Size  Location     Type
  2098 ;;  dividend        2    0[COMRAM] unsigned int 
  2099 ;;  divisor         2    2[COMRAM] unsigned int 
  2100 ;; Auto vars:     Size  Location     Type
  2101 ;;  quotient        2    4[COMRAM] unsigned int 
  2102 ;;  counter         1    6[COMRAM] unsigned char 
  2103 ;; Return value:  Size  Location     Type
  2104 ;;                  2    0[COMRAM] unsigned int 
  2105 ;; Registers used:
  2106 ;;		wreg, status,2, status,0
  2107 ;; Tracked objects:
  2108 ;;		On entry : 0/0
  2109 ;;		On exit  : 0/0
  2110 ;;		Unchanged: 0/0
  2111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2112 ;;      Params:         4       0       0       0       0       0       0
  2113 ;;      Locals:         3       0       0       0       0       0       0
  2114 ;;      Temps:          0       0       0       0       0       0       0
  2115 ;;      Totals:         7       0       0       0       0       0       0
  2116 ;;Total ram usage:        7 bytes
  2117 ;; Hardware stack levels used: 1
  2118 ;; This function calls:
  2119 ;;		Nothing
  2120 ;; This function is called by:
  2121 ;;		_pwmSet
  2122 ;; This function uses a non-reentrant model
  2123 ;;
  2124                           
  2125                           	psect	text10
  2126  001E02                     __ptext10:
  2127                           	callstack 0
  2128  001E02                     ___lwdiv:
  2129                           	callstack 28
  2130  001E02  0E00               	movlw	0
  2131  001E04  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  2132  001E06  0E00               	movlw	0
  2133  001E08  6E05               	movwf	___lwdiv@quotient^0,c
  2134  001E0A  5003               	movf	___lwdiv@divisor^0,w,c
  2135  001E0C  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  2136  001E0E  B4D8               	btfsc	status,2,c
  2137  001E10  EF0C  F00F         	goto	u2871
  2138  001E14  EF0E  F00F         	goto	u2870
  2139  001E18                     u2871:
  2140  001E18  EF36  F00F         	goto	l874
  2141  001E1C                     u2870:
  2142  001E1C  0E01               	movlw	1
  2143  001E1E  6E07               	movwf	___lwdiv@counter^0,c
  2144  001E20  EF16  F00F         	goto	l2910
  2145  001E24                     l2908:
  2146  001E24  90D8               	bcf	status,0,c
  2147  001E26  3603               	rlcf	___lwdiv@divisor^0,f,c
  2148  001E28  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  2149  001E2A  2A07               	incf	___lwdiv@counter^0,f,c
  2150  001E2C                     l2910:
  2151  001E2C  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  2152  001E2E  EF1B  F00F         	goto	u2881
  2153  001E32  EF1D  F00F         	goto	u2880
  2154  001E36                     u2881:
  2155  001E36  EF12  F00F         	goto	l2908
  2156  001E3A                     u2880:
  2157  001E3A                     l2912:
  2158  001E3A  90D8               	bcf	status,0,c
  2159  001E3C  3605               	rlcf	___lwdiv@quotient^0,f,c
  2160  001E3E  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  2161  001E40  5003               	movf	___lwdiv@divisor^0,w,c
  2162  001E42  5C01               	subwf	___lwdiv@dividend^0,w,c
  2163  001E44  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  2164  001E46  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  2165  001E48  A0D8               	btfss	status,0,c
  2166  001E4A  EF29  F00F         	goto	u2891
  2167  001E4E  EF2B  F00F         	goto	u2890
  2168  001E52                     u2891:
  2169  001E52  EF30  F00F         	goto	l2920
  2170  001E56                     u2890:
  2171  001E56  5003               	movf	___lwdiv@divisor^0,w,c
  2172  001E58  5E01               	subwf	___lwdiv@dividend^0,f,c
  2173  001E5A  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  2174  001E5C  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  2175  001E5E  8005               	bsf	___lwdiv@quotient^0,0,c
  2176  001E60                     l2920:
  2177  001E60  90D8               	bcf	status,0,c
  2178  001E62  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  2179  001E64  3203               	rrcf	___lwdiv@divisor^0,f,c
  2180  001E66  2E07               	decfsz	___lwdiv@counter^0,f,c
  2181  001E68  EF1D  F00F         	goto	l2912
  2182  001E6C                     l874:
  2183  001E6C  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  2184  001E70  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2185  001E74  0012               	return		;funcret
  2186  001E76                     __end_of___lwdiv:
  2187                           	callstack 0
  2188                           
  2189 ;; *************** function _inverso *****************
  2190 ;; Defined at:
  2191 ;;		line 63 in file "apostas.c"
  2192 ;; Parameters:    Size  Location     Type
  2193 ;;		None
  2194 ;; Auto vars:     Size  Location     Type
  2195 ;;  x               1    3[COMRAM] unsigned char 
  2196 ;;  k               1    2[COMRAM] unsigned char 
  2197 ;; Return value:  Size  Location     Type
  2198 ;;                  1    wreg      void 
  2199 ;; Registers used:
  2200 ;;		wreg, status,2, status,0, cstack
  2201 ;; Tracked objects:
  2202 ;;		On entry : 0/0
  2203 ;;		On exit  : 0/0
  2204 ;;		Unchanged: 0/0
  2205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2206 ;;      Params:         0       0       0       0       0       0       0
  2207 ;;      Locals:         2       0       0       0       0       0       0
  2208 ;;      Temps:          0       0       0       0       0       0       0
  2209 ;;      Totals:         2       0       0       0       0       0       0
  2210 ;;Total ram usage:        2 bytes
  2211 ;; Hardware stack levels used: 1
  2212 ;; Hardware stack levels required when called: 1
  2213 ;; This function calls:
  2214 ;;		_delay
  2215 ;; This function is called by:
  2216 ;;		_textApostando
  2217 ;; This function uses a non-reentrant model
  2218 ;;
  2219                           
  2220                           	psect	text11
  2221  002508                     __ptext11:
  2222                           	callstack 0
  2223  002508                     _inverso:
  2224                           	callstack 28
  2225  002508                     
  2226                           ;apostas.c: 64:     delay();
  2227  002508  EC2E  F012         	call	_delay	;wreg free
  2228  00250C                     
  2229                           ;apostas.c: 65:     unsigned char k, x;;apostas.c: 66:     x = 0b10000000;
  2230  00250C  0E80               	movlw	128
  2231  00250E  6E04               	movwf	inverso@x^0,c
  2232  002510                     
  2233                           ;apostas.c: 67:     for (k = 0; k < 8; k++) {
  2234  002510  0E00               	movlw	0
  2235  002512  6E03               	movwf	inverso@k^0,c
  2236  002514                     l3006:
  2237                           
  2238                           ;apostas.c: 68:         delay();
  2239  002514  EC2E  F012         	call	_delay	;wreg free
  2240  002518                     
  2241                           ;apostas.c: 69:         PORTD = x;
  2242  002518  C004  FF83         	movff	inverso@x,3971	;volatile
  2243  00251C                     
  2244                           ;apostas.c: 70:         x = x >> 1;
  2245  00251C  90D8               	bcf	status,0,c
  2246  00251E  3004               	rrcf	inverso@x^0,w,c
  2247  002520  6E04               	movwf	inverso@x^0,c
  2248  002522                     
  2249                           ;apostas.c: 71:     }
  2250  002522  2A03               	incf	inverso@k^0,f,c
  2251  002524  0E07               	movlw	7
  2252  002526  6403               	cpfsgt	inverso@k^0,c
  2253  002528  EF98  F012         	goto	u3111
  2254  00252C  EF9A  F012         	goto	u3110
  2255  002530                     u3111:
  2256  002530  EF8A  F012         	goto	l3006
  2257  002534                     u3110:
  2258  002534  0012               	return		;funcret
  2259  002536                     __end_of_inverso:
  2260                           	callstack 0
  2261                           
  2262 ;; *************** function _Apostando *****************
  2263 ;; Defined at:
  2264 ;;		line 230 in file "apostas.c"
  2265 ;; Parameters:    Size  Location     Type
  2266 ;;		None
  2267 ;; Auto vars:     Size  Location     Type
  2268 ;;  tempo           4   77[COMRAM] float 
  2269 ;;  t               4   73[COMRAM] float 
  2270 ;;  ssorte          4   69[COMRAM] unsigned char [4]
  2271 ;; Return value:  Size  Location     Type
  2272 ;;                  1    wreg      void 
  2273 ;; Registers used:
  2274 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2275 ;; Tracked objects:
  2276 ;;		On entry : 0/0
  2277 ;;		On exit  : 0/0
  2278 ;;		Unchanged: 0/0
  2279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2280 ;;      Params:         0       0       0       0       0       0       0
  2281 ;;      Locals:        12       0       0       0       0       0       0
  2282 ;;      Temps:          0       0       0       0       0       0       0
  2283 ;;      Totals:        12       0       0       0       0       0       0
  2284 ;;Total ram usage:       12 bytes
  2285 ;; Hardware stack levels used: 1
  2286 ;; Hardware stack levels required when called: 5
  2287 ;; This function calls:
  2288 ;;		___awdiv
  2289 ;;		___awmod
  2290 ;;		___fladd
  2291 ;;		___flge
  2292 ;;		_digitalWrite
  2293 ;;		_itoa
  2294 ;;		_rand
  2295 ;;		_ssdDigit
  2296 ;;		_ssdUpdate
  2297 ;;		_textLost
  2298 ;;		_textWin
  2299 ;; This function is called by:
  2300 ;;		_textApostando
  2301 ;; This function uses a non-reentrant model
  2302 ;;
  2303                           
  2304                           	psect	text12
  2305  000B1A                     __ptext12:
  2306                           	callstack 0
  2307  000B1A                     _Apostando:
  2308                           	callstack 24
  2309  000B1A                     
  2310                           ;apostas.c: 231:     sorte = rand() % 10000;
  2311  000B1A  EC3B  F00F         	call	_rand	;wreg free
  2312  000B1E  C00D  F013         	movff	?_rand,___awmod@dividend
  2313  000B22  C00E  F014         	movff	?_rand+1,___awmod@dividend+1
  2314  000B26  0E27               	movlw	39
  2315  000B28  6E16               	movwf	(___awmod@divisor+1)^0,c
  2316  000B2A  0E10               	movlw	16
  2317  000B2C  6E15               	movwf	___awmod@divisor^0,c
  2318  000B2E  ECA4  F00D         	call	___awmod	;wreg free
  2319  000B32  C013  F07E         	movff	?___awmod,_sorte
  2320  000B36  C014  F07F         	movff	?___awmod+1,_sorte+1
  2321  000B3A                     
  2322                           ;apostas.c: 232:     sorte -= 1;
  2323  000B3A  067E               	decf	_sorte^0,f,c
  2324  000B3C  A0D8               	btfss	status,0,c
  2325  000B3E  067F               	decf	(_sorte+1)^0,f,c
  2326  000B40                     
  2327                           ;apostas.c: 233:     char ssorte[4];;apostas.c: 234:     itoa(sorte, ssorte, 10);
  2328  000B40  C07E  F009         	movff	_sorte,itoa@value
  2329  000B44  C07F  F00A         	movff	_sorte+1,itoa@value+1
  2330  000B48  0E46               	movlw	low Apostando@ssorte
  2331  000B4A  6E0B               	movwf	itoa@result^0,c
  2332  000B4C  0E00               	movlw	high Apostando@ssorte
  2333  000B4E  6E0C               	movwf	(itoa@result+1)^0,c
  2334  000B50  0E00               	movlw	0
  2335  000B52  6E0E               	movwf	(itoa@basea+1)^0,c
  2336  000B54  0E0A               	movlw	10
  2337  000B56  6E0D               	movwf	itoa@basea^0,c
  2338  000B58  EC03  F00A         	call	_itoa	;wreg free
  2339  000B5C                     
  2340                           ;apostas.c: 235:     for (float t = 0; t < 200; t++) {
  2341  000B5C  0E00               	movlw	0
  2342  000B5E  6E4A               	movwf	Apostando@t^0,c
  2343  000B60  0E00               	movlw	0
  2344  000B62  6E4B               	movwf	(Apostando@t+1)^0,c
  2345  000B64  0E00               	movlw	0
  2346  000B66  6E4C               	movwf	(Apostando@t+2)^0,c
  2347  000B68  0E00               	movlw	0
  2348  000B6A  6E4D               	movwf	(Apostando@t+3)^0,c
  2349  000B6C  C04A  F001         	movff	Apostando@t,___flge@ff1
  2350  000B70  C04B  F002         	movff	Apostando@t+1,___flge@ff1+1
  2351  000B74  C04C  F003         	movff	Apostando@t+2,___flge@ff1+2
  2352  000B78  C04D  F004         	movff	Apostando@t+3,___flge@ff1+3
  2353  000B7C  0E00               	movlw	0
  2354  000B7E  6E05               	movwf	___flge@ff2^0,c
  2355  000B80  0E00               	movlw	0
  2356  000B82  6E06               	movwf	(___flge@ff2+1)^0,c
  2357  000B84  0E48               	movlw	72
  2358  000B86  6E07               	movwf	(___flge@ff2+2)^0,c
  2359  000B88  0E43               	movlw	67
  2360  000B8A  6E08               	movwf	(___flge@ff2+3)^0,c
  2361  000B8C  ECE5  F00B         	call	___flge	;wreg free
  2362  000B90  A0D8               	btfss	status,0,c
  2363  000B92  EFCD  F005         	goto	u3141
  2364  000B96  EFCF  F005         	goto	u3140
  2365  000B9A                     u3141:
  2366  000B9A  EFD1  F005         	goto	l3048
  2367  000B9E                     u3140:
  2368  000B9E  EFAC  F006         	goto	l3062
  2369  000BA2                     l3048:
  2370                           
  2371                           ;apostas.c: 236:         ssdDigit(sorte / 1000, 0);
  2372  000BA2  0E00               	movlw	0
  2373  000BA4  6E19               	movwf	ssdDigit@pos^0,c
  2374  000BA6  C07E  F001         	movff	_sorte,___awdiv@dividend
  2375  000BAA  C07F  F002         	movff	_sorte+1,___awdiv@dividend+1
  2376  000BAE  0E03               	movlw	3
  2377  000BB0  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2378  000BB2  0EE8               	movlw	232
  2379  000BB4  6E03               	movwf	___awdiv@divisor^0,c
  2380  000BB6  EC42  F00D         	call	___awdiv	;wreg free
  2381  000BBA  5001               	movf	?___awdiv^0,w,c
  2382  000BBC  EC87  F011         	call	_ssdDigit
  2383                           
  2384                           ;apostas.c: 237:         ssdDigit((sorte / 100) % 10, 1);
  2385  000BC0  0E01               	movlw	1
  2386  000BC2  6E19               	movwf	ssdDigit@pos^0,c
  2387  000BC4  0E00               	movlw	0
  2388  000BC6  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2389  000BC8  0E64               	movlw	100
  2390  000BCA  6E03               	movwf	___awdiv@divisor^0,c
  2391  000BCC  C07E  F001         	movff	_sorte,___awdiv@dividend
  2392  000BD0  C07F  F002         	movff	_sorte+1,___awdiv@dividend+1
  2393  000BD4  EC42  F00D         	call	___awdiv	;wreg free
  2394  000BD8  C001  F013         	movff	?___awdiv,___awmod@dividend
  2395  000BDC  C002  F014         	movff	?___awdiv+1,___awmod@dividend+1
  2396  000BE0  0E00               	movlw	0
  2397  000BE2  6E16               	movwf	(___awmod@divisor+1)^0,c
  2398  000BE4  0E0A               	movlw	10
  2399  000BE6  6E15               	movwf	___awmod@divisor^0,c
  2400  000BE8  ECA4  F00D         	call	___awmod	;wreg free
  2401  000BEC  5013               	movf	?___awmod^0,w,c
  2402  000BEE  EC87  F011         	call	_ssdDigit
  2403                           
  2404                           ;apostas.c: 238:         ssdDigit((sorte / 10) % 10, 2);
  2405  000BF2  0E02               	movlw	2
  2406  000BF4  6E19               	movwf	ssdDigit@pos^0,c
  2407  000BF6  0E00               	movlw	0
  2408  000BF8  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2409  000BFA  0E0A               	movlw	10
  2410  000BFC  6E03               	movwf	___awdiv@divisor^0,c
  2411  000BFE  C07E  F001         	movff	_sorte,___awdiv@dividend
  2412  000C02  C07F  F002         	movff	_sorte+1,___awdiv@dividend+1
  2413  000C06  EC42  F00D         	call	___awdiv	;wreg free
  2414  000C0A  C001  F013         	movff	?___awdiv,___awmod@dividend
  2415  000C0E  C002  F014         	movff	?___awdiv+1,___awmod@dividend+1
  2416  000C12  0E00               	movlw	0
  2417  000C14  6E16               	movwf	(___awmod@divisor+1)^0,c
  2418  000C16  0E0A               	movlw	10
  2419  000C18  6E15               	movwf	___awmod@divisor^0,c
  2420  000C1A  ECA4  F00D         	call	___awmod	;wreg free
  2421  000C1E  5013               	movf	?___awmod^0,w,c
  2422  000C20  EC87  F011         	call	_ssdDigit
  2423                           
  2424                           ;apostas.c: 239:         ssdDigit(sorte % 10, 3);
  2425  000C24  0E03               	movlw	3
  2426  000C26  6E19               	movwf	ssdDigit@pos^0,c
  2427  000C28  C07E  F013         	movff	_sorte,___awmod@dividend
  2428  000C2C  C07F  F014         	movff	_sorte+1,___awmod@dividend+1
  2429  000C30  0E00               	movlw	0
  2430  000C32  6E16               	movwf	(___awmod@divisor+1)^0,c
  2431  000C34  0E0A               	movlw	10
  2432  000C36  6E15               	movwf	___awmod@divisor^0,c
  2433  000C38  ECA4  F00D         	call	___awmod	;wreg free
  2434  000C3C  5013               	movf	?___awmod^0,w,c
  2435  000C3E  EC87  F011         	call	_ssdDigit
  2436  000C42                     
  2437                           ;apostas.c: 240:         ssdUpdate();
  2438  000C42  ECB2  F00A         	call	_ssdUpdate	;wreg free
  2439  000C46                     
  2440                           ;apostas.c: 241:         for (float tempo = 0; tempo < 100; tempo++);
  2441  000C46  0E00               	movlw	0
  2442  000C48  6E4E               	movwf	Apostando@tempo^0,c
  2443  000C4A  0E00               	movlw	0
  2444  000C4C  6E4F               	movwf	(Apostando@tempo+1)^0,c
  2445  000C4E  0E00               	movlw	0
  2446  000C50  6E50               	movwf	(Apostando@tempo+2)^0,c
  2447  000C52  0E00               	movlw	0
  2448  000C54  6E51               	movwf	(Apostando@tempo+3)^0,c
  2449  000C56  C04E  F001         	movff	Apostando@tempo,___flge@ff1
  2450  000C5A  C04F  F002         	movff	Apostando@tempo+1,___flge@ff1+1
  2451  000C5E  C050  F003         	movff	Apostando@tempo+2,___flge@ff1+2
  2452  000C62  C051  F004         	movff	Apostando@tempo+3,___flge@ff1+3
  2453  000C66  0E00               	movlw	0
  2454  000C68  6E05               	movwf	___flge@ff2^0,c
  2455  000C6A  0E00               	movlw	0
  2456  000C6C  6E06               	movwf	(___flge@ff2+1)^0,c
  2457  000C6E  0EC8               	movlw	200
  2458  000C70  6E07               	movwf	(___flge@ff2+2)^0,c
  2459  000C72  0E42               	movlw	66
  2460  000C74  6E08               	movwf	(___flge@ff2+3)^0,c
  2461  000C76  ECE5  F00B         	call	___flge	;wreg free
  2462  000C7A  A0D8               	btfss	status,0,c
  2463  000C7C  EF42  F006         	goto	u3151
  2464  000C80  EF44  F006         	goto	u3150
  2465  000C84                     u3151:
  2466  000C84  EF46  F006         	goto	l3058
  2467  000C88                     u3150:
  2468  000C88  EF79  F006         	goto	l3060
  2469  000C8C                     l3058:
  2470  000C8C  C04E  F001         	movff	Apostando@tempo,___fladd@b
  2471  000C90  C04F  F002         	movff	Apostando@tempo+1,___fladd@b+1
  2472  000C94  C050  F003         	movff	Apostando@tempo+2,___fladd@b+2
  2473  000C98  C051  F004         	movff	Apostando@tempo+3,___fladd@b+3
  2474  000C9C  0E00               	movlw	0
  2475  000C9E  6E05               	movwf	___fladd@a^0,c
  2476  000CA0  0E00               	movlw	0
  2477  000CA2  6E06               	movwf	(___fladd@a+1)^0,c
  2478  000CA4  0E80               	movlw	128
  2479  000CA6  6E07               	movwf	(___fladd@a+2)^0,c
  2480  000CA8  0E3F               	movlw	63
  2481  000CAA  6E08               	movwf	(___fladd@a+3)^0,c
  2482  000CAC  EC2D  F003         	call	___fladd	;wreg free
  2483  000CB0  C001  F04E         	movff	?___fladd,Apostando@tempo
  2484  000CB4  C002  F04F         	movff	?___fladd+1,Apostando@tempo+1
  2485  000CB8  C003  F050         	movff	?___fladd+2,Apostando@tempo+2
  2486  000CBC  C004  F051         	movff	?___fladd+3,Apostando@tempo+3
  2487  000CC0  C04E  F001         	movff	Apostando@tempo,___flge@ff1
  2488  000CC4  C04F  F002         	movff	Apostando@tempo+1,___flge@ff1+1
  2489  000CC8  C050  F003         	movff	Apostando@tempo+2,___flge@ff1+2
  2490  000CCC  C051  F004         	movff	Apostando@tempo+3,___flge@ff1+3
  2491  000CD0  0E00               	movlw	0
  2492  000CD2  6E05               	movwf	___flge@ff2^0,c
  2493  000CD4  0E00               	movlw	0
  2494  000CD6  6E06               	movwf	(___flge@ff2+1)^0,c
  2495  000CD8  0EC8               	movlw	200
  2496  000CDA  6E07               	movwf	(___flge@ff2+2)^0,c
  2497  000CDC  0E42               	movlw	66
  2498  000CDE  6E08               	movwf	(___flge@ff2+3)^0,c
  2499  000CE0  ECE5  F00B         	call	___flge	;wreg free
  2500  000CE4  A0D8               	btfss	status,0,c
  2501  000CE6  EF77  F006         	goto	u3161
  2502  000CEA  EF79  F006         	goto	u3160
  2503  000CEE                     u3161:
  2504  000CEE  EF46  F006         	goto	l3058
  2505  000CF2                     u3160:
  2506  000CF2                     l3060:
  2507                           
  2508                           ;apostas.c: 242:     }
  2509  000CF2  C04A  F001         	movff	Apostando@t,___fladd@b
  2510  000CF6  C04B  F002         	movff	Apostando@t+1,___fladd@b+1
  2511  000CFA  C04C  F003         	movff	Apostando@t+2,___fladd@b+2
  2512  000CFE  C04D  F004         	movff	Apostando@t+3,___fladd@b+3
  2513  000D02  0E00               	movlw	0
  2514  000D04  6E05               	movwf	___fladd@a^0,c
  2515  000D06  0E00               	movlw	0
  2516  000D08  6E06               	movwf	(___fladd@a+1)^0,c
  2517  000D0A  0E80               	movlw	128
  2518  000D0C  6E07               	movwf	(___fladd@a+2)^0,c
  2519  000D0E  0E3F               	movlw	63
  2520  000D10  6E08               	movwf	(___fladd@a+3)^0,c
  2521  000D12  EC2D  F003         	call	___fladd	;wreg free
  2522  000D16  C001  F04A         	movff	?___fladd,Apostando@t
  2523  000D1A  C002  F04B         	movff	?___fladd+1,Apostando@t+1
  2524  000D1E  C003  F04C         	movff	?___fladd+2,Apostando@t+2
  2525  000D22  C004  F04D         	movff	?___fladd+3,Apostando@t+3
  2526  000D26  C04A  F001         	movff	Apostando@t,___flge@ff1
  2527  000D2A  C04B  F002         	movff	Apostando@t+1,___flge@ff1+1
  2528  000D2E  C04C  F003         	movff	Apostando@t+2,___flge@ff1+2
  2529  000D32  C04D  F004         	movff	Apostando@t+3,___flge@ff1+3
  2530  000D36  0E00               	movlw	0
  2531  000D38  6E05               	movwf	___flge@ff2^0,c
  2532  000D3A  0E00               	movlw	0
  2533  000D3C  6E06               	movwf	(___flge@ff2+1)^0,c
  2534  000D3E  0E48               	movlw	72
  2535  000D40  6E07               	movwf	(___flge@ff2+2)^0,c
  2536  000D42  0E43               	movlw	67
  2537  000D44  6E08               	movwf	(___flge@ff2+3)^0,c
  2538  000D46  ECE5  F00B         	call	___flge	;wreg free
  2539  000D4A  A0D8               	btfss	status,0,c
  2540  000D4C  EFAA  F006         	goto	u3171
  2541  000D50  EFAC  F006         	goto	u3170
  2542  000D54                     u3171:
  2543  000D54  EFD1  F005         	goto	l3048
  2544  000D58                     u3170:
  2545  000D58                     l3062:
  2546                           
  2547                           ;apostas.c: 244:     digitalWrite(PIN_A2, 0);
  2548  000D58  0E00               	movlw	0
  2549  000D5A  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2550  000D5C  0E02               	movlw	2
  2551  000D5E  6E01               	movwf	digitalWrite@pin^0,c
  2552  000D60  0E00               	movlw	0
  2553  000D62  6E04               	movwf	(digitalWrite@value+1)^0,c
  2554  000D64  0E00               	movlw	0
  2555  000D66  6E03               	movwf	digitalWrite@value^0,c
  2556  000D68  EC1D  F008         	call	_digitalWrite	;wreg free
  2557                           
  2558                           ;apostas.c: 245:     digitalWrite(PIN_A3, 0);
  2559  000D6C  0E00               	movlw	0
  2560  000D6E  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2561  000D70  0E03               	movlw	3
  2562  000D72  6E01               	movwf	digitalWrite@pin^0,c
  2563  000D74  0E00               	movlw	0
  2564  000D76  6E04               	movwf	(digitalWrite@value+1)^0,c
  2565  000D78  0E00               	movlw	0
  2566  000D7A  6E03               	movwf	digitalWrite@value^0,c
  2567  000D7C  EC1D  F008         	call	_digitalWrite	;wreg free
  2568                           
  2569                           ;apostas.c: 246:     digitalWrite(PIN_A4, 0);
  2570  000D80  0E00               	movlw	0
  2571  000D82  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2572  000D84  0E04               	movlw	4
  2573  000D86  6E01               	movwf	digitalWrite@pin^0,c
  2574  000D88  0E00               	movlw	0
  2575  000D8A  6E04               	movwf	(digitalWrite@value+1)^0,c
  2576  000D8C  0E00               	movlw	0
  2577  000D8E  6E03               	movwf	digitalWrite@value^0,c
  2578  000D90  EC1D  F008         	call	_digitalWrite	;wreg free
  2579                           
  2580                           ;apostas.c: 247:     digitalWrite(PIN_A5, 0);
  2581  000D94  0E00               	movlw	0
  2582  000D96  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2583  000D98  0E05               	movlw	5
  2584  000D9A  6E01               	movwf	digitalWrite@pin^0,c
  2585  000D9C  0E00               	movlw	0
  2586  000D9E  6E04               	movwf	(digitalWrite@value+1)^0,c
  2587  000DA0  0E00               	movlw	0
  2588  000DA2  6E03               	movwf	digitalWrite@value^0,c
  2589  000DA4  EC1D  F008         	call	_digitalWrite	;wreg free
  2590  000DA8                     
  2591                           ;apostas.c: 248:     if (ssorte[0] == ssorte[1] && ssorte[2] == ssorte[3] && ssorte[1] =
      +                          = ssorte[2]) {
  2592  000DA8  5046               	movf	Apostando@ssorte^0,w,c
  2593  000DAA  1847               	xorwf	(Apostando@ssorte+1)^0,w,c
  2594  000DAC  A4D8               	btfss	status,2,c
  2595  000DAE  EFDB  F006         	goto	u3181
  2596  000DB2  EFDD  F006         	goto	u3180
  2597  000DB6                     u3181:
  2598  000DB6  EFF3  F006         	goto	l3072
  2599  000DBA                     u3180:
  2600  000DBA  5049               	movf	(Apostando@ssorte+3)^0,w,c
  2601  000DBC  1848               	xorwf	(Apostando@ssorte+2)^0,w,c
  2602  000DBE  A4D8               	btfss	status,2,c
  2603  000DC0  EFE4  F006         	goto	u3191
  2604  000DC4  EFE6  F006         	goto	u3190
  2605  000DC8                     u3191:
  2606  000DC8  EFF3  F006         	goto	l3072
  2607  000DCC                     u3190:
  2608  000DCC  5048               	movf	(Apostando@ssorte+2)^0,w,c
  2609  000DCE  1847               	xorwf	(Apostando@ssorte+1)^0,w,c
  2610  000DD0  A4D8               	btfss	status,2,c
  2611  000DD2  EFED  F006         	goto	u3201
  2612  000DD6  EFEF  F006         	goto	u3200
  2613  000DDA                     u3201:
  2614  000DDA  EFF3  F006         	goto	l3072
  2615  000DDE                     u3200:
  2616  000DDE                     
  2617                           ;apostas.c: 249:         textWin();
  2618  000DDE  ECA8  F00F         	call	_textWin	;wreg free
  2619                           
  2620                           ;apostas.c: 250:     } else {
  2621  000DE2  EFF5  F006         	goto	l371
  2622  000DE6                     l3072:
  2623                           
  2624                           ;apostas.c: 251:         textLost();
  2625  000DE6  EC42  F010         	call	_textLost	;wreg free
  2626  000DEA                     l371:
  2627  000DEA  0012               	return		;funcret
  2628  000DEC                     __end_of_Apostando:
  2629                           	callstack 0
  2630                           
  2631 ;; *************** function _textWin *****************
  2632 ;; Defined at:
  2633 ;;		line 212 in file "apostas.c"
  2634 ;; Parameters:    Size  Location     Type
  2635 ;;		None
  2636 ;; Auto vars:     Size  Location     Type
  2637 ;;  text2          15   54[COMRAM] unsigned char [15]
  2638 ;;  text           15   39[COMRAM] unsigned char [15]
  2639 ;; Return value:  Size  Location     Type
  2640 ;;                  1    wreg      void 
  2641 ;; Registers used:
  2642 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2643 ;; Tracked objects:
  2644 ;;		On entry : 0/0
  2645 ;;		On exit  : 0/0
  2646 ;;		Unchanged: 0/0
  2647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2648 ;;      Params:         0       0       0       0       0       0       0
  2649 ;;      Locals:        30       0       0       0       0       0       0
  2650 ;;      Temps:          0       0       0       0       0       0       0
  2651 ;;      Totals:        30       0       0       0       0       0       0
  2652 ;;Total ram usage:       30 bytes
  2653 ;; Hardware stack levels used: 1
  2654 ;; Hardware stack levels required when called: 4
  2655 ;; This function calls:
  2656 ;;		_delay
  2657 ;;		_escreve
  2658 ;;		_lcdCommand
  2659 ;;		_textSaldo
  2660 ;; This function is called by:
  2661 ;;		_Apostando
  2662 ;; This function uses a non-reentrant model
  2663 ;;
  2664                           
  2665                           	psect	text13
  2666  001F50                     __ptext13:
  2667                           	callstack 0
  2668  001F50                     _textWin:
  2669                           	callstack 24
  2670  001F50                     
  2671                           ;apostas.c: 213:     char text[15] = "VC GANHOU";
  2672  001F50  EE21  F051         	lfsr	2,textWin@F2794
  2673  001F54  EE10  F028         	lfsr	1,textWin@text
  2674  001F58  0E0E               	movlw	14
  2675  001F5A                     u2281:
  2676  001F5A  CFDB FFE3          	movff	plusw2,plusw1
  2677  001F5E  06E8               	decf	wreg,f,c
  2678  001F60  E2FC               	bc	u2281
  2679                           
  2680                           ;apostas.c: 214:     char text2[15] = "Custo: +200 ";
  2681  001F62  EE21  F042         	lfsr	2,textWin@F2796
  2682  001F66  EE10  F037         	lfsr	1,textWin@text2
  2683  001F6A  0E0E               	movlw	14
  2684  001F6C                     u2291:
  2685  001F6C  CFDB FFE3          	movff	plusw2,plusw1
  2686  001F70  06E8               	decf	wreg,f,c
  2687  001F72  E2FC               	bc	u2291
  2688  001F74                     
  2689                           ;apostas.c: 215:     lcdCommand(0x80 | (0));
  2690  001F74  0E80               	movlw	128
  2691  001F76  EC4A  F00E         	call	_lcdCommand
  2692  001F7A                     
  2693                           ;apostas.c: 216:     escreve(text);
  2694  001F7A  0E28               	movlw	low textWin@text
  2695  001F7C  6E09               	movwf	escreve@text^0,c
  2696  001F7E  0E00               	movlw	high textWin@text
  2697  001F80  6E0A               	movwf	(escreve@text+1)^0,c
  2698  001F82  EC50  F012         	call	_escreve	;wreg free
  2699  001F86                     
  2700                           ;apostas.c: 217:     lcdCommand(0xC0 | (0));
  2701  001F86  0EC0               	movlw	192
  2702  001F88  EC4A  F00E         	call	_lcdCommand
  2703  001F8C                     
  2704                           ;apostas.c: 218:     escreve(text2);
  2705  001F8C  0E37               	movlw	low textWin@text2
  2706  001F8E  6E09               	movwf	escreve@text^0,c
  2707  001F90  0E00               	movlw	high textWin@text2
  2708  001F92  6E0A               	movwf	(escreve@text+1)^0,c
  2709  001F94  EC50  F012         	call	_escreve	;wreg free
  2710  001F98                     
  2711                           ;apostas.c: 220:     delay();
  2712  001F98  EC2E  F012         	call	_delay	;wreg free
  2713  001F9C                     
  2714                           ;apostas.c: 221:     delay();
  2715  001F9C  EC2E  F012         	call	_delay	;wreg free
  2716  001FA0                     
  2717                           ;apostas.c: 222:     delay();
  2718  001FA0  EC2E  F012         	call	_delay	;wreg free
  2719  001FA4                     
  2720                           ;apostas.c: 223:     lcdCommand(0x01);
  2721  001FA4  0E01               	movlw	1
  2722  001FA6  EC4A  F00E         	call	_lcdCommand
  2723  001FAA                     
  2724                           ;apostas.c: 224:     saldo += 400;
  2725  001FAA  0100               	movlb	0	; () banked
  2726  001FAC  0E90               	movlw	144
  2727  001FAE  27DD               	addwf	_saldo& (0+255),f,b
  2728  001FB0  0E01               	movlw	1
  2729  001FB2  23DE               	addwfc	(_saldo+1)& (0+255),f,b
  2730  001FB4                     
  2731                           ; BSR set to: 0
  2732                           ;apostas.c: 225:     textSaldo();
  2733  001FB4  EC89  F00E         	call	_textSaldo	;wreg free
  2734  001FB8  0012               	return		;funcret
  2735  001FBA                     __end_of_textWin:
  2736                           	callstack 0
  2737                           
  2738 ;; *************** function _textLost *****************
  2739 ;; Defined at:
  2740 ;;		line 197 in file "apostas.c"
  2741 ;; Parameters:    Size  Location     Type
  2742 ;;		None
  2743 ;; Auto vars:     Size  Location     Type
  2744 ;;  text2          15   54[COMRAM] unsigned char [15]
  2745 ;;  text           15   39[COMRAM] unsigned char [15]
  2746 ;; Return value:  Size  Location     Type
  2747 ;;                  1    wreg      void 
  2748 ;; Registers used:
  2749 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2750 ;; Tracked objects:
  2751 ;;		On entry : 0/0
  2752 ;;		On exit  : 0/0
  2753 ;;		Unchanged: 0/0
  2754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2755 ;;      Params:         0       0       0       0       0       0       0
  2756 ;;      Locals:        30       0       0       0       0       0       0
  2757 ;;      Temps:          0       0       0       0       0       0       0
  2758 ;;      Totals:        30       0       0       0       0       0       0
  2759 ;;Total ram usage:       30 bytes
  2760 ;; Hardware stack levels used: 1
  2761 ;; Hardware stack levels required when called: 4
  2762 ;; This function calls:
  2763 ;;		_delay
  2764 ;;		_escreve
  2765 ;;		_lcdCommand
  2766 ;;		_textSaldo
  2767 ;; This function is called by:
  2768 ;;		_Apostando
  2769 ;; This function uses a non-reentrant model
  2770 ;;
  2771                           
  2772                           	psect	text14
  2773  002084                     __ptext14:
  2774                           	callstack 0
  2775  002084                     _textLost:
  2776                           	callstack 24
  2777  002084                     
  2778                           ;apostas.c: 198:     char text[15] = "VC PERDEU";
  2779  002084  EE21  F06F         	lfsr	2,textLost@F2789
  2780  002088  EE10  F028         	lfsr	1,textLost@text
  2781  00208C  0E0E               	movlw	14
  2782  00208E                     u2261:
  2783  00208E  CFDB FFE3          	movff	plusw2,plusw1
  2784  002092  06E8               	decf	wreg,f,c
  2785  002094  E2FC               	bc	u2261
  2786                           
  2787                           ;apostas.c: 199:     char text2[15] = "Custo: -200 ";
  2788  002096  EE21  F060         	lfsr	2,textLost@F2791
  2789  00209A  EE10  F037         	lfsr	1,textLost@text2
  2790  00209E  0E0E               	movlw	14
  2791  0020A0                     u2271:
  2792  0020A0  CFDB FFE3          	movff	plusw2,plusw1
  2793  0020A4  06E8               	decf	wreg,f,c
  2794  0020A6  E2FC               	bc	u2271
  2795  0020A8                     
  2796                           ;apostas.c: 200:     lcdCommand(0x80 | (0));
  2797  0020A8  0E80               	movlw	128
  2798  0020AA  EC4A  F00E         	call	_lcdCommand
  2799  0020AE                     
  2800                           ;apostas.c: 201:     escreve(text);
  2801  0020AE  0E28               	movlw	low textLost@text
  2802  0020B0  6E09               	movwf	escreve@text^0,c
  2803  0020B2  0E00               	movlw	high textLost@text
  2804  0020B4  6E0A               	movwf	(escreve@text+1)^0,c
  2805  0020B6  EC50  F012         	call	_escreve	;wreg free
  2806  0020BA                     
  2807                           ;apostas.c: 202:     lcdCommand(0xC0 | (0));
  2808  0020BA  0EC0               	movlw	192
  2809  0020BC  EC4A  F00E         	call	_lcdCommand
  2810  0020C0                     
  2811                           ;apostas.c: 203:     escreve(text2);
  2812  0020C0  0E37               	movlw	low textLost@text2
  2813  0020C2  6E09               	movwf	escreve@text^0,c
  2814  0020C4  0E00               	movlw	high textLost@text2
  2815  0020C6  6E0A               	movwf	(escreve@text+1)^0,c
  2816  0020C8  EC50  F012         	call	_escreve	;wreg free
  2817  0020CC                     
  2818                           ;apostas.c: 205:     delay();
  2819  0020CC  EC2E  F012         	call	_delay	;wreg free
  2820  0020D0                     
  2821                           ;apostas.c: 206:     delay();
  2822  0020D0  EC2E  F012         	call	_delay	;wreg free
  2823  0020D4                     
  2824                           ;apostas.c: 207:     delay();
  2825  0020D4  EC2E  F012         	call	_delay	;wreg free
  2826  0020D8                     
  2827                           ;apostas.c: 208:     lcdCommand(0x01);
  2828  0020D8  0E01               	movlw	1
  2829  0020DA  EC4A  F00E         	call	_lcdCommand
  2830  0020DE                     
  2831                           ;apostas.c: 209:     textSaldo();
  2832  0020DE  EC89  F00E         	call	_textSaldo	;wreg free
  2833  0020E2  0012               	return		;funcret
  2834  0020E4                     __end_of_textLost:
  2835                           	callstack 0
  2836                           
  2837 ;; *************** function _textSaldo *****************
  2838 ;; Defined at:
  2839 ;;		line 149 in file "apostas.c"
  2840 ;; Parameters:    Size  Location     Type
  2841 ;;		None
  2842 ;; Auto vars:     Size  Location     Type
  2843 ;;  text2          10   29[COMRAM] unsigned char [10]
  2844 ;;  text            6   23[COMRAM] unsigned char [6]
  2845 ;; Return value:  Size  Location     Type
  2846 ;;                  1    wreg      void 
  2847 ;; Registers used:
  2848 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2849 ;; Tracked objects:
  2850 ;;		On entry : 0/0
  2851 ;;		On exit  : 0/0
  2852 ;;		Unchanged: 0/0
  2853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2854 ;;      Params:         0       0       0       0       0       0       0
  2855 ;;      Locals:        16       0       0       0       0       0       0
  2856 ;;      Temps:          0       0       0       0       0       0       0
  2857 ;;      Totals:        16       0       0       0       0       0       0
  2858 ;;Total ram usage:       16 bytes
  2859 ;; Hardware stack levels used: 1
  2860 ;; Hardware stack levels required when called: 3
  2861 ;; This function calls:
  2862 ;;		_delay
  2863 ;;		_escreve
  2864 ;;		_itoa
  2865 ;;		_lcdCommand
  2866 ;; This function is called by:
  2867 ;;		_main
  2868 ;;		_textGameOver
  2869 ;;		_textLost
  2870 ;;		_textWin
  2871 ;; This function uses a non-reentrant model
  2872 ;;
  2873                           
  2874                           	psect	text15
  2875  001D12                     __ptext15:
  2876                           	callstack 0
  2877  001D12                     _textSaldo:
  2878                           	callstack 27
  2879  001D12                     
  2880                           ;apostas.c: 151:     lcdCommand(0x01);
  2881  001D12  0E01               	movlw	1
  2882  001D14  EC4A  F00E         	call	_lcdCommand
  2883  001D18                     
  2884                           ;apostas.c: 152:     char text[6] = "Saldo: ";
  2885  001D18  EE20  F0D7         	lfsr	2,textSaldo@F2774
  2886  001D1C  EE10  F018         	lfsr	1,textSaldo@text
  2887  001D20  0E05               	movlw	5
  2888  001D22                     u2181:
  2889  001D22  CFDB FFE3          	movff	plusw2,plusw1
  2890  001D26  06E8               	decf	wreg,f,c
  2891  001D28  E2FC               	bc	u2181
  2892  001D2A                     
  2893                           ;apostas.c: 153:     char text2[10] = "";
  2894  001D2A  EE20  F01E         	lfsr	2,textSaldo@text2
  2895  001D2E  0E09               	movlw	9
  2896  001D30                     u2191:
  2897  001D30  6ADE               	clrf	postinc2,c
  2898  001D32  06E8               	decf	wreg,f,c
  2899  001D34  E2FD               	bc	u2191
  2900  001D36                     
  2901                           ;apostas.c: 154:     itoa(saldo, text2, 10);
  2902  001D36  C0DD  F009         	movff	_saldo,itoa@value
  2903  001D3A  C0DE  F00A         	movff	_saldo+1,itoa@value+1
  2904  001D3E  0E1E               	movlw	low textSaldo@text2
  2905  001D40  6E0B               	movwf	itoa@result^0,c
  2906  001D42  0E00               	movlw	high textSaldo@text2
  2907  001D44  6E0C               	movwf	(itoa@result+1)^0,c
  2908  001D46  0E00               	movlw	0
  2909  001D48  6E0E               	movwf	(itoa@basea+1)^0,c
  2910  001D4A  0E0A               	movlw	10
  2911  001D4C  6E0D               	movwf	itoa@basea^0,c
  2912  001D4E  EC03  F00A         	call	_itoa	;wreg free
  2913  001D52                     
  2914                           ;apostas.c: 155:     lcdCommand(0x80 | (0));
  2915  001D52  0E80               	movlw	128
  2916  001D54  EC4A  F00E         	call	_lcdCommand
  2917  001D58                     
  2918                           ;apostas.c: 156:     escreve(text);
  2919  001D58  0E18               	movlw	low textSaldo@text
  2920  001D5A  6E09               	movwf	escreve@text^0,c
  2921  001D5C  0E00               	movlw	high textSaldo@text
  2922  001D5E  6E0A               	movwf	(escreve@text+1)^0,c
  2923  001D60  EC50  F012         	call	_escreve	;wreg free
  2924  001D64                     
  2925                           ;apostas.c: 157:     lcdCommand(0xC0 | (0));
  2926  001D64  0EC0               	movlw	192
  2927  001D66  EC4A  F00E         	call	_lcdCommand
  2928  001D6A                     
  2929                           ;apostas.c: 158:     escreve(text2);
  2930  001D6A  0E1E               	movlw	low textSaldo@text2
  2931  001D6C  6E09               	movwf	escreve@text^0,c
  2932  001D6E  0E00               	movlw	high textSaldo@text2
  2933  001D70  6E0A               	movwf	(escreve@text+1)^0,c
  2934  001D72  EC50  F012         	call	_escreve	;wreg free
  2935  001D76                     
  2936                           ;apostas.c: 160:     delay();
  2937  001D76  EC2E  F012         	call	_delay	;wreg free
  2938  001D7A                     
  2939                           ;apostas.c: 161:     delay();
  2940  001D7A  EC2E  F012         	call	_delay	;wreg free
  2941  001D7E                     
  2942                           ;apostas.c: 162:     delay();
  2943  001D7E  EC2E  F012         	call	_delay	;wreg free
  2944  001D82                     
  2945                           ;apostas.c: 164:     lcdCommand(0x01);
  2946  001D82  0E01               	movlw	1
  2947  001D84  EC4A  F00E         	call	_lcdCommand
  2948  001D88  0012               	return		;funcret
  2949  001D8A                     __end_of_textSaldo:
  2950                           	callstack 0
  2951                           
  2952 ;; *************** function _itoa *****************
  2953 ;; Defined at:
  2954 ;;		line 89 in file "apostas.c"
  2955 ;; Parameters:    Size  Location     Type
  2956 ;;  value           2    8[COMRAM] int 
  2957 ;;  result          2   10[COMRAM] PTR unsigned char 
  2958 ;;		 -> Apostando@ssorte(4), textSaldo@text2(10), 
  2959 ;;  basea           2   12[COMRAM] int 
  2960 ;; Auto vars:     Size  Location     Type
  2961 ;;  ptr             2   21[COMRAM] PTR unsigned char 
  2962 ;;		 -> Apostando@ssorte(4), textSaldo@text2(10), 
  2963 ;;  ptr1            2   19[COMRAM] PTR unsigned char 
  2964 ;;		 -> Apostando@ssorte(4), textSaldo@text2(10), 
  2965 ;;  tmp_value       2   17[COMRAM] int 
  2966 ;;  tmp_char        1   16[COMRAM] unsigned char 
  2967 ;; Return value:  Size  Location     Type
  2968 ;;                  2    8[COMRAM] PTR unsigned char 
  2969 ;; Registers used:
  2970 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2971 ;; Tracked objects:
  2972 ;;		On entry : 0/0
  2973 ;;		On exit  : 0/0
  2974 ;;		Unchanged: 0/0
  2975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2976 ;;      Params:         6       0       0       0       0       0       0
  2977 ;;      Locals:         7       0       0       0       0       0       0
  2978 ;;      Temps:          2       0       0       0       0       0       0
  2979 ;;      Totals:        15       0       0       0       0       0       0
  2980 ;;Total ram usage:       15 bytes
  2981 ;; Hardware stack levels used: 1
  2982 ;; Hardware stack levels required when called: 1
  2983 ;; This function calls:
  2984 ;;		___awdiv
  2985 ;;		___wmul
  2986 ;; This function is called by:
  2987 ;;		_textSaldo
  2988 ;;		_Apostando
  2989 ;; This function uses a non-reentrant model
  2990 ;;
  2991                           
  2992                           	psect	text16
  2993  001406                     __ptext16:
  2994                           	callstack 0
  2995  001406                     _itoa:
  2996                           	callstack 28
  2997  001406                     
  2998                           ;apostas.c: 91:     if (basea < 2 || basea > 36) {
  2999  001406  BE0E               	btfsc	(itoa@basea+1)^0,7,c
  3000  001408  EF0F  F00A         	goto	u2131
  3001  00140C  500E               	movf	(itoa@basea+1)^0,w,c
  3002  00140E  E109               	bnz	u2130
  3003  001410  0E02               	movlw	2
  3004  001412  5C0D               	subwf	itoa@basea^0,w,c
  3005  001414  A0D8               	btfss	status,0,c
  3006  001416  EF0F  F00A         	goto	u2131
  3007  00141A  EF11  F00A         	goto	u2130
  3008  00141E                     u2131:
  3009  00141E  EF1F  F00A         	goto	l2420
  3010  001422                     u2130:
  3011  001422  BE0E               	btfsc	(itoa@basea+1)^0,7,c
  3012  001424  EF1D  F00A         	goto	u2141
  3013  001428  500E               	movf	(itoa@basea+1)^0,w,c
  3014  00142A  E109               	bnz	u2140
  3015  00142C  0E25               	movlw	37
  3016  00142E  5C0D               	subwf	itoa@basea^0,w,c
  3017  001430  A0D8               	btfss	status,0,c
  3018  001432  EF1D  F00A         	goto	u2141
  3019  001436  EF1F  F00A         	goto	u2140
  3020  00143A                     u2141:
  3021  00143A  EF27  F00A         	goto	l2424
  3022  00143E                     u2140:
  3023  00143E                     l2420:
  3024                           
  3025                           ;apostas.c: 92:         *result = '\0';
  3026  00143E  C00B  FFD9         	movff	itoa@result,fsr2l
  3027  001442  C00C  FFDA         	movff	itoa@result+1,fsr2h
  3028  001446  0E00               	movlw	0
  3029  001448  6EDF               	movwf	indf2,c
  3030  00144A  EFB1  F00A         	goto	l303
  3031  00144E                     l2424:
  3032                           
  3033                           ;apostas.c: 96:     char* ptr = result, *ptr1 = result, tmp_char;
  3034  00144E  C00B  F016         	movff	itoa@result,itoa@ptr
  3035  001452  C00C  F017         	movff	itoa@result+1,itoa@ptr+1
  3036  001456  C00B  F014         	movff	itoa@result,itoa@ptr1
  3037  00145A  C00C  F015         	movff	itoa@result+1,itoa@ptr1+1
  3038  00145E                     l2426:
  3039                           
  3040                           ;apostas.c: 100:         tmp_value = value;
  3041  00145E  C009  F012         	movff	itoa@value,itoa@tmp_value
  3042  001462  C00A  F013         	movff	itoa@value+1,itoa@tmp_value+1
  3043  001466                     
  3044                           ;apostas.c: 101:         value /= basea;
  3045  001466  C009  F001         	movff	itoa@value,___awdiv@dividend
  3046  00146A  C00A  F002         	movff	itoa@value+1,___awdiv@dividend+1
  3047  00146E  C00D  F003         	movff	itoa@basea,___awdiv@divisor
  3048  001472  C00E  F004         	movff	itoa@basea+1,___awdiv@divisor+1
  3049  001476  EC42  F00D         	call	___awdiv	;wreg free
  3050  00147A  C001  F009         	movff	?___awdiv,itoa@value
  3051  00147E  C002  F00A         	movff	?___awdiv+1,itoa@value+1
  3052  001482                     
  3053                           ;apostas.c: 102:         *ptr++ = "zyxwvutsrqponmlkjihgfedcba9876543210123456789abcdefgh
      +                          ijklmnopqrstuvwxyz" [35 + (tmp_value - value * basea)];
  3054  001482  C009  F001         	movff	itoa@value,___wmul@multiplier
  3055  001486  C00A  F002         	movff	itoa@value+1,___wmul@multiplier+1
  3056  00148A  C00D  F003         	movff	itoa@basea,___wmul@multiplicand
  3057  00148E  C00E  F004         	movff	itoa@basea+1,___wmul@multiplicand+1
  3058  001492  ECAF  F012         	call	___wmul	;wreg free
  3059  001496  0E11               	movlw	low STR_1
  3060  001498  6E0F               	movwf	??_itoa^0,c
  3061  00149A  0E06               	movlw	high STR_1
  3062  00149C  6E10               	movwf	(??_itoa+1)^0,c
  3063  00149E  5001               	movf	?___wmul^0,w,c
  3064  0014A0  5E0F               	subwf	??_itoa^0,f,c
  3065  0014A2  5002               	movf	(?___wmul+1)^0,w,c
  3066  0014A4  5A10               	subwfb	(??_itoa+1)^0,f,c
  3067  0014A6  5012               	movf	itoa@tmp_value^0,w,c
  3068  0014A8  260F               	addwf	??_itoa^0,f,c
  3069  0014AA  5013               	movf	(itoa@tmp_value+1)^0,w,c
  3070  0014AC  2210               	addwfc	(??_itoa+1)^0,f,c
  3071  0014AE  0E23               	movlw	35
  3072  0014B0  260F               	addwf	??_itoa^0,f,c
  3073  0014B2  0E00               	movlw	0
  3074  0014B4  2210               	addwfc	(??_itoa+1)^0,f,c
  3075  0014B6  C00F  FFF6         	movff	??_itoa,tblptrl
  3076  0014BA  C010  FFF7         	movff	??_itoa+1,tblptrh
  3077  0014BE                     	if	0	;tblptru may be non-zero
  3078  0014BE                     	endif
  3079  0014BE                     	if	0	;tblptru may be non-zero
  3080  0014BE                     	endif
  3081  0014BE  C016  FFD9         	movff	itoa@ptr,fsr2l
  3082  0014C2  C017  FFDA         	movff	itoa@ptr+1,fsr2h
  3083  0014C6  0008               	tblrd		*
  3084  0014C8  CFF5 FFDF          	movff	tablat,indf2
  3085  0014CC  4A16               	infsnz	itoa@ptr^0,f,c
  3086  0014CE  2A17               	incf	(itoa@ptr+1)^0,f,c
  3087  0014D0                     
  3088                           ;apostas.c: 103:     } while (value);
  3089  0014D0  5009               	movf	itoa@value^0,w,c
  3090  0014D2  100A               	iorwf	(itoa@value+1)^0,w,c
  3091  0014D4  A4D8               	btfss	status,2,c
  3092  0014D6  EF6F  F00A         	goto	u2151
  3093  0014DA  EF71  F00A         	goto	u2150
  3094  0014DE                     u2151:
  3095  0014DE  EF2F  F00A         	goto	l2426
  3096  0014E2                     u2150:
  3097  0014E2                     
  3098                           ;apostas.c: 106:     if (tmp_value < 0) *ptr++ = '-';
  3099  0014E2  BE13               	btfsc	(itoa@tmp_value+1)^0,7,c
  3100  0014E4  EF78  F00A         	goto	u2160
  3101  0014E8  EF76  F00A         	goto	u2161
  3102  0014EC                     u2161:
  3103  0014EC  EF80  F00A         	goto	l2442
  3104  0014F0                     u2160:
  3105  0014F0  C016  FFD9         	movff	itoa@ptr,fsr2l
  3106  0014F4  C017  FFDA         	movff	itoa@ptr+1,fsr2h
  3107  0014F8  0E2D               	movlw	45
  3108  0014FA  6EDF               	movwf	indf2,c
  3109  0014FC  4A16               	infsnz	itoa@ptr^0,f,c
  3110  0014FE  2A17               	incf	(itoa@ptr+1)^0,f,c
  3111  001500                     l2442:
  3112                           
  3113                           ;apostas.c: 107:     *ptr-- = '\0';
  3114  001500  C016  FFD9         	movff	itoa@ptr,fsr2l
  3115  001504  C017  FFDA         	movff	itoa@ptr+1,fsr2h
  3116  001508  0E00               	movlw	0
  3117  00150A  6EDF               	movwf	indf2,c
  3118  00150C  0616               	decf	itoa@ptr^0,f,c
  3119  00150E  A0D8               	btfss	status,0,c
  3120  001510  0617               	decf	(itoa@ptr+1)^0,f,c
  3121                           
  3122                           ;apostas.c: 108:     while (ptr1 < ptr) {
  3123  001512  EFA6  F00A         	goto	l2454
  3124  001516                     l2444:
  3125                           
  3126                           ;apostas.c: 109:         tmp_char = *ptr;
  3127  001516  C016  FFD9         	movff	itoa@ptr,fsr2l
  3128  00151A  C017  FFDA         	movff	itoa@ptr+1,fsr2h
  3129  00151E  50DF               	movf	indf2,w,c
  3130  001520  6E11               	movwf	itoa@tmp_char^0,c
  3131  001522                     
  3132                           ;apostas.c: 110:         *ptr-- = *ptr1;
  3133  001522  C014  FFD9         	movff	itoa@ptr1,fsr2l
  3134  001526  C015  FFDA         	movff	itoa@ptr1+1,fsr2h
  3135  00152A  C016  FFE1         	movff	itoa@ptr,fsr1l
  3136  00152E  C017  FFE2         	movff	itoa@ptr+1,fsr1h
  3137  001532  CFDF FFE7          	movff	indf2,indf1
  3138  001536  0616               	decf	itoa@ptr^0,f,c
  3139  001538  A0D8               	btfss	status,0,c
  3140  00153A  0617               	decf	(itoa@ptr+1)^0,f,c
  3141  00153C                     
  3142                           ;apostas.c: 111:         *ptr1++ = tmp_char;
  3143  00153C  C014  FFD9         	movff	itoa@ptr1,fsr2l
  3144  001540  C015  FFDA         	movff	itoa@ptr1+1,fsr2h
  3145  001544  C011  FFDF         	movff	itoa@tmp_char,indf2
  3146  001548  4A14               	infsnz	itoa@ptr1^0,f,c
  3147  00154A  2A15               	incf	(itoa@ptr1+1)^0,f,c
  3148  00154C                     l2454:
  3149                           
  3150                           ;apostas.c: 108:     while (ptr1 < ptr) {
  3151  00154C  5016               	movf	itoa@ptr^0,w,c
  3152  00154E  5C14               	subwf	itoa@ptr1^0,w,c
  3153  001550  5017               	movf	(itoa@ptr+1)^0,w,c
  3154  001552  5815               	subwfb	(itoa@ptr1+1)^0,w,c
  3155  001554  A0D8               	btfss	status,0,c
  3156  001556  EFAF  F00A         	goto	u2171
  3157  00155A  EFB1  F00A         	goto	u2170
  3158  00155E                     u2171:
  3159  00155E  EF8B  F00A         	goto	l2444
  3160  001562                     u2170:
  3161  001562                     l303:
  3162  001562  0012               	return		;funcret
  3163  001564                     __end_of_itoa:
  3164                           	callstack 0
  3165                           
  3166 ;; *************** function ___wmul *****************
  3167 ;; Defined at:
  3168 ;;		line 15 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/Umul16.c"
  3169 ;; Parameters:    Size  Location     Type
  3170 ;;  multiplier      2    0[COMRAM] unsigned int 
  3171 ;;  multiplicand    2    2[COMRAM] unsigned int 
  3172 ;; Auto vars:     Size  Location     Type
  3173 ;;  product         2    4[COMRAM] unsigned int 
  3174 ;; Return value:  Size  Location     Type
  3175 ;;                  2    0[COMRAM] unsigned int 
  3176 ;; Registers used:
  3177 ;;		wreg, status,2, status,0, prodl, prodh
  3178 ;; Tracked objects:
  3179 ;;		On entry : 0/0
  3180 ;;		On exit  : 0/0
  3181 ;;		Unchanged: 0/0
  3182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3183 ;;      Params:         4       0       0       0       0       0       0
  3184 ;;      Locals:         2       0       0       0       0       0       0
  3185 ;;      Temps:          0       0       0       0       0       0       0
  3186 ;;      Totals:         6       0       0       0       0       0       0
  3187 ;;Total ram usage:        6 bytes
  3188 ;; Hardware stack levels used: 1
  3189 ;; This function calls:
  3190 ;;		Nothing
  3191 ;; This function is called by:
  3192 ;;		_pwmSet
  3193 ;;		_itoa
  3194 ;; This function uses a non-reentrant model
  3195 ;;
  3196                           
  3197                           	psect	text17
  3198  00255E                     __ptext17:
  3199                           	callstack 0
  3200  00255E                     ___wmul:
  3201                           	callstack 28
  3202  00255E  5001               	movf	___wmul@multiplier^0,w,c
  3203  002560  0203               	mulwf	___wmul@multiplicand^0,c
  3204  002562  CFF3 F005          	movff	prodl,___wmul@product
  3205  002566  CFF4 F006          	movff	prodh,___wmul@product+1
  3206  00256A  5001               	movf	___wmul@multiplier^0,w,c
  3207  00256C  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  3208  00256E  50F3               	movf	243,w,c
  3209  002570  2606               	addwf	(___wmul@product+1)^0,f,c
  3210  002572  5002               	movf	(___wmul@multiplier+1)^0,w,c
  3211  002574  0203               	mulwf	___wmul@multiplicand^0,c
  3212  002576  50F3               	movf	243,w,c
  3213  002578  2606               	addwf	(___wmul@product+1)^0,f,c
  3214  00257A  C005  F001         	movff	___wmul@product,?___wmul
  3215  00257E  C006  F002         	movff	___wmul@product+1,?___wmul+1
  3216  002582  0012               	return		;funcret
  3217  002584                     __end_of___wmul:
  3218                           	callstack 0
  3219                           
  3220 ;; *************** function ___awdiv *****************
  3221 ;; Defined at:
  3222 ;;		line 7 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/awdiv.c"
  3223 ;; Parameters:    Size  Location     Type
  3224 ;;  dividend        2    0[COMRAM] int 
  3225 ;;  divisor         2    2[COMRAM] int 
  3226 ;; Auto vars:     Size  Location     Type
  3227 ;;  quotient        2    6[COMRAM] int 
  3228 ;;  sign            1    5[COMRAM] unsigned char 
  3229 ;;  counter         1    4[COMRAM] unsigned char 
  3230 ;; Return value:  Size  Location     Type
  3231 ;;                  2    0[COMRAM] int 
  3232 ;; Registers used:
  3233 ;;		wreg, status,2, status,0
  3234 ;; Tracked objects:
  3235 ;;		On entry : 0/0
  3236 ;;		On exit  : 0/0
  3237 ;;		Unchanged: 0/0
  3238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3239 ;;      Params:         4       0       0       0       0       0       0
  3240 ;;      Locals:         4       0       0       0       0       0       0
  3241 ;;      Temps:          0       0       0       0       0       0       0
  3242 ;;      Totals:         8       0       0       0       0       0       0
  3243 ;;Total ram usage:        8 bytes
  3244 ;; Hardware stack levels used: 1
  3245 ;; This function calls:
  3246 ;;		Nothing
  3247 ;; This function is called by:
  3248 ;;		_itoa
  3249 ;;		_Apostando
  3250 ;; This function uses a non-reentrant model
  3251 ;;
  3252                           
  3253                           	psect	text18
  3254  001A84                     __ptext18:
  3255                           	callstack 0
  3256  001A84                     ___awdiv:
  3257                           	callstack 28
  3258  001A84  0E00               	movlw	0
  3259  001A86  6E06               	movwf	___awdiv@sign^0,c
  3260  001A88  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  3261  001A8A  EF4B  F00D         	goto	u2010
  3262  001A8E  EF49  F00D         	goto	u2011
  3263  001A92                     u2011:
  3264  001A92  EF51  F00D         	goto	l2320
  3265  001A96                     u2010:
  3266  001A96  6C03               	negf	___awdiv@divisor^0,c
  3267  001A98  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  3268  001A9A  B0D8               	btfsc	status,0,c
  3269  001A9C  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  3270  001A9E  0E01               	movlw	1
  3271  001AA0  6E06               	movwf	___awdiv@sign^0,c
  3272  001AA2                     l2320:
  3273  001AA2  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  3274  001AA4  EF58  F00D         	goto	u2020
  3275  001AA8  EF56  F00D         	goto	u2021
  3276  001AAC                     u2021:
  3277  001AAC  EF5E  F00D         	goto	l2326
  3278  001AB0                     u2020:
  3279  001AB0  6C01               	negf	___awdiv@dividend^0,c
  3280  001AB2  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  3281  001AB4  B0D8               	btfsc	status,0,c
  3282  001AB6  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  3283  001AB8  0E01               	movlw	1
  3284  001ABA  1A06               	xorwf	___awdiv@sign^0,f,c
  3285  001ABC                     l2326:
  3286  001ABC  0E00               	movlw	0
  3287  001ABE  6E08               	movwf	(___awdiv@quotient+1)^0,c
  3288  001AC0  0E00               	movlw	0
  3289  001AC2  6E07               	movwf	___awdiv@quotient^0,c
  3290  001AC4  5003               	movf	___awdiv@divisor^0,w,c
  3291  001AC6  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  3292  001AC8  B4D8               	btfsc	status,2,c
  3293  001ACA  EF69  F00D         	goto	u2031
  3294  001ACE  EF6B  F00D         	goto	u2030
  3295  001AD2                     u2031:
  3296  001AD2  EF93  F00D         	goto	l2348
  3297  001AD6                     u2030:
  3298  001AD6  0E01               	movlw	1
  3299  001AD8  6E05               	movwf	___awdiv@counter^0,c
  3300  001ADA  EF73  F00D         	goto	l2334
  3301  001ADE                     l2332:
  3302  001ADE  90D8               	bcf	status,0,c
  3303  001AE0  3603               	rlcf	___awdiv@divisor^0,f,c
  3304  001AE2  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  3305  001AE4  2A05               	incf	___awdiv@counter^0,f,c
  3306  001AE6                     l2334:
  3307  001AE6  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  3308  001AE8  EF78  F00D         	goto	u2041
  3309  001AEC  EF7A  F00D         	goto	u2040
  3310  001AF0                     u2041:
  3311  001AF0  EF6F  F00D         	goto	l2332
  3312  001AF4                     u2040:
  3313  001AF4                     l2336:
  3314  001AF4  90D8               	bcf	status,0,c
  3315  001AF6  3607               	rlcf	___awdiv@quotient^0,f,c
  3316  001AF8  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  3317  001AFA  5003               	movf	___awdiv@divisor^0,w,c
  3318  001AFC  5C01               	subwf	___awdiv@dividend^0,w,c
  3319  001AFE  5004               	movf	(___awdiv@divisor+1)^0,w,c
  3320  001B00  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  3321  001B02  A0D8               	btfss	status,0,c
  3322  001B04  EF86  F00D         	goto	u2051
  3323  001B08  EF88  F00D         	goto	u2050
  3324  001B0C                     u2051:
  3325  001B0C  EF8D  F00D         	goto	l2344
  3326  001B10                     u2050:
  3327  001B10  5003               	movf	___awdiv@divisor^0,w,c
  3328  001B12  5E01               	subwf	___awdiv@dividend^0,f,c
  3329  001B14  5004               	movf	(___awdiv@divisor+1)^0,w,c
  3330  001B16  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  3331  001B18  8007               	bsf	___awdiv@quotient^0,0,c
  3332  001B1A                     l2344:
  3333  001B1A  90D8               	bcf	status,0,c
  3334  001B1C  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  3335  001B1E  3203               	rrcf	___awdiv@divisor^0,f,c
  3336  001B20  2E05               	decfsz	___awdiv@counter^0,f,c
  3337  001B22  EF7A  F00D         	goto	l2336
  3338  001B26                     l2348:
  3339  001B26  5006               	movf	___awdiv@sign^0,w,c
  3340  001B28  B4D8               	btfsc	status,2,c
  3341  001B2A  EF99  F00D         	goto	u2061
  3342  001B2E  EF9B  F00D         	goto	u2060
  3343  001B32                     u2061:
  3344  001B32  EF9F  F00D         	goto	l2352
  3345  001B36                     u2060:
  3346  001B36  6C07               	negf	___awdiv@quotient^0,c
  3347  001B38  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  3348  001B3A  B0D8               	btfsc	status,0,c
  3349  001B3C  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  3350  001B3E                     l2352:
  3351  001B3E  C007  F001         	movff	___awdiv@quotient,?___awdiv
  3352  001B42  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  3353  001B46  0012               	return		;funcret
  3354  001B48                     __end_of___awdiv:
  3355                           	callstack 0
  3356                           
  3357 ;; *************** function _escreve *****************
  3358 ;; Defined at:
  3359 ;;		line 36 in file "apostas.c"
  3360 ;; Parameters:    Size  Location     Type
  3361 ;;  text            2    8[COMRAM] PTR unsigned char 
  3362 ;;		 -> textApostando@text2(15), textApostando@text(15), textWin@text2(15), textWin@text(15), 
  3363 ;;		 -> textLost@text2(15), textLost@text(15), textGameOver@text2(20), textGameOver@text(15), 
  3364 ;;		 -> textWait@text2(15), textWait@text(15), textSaldo@text2(10), textSaldo@text(6), 
  3365 ;;		 -> textApostas@text2(15), textApostas@text(15), textInstrutions@text2(15), textInstrutions@text(15), 
  3366 ;;		 -> textInit@text2(16), textInit@text(12), 
  3367 ;; Auto vars:     Size  Location     Type
  3368 ;;  i               1   10[COMRAM] unsigned char 
  3369 ;; Return value:  Size  Location     Type
  3370 ;;                  1    wreg      void 
  3371 ;; Registers used:
  3372 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3373 ;; Tracked objects:
  3374 ;;		On entry : 0/0
  3375 ;;		On exit  : 0/0
  3376 ;;		Unchanged: 0/0
  3377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3378 ;;      Params:         2       0       0       0       0       0       0
  3379 ;;      Locals:         1       0       0       0       0       0       0
  3380 ;;      Temps:          0       0       0       0       0       0       0
  3381 ;;      Totals:         3       0       0       0       0       0       0
  3382 ;;Total ram usage:        3 bytes
  3383 ;; Hardware stack levels used: 1
  3384 ;; Hardware stack levels required when called: 2
  3385 ;; This function calls:
  3386 ;;		_lcdData
  3387 ;; This function is called by:
  3388 ;;		_textInit
  3389 ;;		_textInstrutions
  3390 ;;		_textApostas
  3391 ;;		_textSaldo
  3392 ;;		_textWait
  3393 ;;		_textGameOver
  3394 ;;		_textLost
  3395 ;;		_textWin
  3396 ;;		_textApostando
  3397 ;; This function uses a non-reentrant model
  3398 ;;
  3399                           
  3400                           	psect	text19
  3401  0024A0                     __ptext19:
  3402                           	callstack 0
  3403  0024A0                     _escreve:
  3404                           	callstack 27
  3405  0024A0                     
  3406                           ;apostas.c: 37:     char i = 0;
  3407  0024A0  0E00               	movlw	0
  3408  0024A2  6E0B               	movwf	escreve@i^0,c
  3409                           
  3410                           ;apostas.c: 38:     while (text[i] != '\0') {
  3411  0024A4  EF5E  F012         	goto	l2384
  3412  0024A8                     l2380:
  3413                           
  3414                           ;apostas.c: 39:         lcdData(text[i]);
  3415  0024A8  500B               	movf	escreve@i^0,w,c
  3416  0024AA  2409               	addwf	escreve@text^0,w,c
  3417  0024AC  6ED9               	movwf	fsr2l,c
  3418  0024AE  0E00               	movlw	0
  3419  0024B0  200A               	addwfc	(escreve@text+1)^0,w,c
  3420  0024B2  6EDA               	movwf	fsr2h,c
  3421  0024B4  50DF               	movf	indf2,w,c
  3422  0024B6  ECDE  F011         	call	_lcdData
  3423  0024BA                     
  3424                           ;apostas.c: 40:         i++;
  3425  0024BA  2A0B               	incf	escreve@i^0,f,c
  3426  0024BC                     l2384:
  3427                           
  3428                           ;apostas.c: 38:     while (text[i] != '\0') {
  3429  0024BC  500B               	movf	escreve@i^0,w,c
  3430  0024BE  2409               	addwf	escreve@text^0,w,c
  3431  0024C0  6ED9               	movwf	fsr2l,c
  3432  0024C2  0E00               	movlw	0
  3433  0024C4  200A               	addwfc	(escreve@text+1)^0,w,c
  3434  0024C6  6EDA               	movwf	fsr2h,c
  3435  0024C8  50DF               	movf	indf2,w,c
  3436  0024CA  A4D8               	btfss	status,2,c
  3437  0024CC  EF6A  F012         	goto	u2091
  3438  0024D0  EF6C  F012         	goto	u2090
  3439  0024D4                     u2091:
  3440  0024D4  EF54  F012         	goto	l2380
  3441  0024D8                     u2090:
  3442  0024D8  0012               	return		;funcret
  3443  0024DA                     __end_of_escreve:
  3444                           	callstack 0
  3445                           
  3446 ;; *************** function _lcdData *****************
  3447 ;; Defined at:
  3448 ;;		line 74 in file "lcd.c"
  3449 ;; Parameters:    Size  Location     Type
  3450 ;;  valor           1    wreg     unsigned char 
  3451 ;; Auto vars:     Size  Location     Type
  3452 ;;  valor           1    6[COMRAM] unsigned char 
  3453 ;;  old_D           1    7[COMRAM] unsigned char 
  3454 ;; Return value:  Size  Location     Type
  3455 ;;                  1    wreg      void 
  3456 ;; Registers used:
  3457 ;;		wreg, status,2, status,0, cstack
  3458 ;; Tracked objects:
  3459 ;;		On entry : 0/0
  3460 ;;		On exit  : 0/0
  3461 ;;		Unchanged: 0/0
  3462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3463 ;;      Params:         0       0       0       0       0       0       0
  3464 ;;      Locals:         2       0       0       0       0       0       0
  3465 ;;      Temps:          0       0       0       0       0       0       0
  3466 ;;      Totals:         2       0       0       0       0       0       0
  3467 ;;Total ram usage:        2 bytes
  3468 ;; Hardware stack levels used: 1
  3469 ;; Hardware stack levels required when called: 1
  3470 ;; This function calls:
  3471 ;;		_Delay40us
  3472 ;;		_digitalWrite
  3473 ;; This function is called by:
  3474 ;;		_escreve
  3475 ;; This function uses a non-reentrant model
  3476 ;;
  3477                           
  3478                           	psect	text20
  3479  0023BC                     __ptext20:
  3480                           	callstack 0
  3481  0023BC                     _lcdData:
  3482                           	callstack 27
  3483                           
  3484                           ;incstack = 0
  3485                           ;lcdData@valor stored from wreg
  3486  0023BC  6E07               	movwf	lcdData@valor^0,c
  3487  0023BE                     
  3488                           ;lcd.c: 74: void lcdData(unsigned char valor);lcd.c: 75: {;lcd.c: 77:     unsigned char 
      +                          old_D;;lcd.c: 78:     old_D = PORTD;
  3489  0023BE  CF83 F008          	movff	3971,lcdData@old_D	;volatile
  3490  0023C2                     
  3491                           ;lcd.c: 80:     TRISD = 0x00;
  3492  0023C2  0E00               	movlw	0
  3493  0023C4  6E95               	movwf	149,c	;volatile
  3494  0023C6                     
  3495                           ;lcd.c: 81:  digitalWrite(PIN_E2, 1);
  3496  0023C6  0E00               	movlw	0
  3497  0023C8  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3498  0023CA  0E22               	movlw	34
  3499  0023CC  6E01               	movwf	digitalWrite@pin^0,c
  3500  0023CE  0E00               	movlw	0
  3501  0023D0  6E04               	movwf	(digitalWrite@value+1)^0,c
  3502  0023D2  0E01               	movlw	1
  3503  0023D4  6E03               	movwf	digitalWrite@value^0,c
  3504  0023D6  EC1D  F008         	call	_digitalWrite	;wreg free
  3505  0023DA                     
  3506                           ;lcd.c: 83:  PORTD = valor;
  3507  0023DA  C007  FF83         	movff	lcdData@valor,3971	;volatile
  3508  0023DE                     
  3509                           ;lcd.c: 85:     digitalWrite(PIN_E1, 1);
  3510  0023DE  0E00               	movlw	0
  3511  0023E0  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3512  0023E2  0E21               	movlw	33
  3513  0023E4  6E01               	movwf	digitalWrite@pin^0,c
  3514  0023E6  0E00               	movlw	0
  3515  0023E8  6E04               	movwf	(digitalWrite@value+1)^0,c
  3516  0023EA  0E01               	movlw	1
  3517  0023EC  6E03               	movwf	digitalWrite@value^0,c
  3518  0023EE  EC1D  F008         	call	_digitalWrite	;wreg free
  3519  0023F2                     
  3520                           ;lcd.c: 86:  digitalWrite(PIN_E1, 0);
  3521  0023F2  0E00               	movlw	0
  3522  0023F4  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3523  0023F6  0E21               	movlw	33
  3524  0023F8  6E01               	movwf	digitalWrite@pin^0,c
  3525  0023FA  0E00               	movlw	0
  3526  0023FC  6E04               	movwf	(digitalWrite@value+1)^0,c
  3527  0023FE  0E00               	movlw	0
  3528  002400  6E03               	movwf	digitalWrite@value^0,c
  3529  002402  EC1D  F008         	call	_digitalWrite	;wreg free
  3530  002406                     
  3531                           ;lcd.c: 88:     PORTD= old_D;
  3532  002406  C008  FF83         	movff	lcdData@old_D,3971	;volatile
  3533  00240A                     
  3534                           ;lcd.c: 90:  Delay40us();
  3535  00240A  ECF0  F012         	call	_Delay40us	;wreg free
  3536  00240E  0012               	return		;funcret
  3537  002410                     __end_of_lcdData:
  3538                           	callstack 0
  3539                           
  3540 ;; *************** function _delay *****************
  3541 ;; Defined at:
  3542 ;;		line 44 in file "apostas.c"
  3543 ;; Parameters:    Size  Location     Type
  3544 ;;		None
  3545 ;; Auto vars:     Size  Location     Type
  3546 ;;  j               1    1[COMRAM] unsigned char 
  3547 ;;  i               1    0[COMRAM] unsigned char 
  3548 ;; Return value:  Size  Location     Type
  3549 ;;                  1    wreg      void 
  3550 ;; Registers used:
  3551 ;;		wreg, status,2, status,0
  3552 ;; Tracked objects:
  3553 ;;		On entry : 0/0
  3554 ;;		On exit  : 0/0
  3555 ;;		Unchanged: 0/0
  3556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3557 ;;      Params:         0       0       0       0       0       0       0
  3558 ;;      Locals:         2       0       0       0       0       0       0
  3559 ;;      Temps:          0       0       0       0       0       0       0
  3560 ;;      Totals:         2       0       0       0       0       0       0
  3561 ;;Total ram usage:        2 bytes
  3562 ;; Hardware stack levels used: 1
  3563 ;; This function calls:
  3564 ;;		Nothing
  3565 ;; This function is called by:
  3566 ;;		_verso
  3567 ;;		_inverso
  3568 ;;		_textInit
  3569 ;;		_textInstrutions
  3570 ;;		_textApostas
  3571 ;;		_textSaldo
  3572 ;;		_textWait
  3573 ;;		_textGameOver
  3574 ;;		_textLost
  3575 ;;		_textWin
  3576 ;; This function uses a non-reentrant model
  3577 ;;
  3578                           
  3579                           	psect	text21
  3580  00245C                     __ptext21:
  3581                           	callstack 0
  3582  00245C                     _delay:
  3583                           	callstack 29
  3584  00245C                     
  3585                           ;apostas.c: 45:     char i, j;;apostas.c: 46:     for (i = 0; i < 255; i++) {
  3586  00245C  0E00               	movlw	0
  3587  00245E  6E01               	movwf	delay@i^0,c
  3588  002460                     l2392:
  3589                           
  3590                           ;apostas.c: 47:         for (j = 0; j < 255; j++);
  3591  002460  0E00               	movlw	0
  3592  002462  6E02               	movwf	delay@j^0,c
  3593  002464                     l2398:
  3594  002464  2A02               	incf	delay@j^0,f,c
  3595  002466  2802               	incf	delay@j^0,w,c
  3596  002468  A4D8               	btfss	status,2,c
  3597  00246A  EF39  F012         	goto	u2101
  3598  00246E  EF3B  F012         	goto	u2100
  3599  002472                     u2101:
  3600  002472  EF32  F012         	goto	l2398
  3601  002476                     u2100:
  3602  002476                     
  3603                           ;apostas.c: 48:         for (j = 0; j < 255; j++);
  3604  002476  0E00               	movlw	0
  3605  002478  6E02               	movwf	delay@j^0,c
  3606  00247A                     l2408:
  3607  00247A  2A02               	incf	delay@j^0,f,c
  3608  00247C  2802               	incf	delay@j^0,w,c
  3609  00247E  A4D8               	btfss	status,2,c
  3610  002480  EF44  F012         	goto	u2111
  3611  002484  EF46  F012         	goto	u2110
  3612  002488                     u2111:
  3613  002488  EF3D  F012         	goto	l2408
  3614  00248C                     u2110:
  3615  00248C                     
  3616                           ;apostas.c: 49:     }
  3617  00248C  2A01               	incf	delay@i^0,f,c
  3618  00248E  2801               	incf	delay@i^0,w,c
  3619  002490  A4D8               	btfss	status,2,c
  3620  002492  EF4D  F012         	goto	u2121
  3621  002496  EF4F  F012         	goto	u2120
  3622  00249A                     u2121:
  3623  00249A  EF30  F012         	goto	l2392
  3624  00249E                     u2120:
  3625  00249E  0012               	return		;funcret
  3626  0024A0                     __end_of_delay:
  3627                           	callstack 0
  3628                           
  3629 ;; *************** function _ssdUpdate *****************
  3630 ;; Defined at:
  3631 ;;		line 54 in file "ssd.c"
  3632 ;; Parameters:    Size  Location     Type
  3633 ;;		None
  3634 ;; Auto vars:     Size  Location     Type
  3635 ;;		None
  3636 ;; Return value:  Size  Location     Type
  3637 ;;                  1    wreg      void 
  3638 ;; Registers used:
  3639 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3640 ;; Tracked objects:
  3641 ;;		On entry : 0/0
  3642 ;;		On exit  : 0/0
  3643 ;;		Unchanged: 0/0
  3644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3645 ;;      Params:         0       0       0       0       0       0       0
  3646 ;;      Locals:         0       0       0       0       0       0       0
  3647 ;;      Temps:          2       0       0       0       0       0       0
  3648 ;;      Totals:         2       0       0       0       0       0       0
  3649 ;;Total ram usage:        2 bytes
  3650 ;; Hardware stack levels used: 1
  3651 ;; Hardware stack levels required when called: 1
  3652 ;; This function calls:
  3653 ;;		_digitalWrite
  3654 ;; This function is called by:
  3655 ;;		_Apostando
  3656 ;; This function uses a non-reentrant model
  3657 ;;
  3658                           
  3659                           	psect	text22
  3660  001564                     __ptext22:
  3661                           	callstack 0
  3662  001564                     _ssdUpdate:
  3663                           	callstack 27
  3664  001564                     
  3665                           ;ssd.c: 58:     TRISD= 0x00;
  3666  001564  0E00               	movlw	0
  3667  001566  6E95               	movwf	149,c	;volatile
  3668  001568                     
  3669                           ;ssd.c: 60:     digitalWrite(PIN_A2,0);
  3670  001568  0E00               	movlw	0
  3671  00156A  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3672  00156C  0E02               	movlw	2
  3673  00156E  6E01               	movwf	digitalWrite@pin^0,c
  3674  001570  0E00               	movlw	0
  3675  001572  6E04               	movwf	(digitalWrite@value+1)^0,c
  3676  001574  0E00               	movlw	0
  3677  001576  6E03               	movwf	digitalWrite@value^0,c
  3678  001578  EC1D  F008         	call	_digitalWrite	;wreg free
  3679  00157C                     
  3680                           ;ssd.c: 61:     digitalWrite(PIN_A3,0);
  3681  00157C  0E00               	movlw	0
  3682  00157E  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3683  001580  0E03               	movlw	3
  3684  001582  6E01               	movwf	digitalWrite@pin^0,c
  3685  001584  0E00               	movlw	0
  3686  001586  6E04               	movwf	(digitalWrite@value+1)^0,c
  3687  001588  0E00               	movlw	0
  3688  00158A  6E03               	movwf	digitalWrite@value^0,c
  3689  00158C  EC1D  F008         	call	_digitalWrite	;wreg free
  3690  001590                     
  3691                           ;ssd.c: 62:     digitalWrite(PIN_A4,0);
  3692  001590  0E00               	movlw	0
  3693  001592  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3694  001594  0E04               	movlw	4
  3695  001596  6E01               	movwf	digitalWrite@pin^0,c
  3696  001598  0E00               	movlw	0
  3697  00159A  6E04               	movwf	(digitalWrite@value+1)^0,c
  3698  00159C  0E00               	movlw	0
  3699  00159E  6E03               	movwf	digitalWrite@value^0,c
  3700  0015A0  EC1D  F008         	call	_digitalWrite	;wreg free
  3701  0015A4                     
  3702                           ;ssd.c: 63:     digitalWrite(PIN_A5,0);
  3703  0015A4  0E00               	movlw	0
  3704  0015A6  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3705  0015A8  0E05               	movlw	5
  3706  0015AA  6E01               	movwf	digitalWrite@pin^0,c
  3707  0015AC  0E00               	movlw	0
  3708  0015AE  6E04               	movwf	(digitalWrite@value+1)^0,c
  3709  0015B0  0E00               	movlw	0
  3710  0015B2  6E03               	movwf	digitalWrite@value^0,c
  3711  0015B4  EC1D  F008         	call	_digitalWrite	;wreg free
  3712                           
  3713                           ;ssd.c: 66:     PORTD = 0x00;
  3714  0015B8  0E00               	movlw	0
  3715  0015BA  6E83               	movwf	131,c	;volatile
  3716                           
  3717                           ;ssd.c: 69:     switch (display)
  3718  0015BC  EF40  F00B         	goto	l2544
  3719  0015C0                     l2516:
  3720                           
  3721                           ; BSR set to: 0
  3722                           ;ssd.c: 72:             PORTD = valor[v0];
  3723  0015C0  0E01               	movlw	low _valor@ssd$F222
  3724  0015C2  25F3               	addwf	_v0& (0+255),w,b
  3725  0015C4  6EF6               	movwf	tblptrl,c
  3726  0015C6  6AF7               	clrf	tblptrh,c
  3727  0015C8  0E06               	movlw	high _valor@ssd$F222
  3728  0015CA  22F7               	addwfc	tblptrh,f,c
  3729  0015CC                     	if	0	;There are less than 3 active tblptr bytes
  3730  0015CC                     	endif
  3731  0015CC  0008               	tblrd		*
  3732  0015CE  CFF5 FF83          	movff	tablat,3971	;volatile
  3733  0015D2                     
  3734                           ; BSR set to: 0
  3735                           ;ssd.c: 73:             digitalWrite(PIN_A2,1);
  3736  0015D2  0E00               	movlw	0
  3737  0015D4  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3738  0015D6  0E02               	movlw	2
  3739  0015D8  6E01               	movwf	digitalWrite@pin^0,c
  3740  0015DA  0E00               	movlw	0
  3741  0015DC  6E04               	movwf	(digitalWrite@value+1)^0,c
  3742  0015DE  0E01               	movlw	1
  3743  0015E0  6E03               	movwf	digitalWrite@value^0,c
  3744  0015E2  EC1D  F008         	call	_digitalWrite	;wreg free
  3745  0015E6                     
  3746                           ;ssd.c: 74:             display = 1;
  3747  0015E6  0E01               	movlw	1
  3748  0015E8  0100               	movlb	0	; () banked
  3749  0015EA  6FF4               	movwf	_display& (0+255),b
  3750                           
  3751                           ;ssd.c: 75:             break;
  3752  0015EC  EF5E  F00B         	goto	l221
  3753  0015F0                     l2522:
  3754                           
  3755                           ; BSR set to: 0
  3756                           ;ssd.c: 78:             PORTD = valor[v1];
  3757  0015F0  0E01               	movlw	low _valor@ssd$F222
  3758  0015F2  25F2               	addwf	_v1& (0+255),w,b
  3759  0015F4  6EF6               	movwf	tblptrl,c
  3760  0015F6  6AF7               	clrf	tblptrh,c
  3761  0015F8  0E06               	movlw	high _valor@ssd$F222
  3762  0015FA  22F7               	addwfc	tblptrh,f,c
  3763  0015FC                     	if	0	;There are less than 3 active tblptr bytes
  3764  0015FC                     	endif
  3765  0015FC  0008               	tblrd		*
  3766  0015FE  CFF5 FF83          	movff	tablat,3971	;volatile
  3767  001602                     
  3768                           ; BSR set to: 0
  3769                           ;ssd.c: 79:             digitalWrite(PIN_A3,1);
  3770  001602  0E00               	movlw	0
  3771  001604  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3772  001606  0E03               	movlw	3
  3773  001608  6E01               	movwf	digitalWrite@pin^0,c
  3774  00160A  0E00               	movlw	0
  3775  00160C  6E04               	movwf	(digitalWrite@value+1)^0,c
  3776  00160E  0E01               	movlw	1
  3777  001610  6E03               	movwf	digitalWrite@value^0,c
  3778  001612  EC1D  F008         	call	_digitalWrite	;wreg free
  3779  001616                     
  3780                           ;ssd.c: 80:             display = 2;
  3781  001616  0E02               	movlw	2
  3782  001618  0100               	movlb	0	; () banked
  3783  00161A  6FF4               	movwf	_display& (0+255),b
  3784                           
  3785                           ;ssd.c: 81:             break;
  3786  00161C  EF5E  F00B         	goto	l221
  3787  001620                     l2528:
  3788                           
  3789                           ; BSR set to: 0
  3790                           ;ssd.c: 84:             PORTD = valor[v2];
  3791  001620  0E01               	movlw	low _valor@ssd$F222
  3792  001622  25F1               	addwf	_v2& (0+255),w,b
  3793  001624  6EF6               	movwf	tblptrl,c
  3794  001626  6AF7               	clrf	tblptrh,c
  3795  001628  0E06               	movlw	high _valor@ssd$F222
  3796  00162A  22F7               	addwfc	tblptrh,f,c
  3797  00162C                     	if	0	;There are less than 3 active tblptr bytes
  3798  00162C                     	endif
  3799  00162C  0008               	tblrd		*
  3800  00162E  CFF5 FF83          	movff	tablat,3971	;volatile
  3801  001632                     
  3802                           ; BSR set to: 0
  3803                           ;ssd.c: 85:             digitalWrite(PIN_A4,1);
  3804  001632  0E00               	movlw	0
  3805  001634  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3806  001636  0E04               	movlw	4
  3807  001638  6E01               	movwf	digitalWrite@pin^0,c
  3808  00163A  0E00               	movlw	0
  3809  00163C  6E04               	movwf	(digitalWrite@value+1)^0,c
  3810  00163E  0E01               	movlw	1
  3811  001640  6E03               	movwf	digitalWrite@value^0,c
  3812  001642  EC1D  F008         	call	_digitalWrite	;wreg free
  3813  001646                     
  3814                           ;ssd.c: 86:             display = 3;
  3815  001646  0E03               	movlw	3
  3816  001648  0100               	movlb	0	; () banked
  3817  00164A  6FF4               	movwf	_display& (0+255),b
  3818                           
  3819                           ;ssd.c: 87:             break;
  3820  00164C  EF5E  F00B         	goto	l221
  3821  001650                     l2534:
  3822                           
  3823                           ; BSR set to: 0
  3824                           ;ssd.c: 90:             PORTD = valor[v3];
  3825  001650  0E01               	movlw	low _valor@ssd$F222
  3826  001652  25F0               	addwf	_v3& (0+255),w,b
  3827  001654  6EF6               	movwf	tblptrl,c
  3828  001656  6AF7               	clrf	tblptrh,c
  3829  001658  0E06               	movlw	high _valor@ssd$F222
  3830  00165A  22F7               	addwfc	tblptrh,f,c
  3831  00165C                     	if	0	;There are less than 3 active tblptr bytes
  3832  00165C                     	endif
  3833  00165C  0008               	tblrd		*
  3834  00165E  CFF5 FF83          	movff	tablat,3971	;volatile
  3835  001662                     
  3836                           ; BSR set to: 0
  3837                           ;ssd.c: 91:             digitalWrite(PIN_A5,1);
  3838  001662  0E00               	movlw	0
  3839  001664  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3840  001666  0E05               	movlw	5
  3841  001668  6E01               	movwf	digitalWrite@pin^0,c
  3842  00166A  0E00               	movlw	0
  3843  00166C  6E04               	movwf	(digitalWrite@value+1)^0,c
  3844  00166E  0E01               	movlw	1
  3845  001670  6E03               	movwf	digitalWrite@value^0,c
  3846  001672  EC1D  F008         	call	_digitalWrite	;wreg free
  3847  001676                     l2538:
  3848                           
  3849                           ;ssd.c: 92:             display = 0;
  3850  001676  0E00               	movlw	0
  3851  001678  0100               	movlb	0	; () banked
  3852  00167A  6FF4               	movwf	_display& (0+255),b
  3853                           
  3854                           ;ssd.c: 93:             break;
  3855  00167C  EF5E  F00B         	goto	l221
  3856  001680                     l2544:
  3857  001680  0100               	movlb	0	; () banked
  3858  001682  51F4               	movf	_display& (0+255),w,b
  3859  001684  6E07               	movwf	??_ssdUpdate^0,c
  3860  001686  6A08               	clrf	(??_ssdUpdate+1)^0,c
  3861                           
  3862                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3863                           ; Switch size 1, requested type "simple"
  3864                           ; Number of cases is 1, Range of values is 0 to 0
  3865                           ; switch strategies available:
  3866                           ; Name         Instructions Cycles
  3867                           ; simple_byte            4     3 (average)
  3868                           ;	Chosen strategy is simple_byte
  3869  001688  5008               	movf	(??_ssdUpdate+1)^0,w,c
  3870  00168A  0A00               	xorlw	0	; case 0
  3871  00168C  B4D8               	btfsc	status,2,c
  3872  00168E  EF4B  F00B         	goto	l3364
  3873  001692  EF3B  F00B         	goto	l2538
  3874  001696                     l3364:
  3875                           
  3876                           ; BSR set to: 0
  3877                           ; Switch size 1, requested type "simple"
  3878                           ; Number of cases is 4, Range of values is 0 to 3
  3879                           ; switch strategies available:
  3880                           ; Name         Instructions Cycles
  3881                           ; simple_byte           13     7 (average)
  3882                           ;	Chosen strategy is simple_byte
  3883  001696  5007               	movf	??_ssdUpdate^0,w,c
  3884  001698  0A00               	xorlw	0	; case 0
  3885  00169A  B4D8               	btfsc	status,2,c
  3886  00169C  EFE0  F00A         	goto	l2516
  3887  0016A0  0A01               	xorlw	1	; case 1
  3888  0016A2  B4D8               	btfsc	status,2,c
  3889  0016A4  EFF8  F00A         	goto	l2522
  3890  0016A8  0A03               	xorlw	3	; case 2
  3891  0016AA  B4D8               	btfsc	status,2,c
  3892  0016AC  EF10  F00B         	goto	l2528
  3893  0016B0  0A01               	xorlw	1	; case 3
  3894  0016B2  B4D8               	btfsc	status,2,c
  3895  0016B4  EF28  F00B         	goto	l2534
  3896  0016B8  EF3B  F00B         	goto	l2538
  3897  0016BC                     l221:
  3898                           
  3899                           ; BSR set to: 0
  3900  0016BC  0012               	return		;funcret
  3901  0016BE                     __end_of_ssdUpdate:
  3902                           	callstack 0
  3903                           
  3904 ;; *************** function _ssdDigit *****************
  3905 ;; Defined at:
  3906 ;;		line 38 in file "ssd.c"
  3907 ;; Parameters:    Size  Location     Type
  3908 ;;  val             1    wreg     unsigned char 
  3909 ;;  pos             1   24[COMRAM] unsigned char 
  3910 ;; Auto vars:     Size  Location     Type
  3911 ;;  val             1   25[COMRAM] unsigned char 
  3912 ;; Return value:  Size  Location     Type
  3913 ;;                  1    wreg      void 
  3914 ;; Registers used:
  3915 ;;		wreg, status,2, status,0
  3916 ;; Tracked objects:
  3917 ;;		On entry : 0/0
  3918 ;;		On exit  : 0/0
  3919 ;;		Unchanged: 0/0
  3920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3921 ;;      Params:         1       0       0       0       0       0       0
  3922 ;;      Locals:         1       0       0       0       0       0       0
  3923 ;;      Temps:          0       0       0       0       0       0       0
  3924 ;;      Totals:         2       0       0       0       0       0       0
  3925 ;;Total ram usage:        2 bytes
  3926 ;; Hardware stack levels used: 1
  3927 ;; This function calls:
  3928 ;;		Nothing
  3929 ;; This function is called by:
  3930 ;;		_Apostando
  3931 ;; This function uses a non-reentrant model
  3932 ;;
  3933                           
  3934                           	psect	text23
  3935  00230E                     __ptext23:
  3936                           	callstack 0
  3937  00230E                     _ssdDigit:
  3938                           	callstack 28
  3939                           
  3940                           ; BSR set to: 0
  3941                           ;incstack = 0
  3942                           ;ssdDigit@val stored from wreg
  3943  00230E  6E1A               	movwf	ssdDigit@val^0,c
  3944  002310                     
  3945                           ;ssd.c: 39:     if (pos == 0) {
  3946  002310  5019               	movf	ssdDigit@pos^0,w,c
  3947  002312  A4D8               	btfss	status,2,c
  3948  002314  EF8E  F011         	goto	u2221
  3949  002318  EF90  F011         	goto	u2220
  3950  00231C                     u2221:
  3951  00231C  EF92  F011         	goto	l2494
  3952  002320                     u2220:
  3953  002320                     
  3954                           ;ssd.c: 40:         v0 = val;
  3955  002320  C01A  F0F3         	movff	ssdDigit@val,_v0
  3956  002324                     l2494:
  3957                           
  3958                           ;ssd.c: 42:     if (pos == 1) {
  3959  002324  0419               	decf	ssdDigit@pos^0,w,c
  3960  002326  A4D8               	btfss	status,2,c
  3961  002328  EF98  F011         	goto	u2231
  3962  00232C  EF9A  F011         	goto	u2230
  3963  002330                     u2231:
  3964  002330  EF9C  F011         	goto	l2498
  3965  002334                     u2230:
  3966  002334                     
  3967                           ;ssd.c: 43:         v1 = val;
  3968  002334  C01A  F0F2         	movff	ssdDigit@val,_v1
  3969  002338                     l2498:
  3970                           
  3971                           ;ssd.c: 45:     if (pos == 2) {
  3972  002338  0E02               	movlw	2
  3973  00233A  1819               	xorwf	ssdDigit@pos^0,w,c
  3974  00233C  A4D8               	btfss	status,2,c
  3975  00233E  EFA3  F011         	goto	u2241
  3976  002342  EFA5  F011         	goto	u2240
  3977  002346                     u2241:
  3978  002346  EFA7  F011         	goto	l2502
  3979  00234A                     u2240:
  3980  00234A                     
  3981                           ;ssd.c: 46:         v2 = val;
  3982  00234A  C01A  F0F1         	movff	ssdDigit@val,_v2
  3983  00234E                     l2502:
  3984                           
  3985                           ;ssd.c: 48:     if (pos == 3) {
  3986  00234E  0E03               	movlw	3
  3987  002350  1819               	xorwf	ssdDigit@pos^0,w,c
  3988  002352  A4D8               	btfss	status,2,c
  3989  002354  EFAE  F011         	goto	u2251
  3990  002358  EFB0  F011         	goto	u2250
  3991  00235C                     u2251:
  3992  00235C  EFB2  F011         	goto	l211
  3993  002360                     u2250:
  3994  002360                     
  3995                           ;ssd.c: 49:         v3 = val;
  3996  002360  C01A  F0F0         	movff	ssdDigit@val,_v3
  3997  002364                     l211:
  3998  002364  0012               	return		;funcret
  3999  002366                     __end_of_ssdDigit:
  4000                           	callstack 0
  4001                           
  4002 ;; *************** function _rand *****************
  4003 ;; Defined at:
  4004 ;;		line 11 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/rand.c"
  4005 ;; Parameters:    Size  Location     Type
  4006 ;;		None
  4007 ;; Auto vars:     Size  Location     Type
  4008 ;;		None
  4009 ;; Return value:  Size  Location     Type
  4010 ;;                  2   12[COMRAM] int 
  4011 ;; Registers used:
  4012 ;;		wreg, status,2, status,0, cstack
  4013 ;; Tracked objects:
  4014 ;;		On entry : 0/0
  4015 ;;		On exit  : 0/0
  4016 ;;		Unchanged: 0/0
  4017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4018 ;;      Params:         2       0       0       0       0       0       0
  4019 ;;      Locals:         0       0       0       0       0       0       0
  4020 ;;      Temps:          4       0       0       0       0       0       0
  4021 ;;      Totals:         6       0       0       0       0       0       0
  4022 ;;Total ram usage:        6 bytes
  4023 ;; Hardware stack levels used: 1
  4024 ;; Hardware stack levels required when called: 1
  4025 ;; This function calls:
  4026 ;;		___lmul
  4027 ;; This function is called by:
  4028 ;;		_Apostando
  4029 ;; This function uses a non-reentrant model
  4030 ;;
  4031                           
  4032                           	psect	text24
  4033  001E76                     __ptext24:
  4034                           	callstack 0
  4035  001E76                     _rand:
  4036                           	callstack 27
  4037  001E76  C0F6  F001         	movff	_seed,___lmul@multiplier
  4038  001E7A  C0F7  F002         	movff	_seed+1,___lmul@multiplier+1
  4039  001E7E  C0F8  F003         	movff	_seed+2,___lmul@multiplier+2
  4040  001E82  C0F9  F004         	movff	_seed+3,___lmul@multiplier+3
  4041  001E86  0E2D               	movlw	45
  4042  001E88  6E05               	movwf	___lmul@multiplicand^0,c
  4043  001E8A  0E7F               	movlw	127
  4044  001E8C  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  4045  001E8E  0E95               	movlw	149
  4046  001E90  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  4047  001E92  0E4C               	movlw	76
  4048  001E94  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  4049  001E96  ECDD  F00F         	call	___lmul	;wreg free
  4050  001E9A  0E01               	movlw	1
  4051  001E9C  2401               	addwf	?___lmul^0,w,c
  4052  001E9E  0100               	movlb	0	; () banked
  4053  001EA0  6FF6               	movwf	_seed& (0+255),b
  4054  001EA2  0E00               	movlw	0
  4055  001EA4  2002               	addwfc	(?___lmul+1)^0,w,c
  4056  001EA6  6FF7               	movwf	(_seed+1)& (0+255),b
  4057  001EA8  0E00               	movlw	0
  4058  001EAA  2003               	addwfc	(?___lmul+2)^0,w,c
  4059  001EAC  6FF8               	movwf	(_seed+2)& (0+255),b
  4060  001EAE  0E00               	movlw	0
  4061  001EB0  2004               	addwfc	(?___lmul+3)^0,w,c
  4062  001EB2  6FF9               	movwf	(_seed+3)& (0+255),b
  4063  001EB4                     
  4064                           ; BSR set to: 0
  4065  001EB4  C0F6  F00F         	movff	_seed,??_rand
  4066  001EB8  C0F7  F010         	movff	_seed+1,??_rand+1
  4067  001EBC  C0F8  F011         	movff	_seed+2,??_rand+2
  4068  001EC0  C0F9  F012         	movff	_seed+3,??_rand+3
  4069  001EC4  0E12               	movlw	18
  4070  001EC6  EF6A  F00F         	goto	u2300
  4071  001ECA                     u2305:
  4072  001ECA  90D8               	bcf	status,0,c
  4073  001ECC  3212               	rrcf	(??_rand+3)^0,f,c
  4074  001ECE  3211               	rrcf	(??_rand+2)^0,f,c
  4075  001ED0  3210               	rrcf	(??_rand+1)^0,f,c
  4076  001ED2  320F               	rrcf	??_rand^0,f,c
  4077  001ED4                     u2300:
  4078  001ED4  2EE8               	decfsz	wreg,f,c
  4079  001ED6  EF65  F00F         	goto	u2305
  4080  001EDA  C00F  F00D         	movff	??_rand,?_rand
  4081  001EDE  C010  F00E         	movff	??_rand+1,?_rand+1
  4082  001EE2                     
  4083                           ; BSR set to: 0
  4084  001EE2  0012               	return		;funcret
  4085  001EE4                     __end_of_rand:
  4086                           	callstack 0
  4087                           
  4088 ;; *************** function ___lmul *****************
  4089 ;; Defined at:
  4090 ;;		line 15 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/Umul32.c"
  4091 ;; Parameters:    Size  Location     Type
  4092 ;;  multiplier      4    0[COMRAM] unsigned long 
  4093 ;;  multiplicand    4    4[COMRAM] unsigned long 
  4094 ;; Auto vars:     Size  Location     Type
  4095 ;;  product         4    8[COMRAM] unsigned long 
  4096 ;; Return value:  Size  Location     Type
  4097 ;;                  4    0[COMRAM] unsigned long 
  4098 ;; Registers used:
  4099 ;;		wreg, status,2, status,0
  4100 ;; Tracked objects:
  4101 ;;		On entry : 0/0
  4102 ;;		On exit  : 0/0
  4103 ;;		Unchanged: 0/0
  4104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4105 ;;      Params:         8       0       0       0       0       0       0
  4106 ;;      Locals:         4       0       0       0       0       0       0
  4107 ;;      Temps:          0       0       0       0       0       0       0
  4108 ;;      Totals:        12       0       0       0       0       0       0
  4109 ;;Total ram usage:       12 bytes
  4110 ;; Hardware stack levels used: 1
  4111 ;; This function calls:
  4112 ;;		Nothing
  4113 ;; This function is called by:
  4114 ;;		_rand
  4115 ;; This function uses a non-reentrant model
  4116 ;;
  4117                           
  4118                           	psect	text25
  4119  001FBA                     __ptext25:
  4120                           	callstack 0
  4121  001FBA                     ___lmul:
  4122                           	callstack 27
  4123  001FBA  0E00               	movlw	0
  4124  001FBC  6E09               	movwf	___lmul@product^0,c
  4125  001FBE  0E00               	movlw	0
  4126  001FC0  6E0A               	movwf	(___lmul@product+1)^0,c
  4127  001FC2  0E00               	movlw	0
  4128  001FC4  6E0B               	movwf	(___lmul@product+2)^0,c
  4129  001FC6  0E00               	movlw	0
  4130  001FC8  6E0C               	movwf	(___lmul@product+3)^0,c
  4131  001FCA                     l2482:
  4132  001FCA  A001               	btfss	___lmul@multiplier^0,0,c
  4133  001FCC  EFEA  F00F         	goto	u2201
  4134  001FD0  EFEC  F00F         	goto	u2200
  4135  001FD4                     u2201:
  4136  001FD4  EFF4  F00F         	goto	l2486
  4137  001FD8                     u2200:
  4138  001FD8  5005               	movf	___lmul@multiplicand^0,w,c
  4139  001FDA  2609               	addwf	___lmul@product^0,f,c
  4140  001FDC  5006               	movf	(___lmul@multiplicand+1)^0,w,c
  4141  001FDE  220A               	addwfc	(___lmul@product+1)^0,f,c
  4142  001FE0  5007               	movf	(___lmul@multiplicand+2)^0,w,c
  4143  001FE2  220B               	addwfc	(___lmul@product+2)^0,f,c
  4144  001FE4  5008               	movf	(___lmul@multiplicand+3)^0,w,c
  4145  001FE6  220C               	addwfc	(___lmul@product+3)^0,f,c
  4146  001FE8                     l2486:
  4147  001FE8  90D8               	bcf	status,0,c
  4148  001FEA  3605               	rlcf	___lmul@multiplicand^0,f,c
  4149  001FEC  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
  4150  001FEE  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
  4151  001FF0  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
  4152  001FF2  90D8               	bcf	status,0,c
  4153  001FF4  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
  4154  001FF6  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
  4155  001FF8  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
  4156  001FFA  3201               	rrcf	___lmul@multiplier^0,f,c
  4157  001FFC  5001               	movf	___lmul@multiplier^0,w,c
  4158  001FFE  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
  4159  002000  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
  4160  002002  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
  4161  002004  A4D8               	btfss	status,2,c
  4162  002006  EF07  F010         	goto	u2211
  4163  00200A  EF09  F010         	goto	u2210
  4164  00200E                     u2211:
  4165  00200E  EFE5  F00F         	goto	l2482
  4166  002012                     u2210:
  4167  002012  C009  F001         	movff	___lmul@product,?___lmul
  4168  002016  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  4169  00201A  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  4170  00201E  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  4171  002022  0012               	return		;funcret
  4172  002024                     __end_of___lmul:
  4173                           	callstack 0
  4174                           
  4175 ;; *************** function ___flge *****************
  4176 ;; Defined at:
  4177 ;;		line 4 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/flge.c"
  4178 ;; Parameters:    Size  Location     Type
  4179 ;;  ff1             4    0[COMRAM] unsigned long 
  4180 ;;  ff2             4    4[COMRAM] unsigned long 
  4181 ;; Auto vars:     Size  Location     Type
  4182 ;;		None
  4183 ;; Return value:  Size  Location     Type
  4184 ;;		None               void
  4185 ;; Registers used:
  4186 ;;		wreg, status,2, status,0
  4187 ;; Tracked objects:
  4188 ;;		On entry : 0/0
  4189 ;;		On exit  : 0/0
  4190 ;;		Unchanged: 0/0
  4191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4192 ;;      Params:         8       0       0       0       0       0       0
  4193 ;;      Locals:         0       0       0       0       0       0       0
  4194 ;;      Temps:          4       0       0       0       0       0       0
  4195 ;;      Totals:        12       0       0       0       0       0       0
  4196 ;;Total ram usage:       12 bytes
  4197 ;; Hardware stack levels used: 1
  4198 ;; This function calls:
  4199 ;;		Nothing
  4200 ;; This function is called by:
  4201 ;;		_Apostando
  4202 ;; This function uses a non-reentrant model
  4203 ;;
  4204                           
  4205                           	psect	text26
  4206  0017CA                     __ptext26:
  4207                           	callstack 0
  4208  0017CA                     ___flge:
  4209                           	callstack 28
  4210  0017CA  0E00               	movlw	0
  4211  0017CC  1401               	andwf	___flge@ff1^0,w,c
  4212  0017CE  6E09               	movwf	??___flge^0,c
  4213  0017D0  0E00               	movlw	0
  4214  0017D2  1402               	andwf	(___flge@ff1+1)^0,w,c
  4215  0017D4  6E0A               	movwf	(??___flge+1)^0,c
  4216  0017D6  0E80               	movlw	128
  4217  0017D8  1403               	andwf	(___flge@ff1+2)^0,w,c
  4218  0017DA  6E0B               	movwf	(??___flge+2)^0,c
  4219  0017DC  0E7F               	movlw	127
  4220  0017DE  1404               	andwf	(___flge@ff1+3)^0,w,c
  4221  0017E0  6E0C               	movwf	(??___flge+3)^0,c
  4222  0017E2  5009               	movf	??___flge^0,w,c
  4223  0017E4  100A               	iorwf	(??___flge+1)^0,w,c
  4224  0017E6  100B               	iorwf	(??___flge+2)^0,w,c
  4225  0017E8  100C               	iorwf	(??___flge+3)^0,w,c
  4226  0017EA  A4D8               	btfss	status,2,c
  4227  0017EC  EFFA  F00B         	goto	u2821
  4228  0017F0  EFFC  F00B         	goto	u2820
  4229  0017F4                     u2821:
  4230  0017F4  EF04  F00C         	goto	l2884
  4231  0017F8                     u2820:
  4232  0017F8  0E00               	movlw	0
  4233  0017FA  6E01               	movwf	___flge@ff1^0,c
  4234  0017FC  0E00               	movlw	0
  4235  0017FE  6E02               	movwf	(___flge@ff1+1)^0,c
  4236  001800  0E00               	movlw	0
  4237  001802  6E03               	movwf	(___flge@ff1+2)^0,c
  4238  001804  0E00               	movlw	0
  4239  001806  6E04               	movwf	(___flge@ff1+3)^0,c
  4240  001808                     l2884:
  4241  001808  0E00               	movlw	0
  4242  00180A  1405               	andwf	___flge@ff2^0,w,c
  4243  00180C  6E09               	movwf	??___flge^0,c
  4244  00180E  0E00               	movlw	0
  4245  001810  1406               	andwf	(___flge@ff2+1)^0,w,c
  4246  001812  6E0A               	movwf	(??___flge+1)^0,c
  4247  001814  0E80               	movlw	128
  4248  001816  1407               	andwf	(___flge@ff2+2)^0,w,c
  4249  001818  6E0B               	movwf	(??___flge+2)^0,c
  4250  00181A  0E7F               	movlw	127
  4251  00181C  1408               	andwf	(___flge@ff2+3)^0,w,c
  4252  00181E  6E0C               	movwf	(??___flge+3)^0,c
  4253  001820  5009               	movf	??___flge^0,w,c
  4254  001822  100A               	iorwf	(??___flge+1)^0,w,c
  4255  001824  100B               	iorwf	(??___flge+2)^0,w,c
  4256  001826  100C               	iorwf	(??___flge+3)^0,w,c
  4257  001828  A4D8               	btfss	status,2,c
  4258  00182A  EF19  F00C         	goto	u2831
  4259  00182E  EF1B  F00C         	goto	u2830
  4260  001832                     u2831:
  4261  001832  EF23  F00C         	goto	l2888
  4262  001836                     u2830:
  4263  001836  0E00               	movlw	0
  4264  001838  6E05               	movwf	___flge@ff2^0,c
  4265  00183A  0E00               	movlw	0
  4266  00183C  6E06               	movwf	(___flge@ff2+1)^0,c
  4267  00183E  0E00               	movlw	0
  4268  001840  6E07               	movwf	(___flge@ff2+2)^0,c
  4269  001842  0E00               	movlw	0
  4270  001844  6E08               	movwf	(___flge@ff2+3)^0,c
  4271  001846                     l2888:
  4272  001846  AE04               	btfss	(___flge@ff1+3)^0,7,c
  4273  001848  EF28  F00C         	goto	u2841
  4274  00184C  EF2A  F00C         	goto	u2840
  4275  001850                     u2841:
  4276  001850  EF33  F00C         	goto	l2892
  4277  001854                     u2840:
  4278  001854  6C01               	negf	___flge@ff1^0,c
  4279  001856  1E02               	comf	(___flge@ff1+1)^0,f,c
  4280  001858  B0D8               	btfsc	status,0,c
  4281  00185A  2A02               	incf	(___flge@ff1+1)^0,f,c
  4282  00185C  1E03               	comf	(___flge@ff1+2)^0,f,c
  4283  00185E  B0D8               	btfsc	status,0,c
  4284  001860  2A03               	incf	(___flge@ff1+2)^0,f,c
  4285  001862  0E80               	movlw	128
  4286  001864  5604               	subfwb	(___flge@ff1+3)^0,f,c
  4287  001866                     l2892:
  4288  001866  AE08               	btfss	(___flge@ff2+3)^0,7,c
  4289  001868  EF38  F00C         	goto	u2851
  4290  00186C  EF3A  F00C         	goto	u2850
  4291  001870                     u2851:
  4292  001870  EF43  F00C         	goto	l648
  4293  001874                     u2850:
  4294  001874  6C05               	negf	___flge@ff2^0,c
  4295  001876  1E06               	comf	(___flge@ff2+1)^0,f,c
  4296  001878  B0D8               	btfsc	status,0,c
  4297  00187A  2A06               	incf	(___flge@ff2+1)^0,f,c
  4298  00187C  1E07               	comf	(___flge@ff2+2)^0,f,c
  4299  00187E  B0D8               	btfsc	status,0,c
  4300  001880  2A07               	incf	(___flge@ff2+2)^0,f,c
  4301  001882  0E80               	movlw	128
  4302  001884  5608               	subfwb	(___flge@ff2+3)^0,f,c
  4303  001886                     l648:
  4304  001886  0E00               	movlw	0
  4305  001888  1A01               	xorwf	___flge@ff1^0,f,c
  4306  00188A  0E00               	movlw	0
  4307  00188C  1A02               	xorwf	(___flge@ff1+1)^0,f,c
  4308  00188E  0E00               	movlw	0
  4309  001890  1A03               	xorwf	(___flge@ff1+2)^0,f,c
  4310  001892  0E80               	movlw	128
  4311  001894  1A04               	xorwf	(___flge@ff1+3)^0,f,c
  4312  001896  0E00               	movlw	0
  4313  001898  1A05               	xorwf	___flge@ff2^0,f,c
  4314  00189A  0E00               	movlw	0
  4315  00189C  1A06               	xorwf	(___flge@ff2+1)^0,f,c
  4316  00189E  0E00               	movlw	0
  4317  0018A0  1A07               	xorwf	(___flge@ff2+2)^0,f,c
  4318  0018A2  0E80               	movlw	128
  4319  0018A4  1A08               	xorwf	(___flge@ff2+3)^0,f,c
  4320  0018A6  5005               	movf	___flge@ff2^0,w,c
  4321  0018A8  5C01               	subwf	___flge@ff1^0,w,c
  4322  0018AA  5006               	movf	(___flge@ff2+1)^0,w,c
  4323  0018AC  5802               	subwfb	(___flge@ff1+1)^0,w,c
  4324  0018AE  5007               	movf	(___flge@ff2+2)^0,w,c
  4325  0018B0  5803               	subwfb	(___flge@ff1+2)^0,w,c
  4326  0018B2  5008               	movf	(___flge@ff2+3)^0,w,c
  4327  0018B4  5804               	subwfb	(___flge@ff1+3)^0,w,c
  4328  0018B6  B0D8               	btfsc	status,0,c
  4329  0018B8  EF60  F00C         	goto	u2861
  4330  0018BC  EF62  F00C         	goto	u2860
  4331  0018C0                     u2861:
  4332  0018C0  EF65  F00C         	goto	l2898
  4333  0018C4                     u2860:
  4334  0018C4  90D8               	bcf	status,0,c
  4335  0018C6  EF66  F00C         	goto	l653
  4336  0018CA                     l2898:
  4337  0018CA  80D8               	bsf	status,0,c
  4338  0018CC                     l653:
  4339  0018CC  0012               	return		;funcret
  4340  0018CE                     __end_of___flge:
  4341                           	callstack 0
  4342                           
  4343 ;; *************** function ___fladd *****************
  4344 ;; Defined at:
  4345 ;;		line 10 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/sprcadd.c"
  4346 ;; Parameters:    Size  Location     Type
  4347 ;;  b               4    0[COMRAM] unsigned long 
  4348 ;;  a               4    4[COMRAM] unsigned long 
  4349 ;; Auto vars:     Size  Location     Type
  4350 ;;  grs             1   15[COMRAM] unsigned char 
  4351 ;;  bexp            1   14[COMRAM] unsigned char 
  4352 ;;  aexp            1   13[COMRAM] unsigned char 
  4353 ;;  signs           1   12[COMRAM] unsigned char 
  4354 ;; Return value:  Size  Location     Type
  4355 ;;                  4    0[COMRAM] unsigned char 
  4356 ;; Registers used:
  4357 ;;		wreg, status,2, status,0
  4358 ;; Tracked objects:
  4359 ;;		On entry : 0/0
  4360 ;;		On exit  : 0/0
  4361 ;;		Unchanged: 0/0
  4362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4363 ;;      Params:         8       0       0       0       0       0       0
  4364 ;;      Locals:         4       0       0       0       0       0       0
  4365 ;;      Temps:          4       0       0       0       0       0       0
  4366 ;;      Totals:        16       0       0       0       0       0       0
  4367 ;;Total ram usage:       16 bytes
  4368 ;; Hardware stack levels used: 1
  4369 ;; This function calls:
  4370 ;;		Nothing
  4371 ;; This function is called by:
  4372 ;;		_Apostando
  4373 ;; This function uses a non-reentrant model
  4374 ;;
  4375                           
  4376                           	psect	text27
  4377  00065A                     __ptext27:
  4378                           	callstack 0
  4379  00065A                     ___fladd:
  4380                           	callstack 28
  4381  00065A  5004               	movf	(___fladd@b+3)^0,w,c
  4382  00065C  0B80               	andlw	128
  4383  00065E  6E0D               	movwf	___fladd@signs^0,c
  4384  000660  5004               	movf	(___fladd@b+3)^0,w,c
  4385  000662  2404               	addwf	(___fladd@b+3)^0,w,c
  4386  000664  6E0F               	movwf	___fladd@bexp^0,c
  4387  000666  AE03               	btfss	(___fladd@b+2)^0,7,c
  4388  000668  EF38  F003         	goto	u2371
  4389  00066C  EF3A  F003         	goto	u2370
  4390  000670                     u2371:
  4391  000670  EF3B  F003         	goto	l2648
  4392  000674                     u2370:
  4393  000674  800F               	bsf	___fladd@bexp^0,0,c
  4394  000676                     l2648:
  4395  000676  500F               	movf	___fladd@bexp^0,w,c
  4396  000678  B4D8               	btfsc	status,2,c
  4397  00067A  EF41  F003         	goto	u2381
  4398  00067E  EF43  F003         	goto	u2380
  4399  000682                     u2381:
  4400  000682  EF58  F003         	goto	l2658
  4401  000686                     u2380:
  4402  000686  280F               	incf	___fladd@bexp^0,w,c
  4403  000688  A4D8               	btfss	status,2,c
  4404  00068A  EF49  F003         	goto	u2391
  4405  00068E  EF4B  F003         	goto	u2390
  4406  000692                     u2391:
  4407  000692  EF53  F003         	goto	l2654
  4408  000696                     u2390:
  4409  000696  0E00               	movlw	0
  4410  000698  6E01               	movwf	___fladd@b^0,c
  4411  00069A  0E00               	movlw	0
  4412  00069C  6E02               	movwf	(___fladd@b+1)^0,c
  4413  00069E  0E00               	movlw	0
  4414  0006A0  6E03               	movwf	(___fladd@b+2)^0,c
  4415  0006A2  0E00               	movlw	0
  4416  0006A4  6E04               	movwf	(___fladd@b+3)^0,c
  4417  0006A6                     l2654:
  4418  0006A6  8E03               	bsf	(___fladd@b+2)^0,7,c
  4419  0006A8  0E00               	movlw	0
  4420  0006AA  6E04               	movwf	(___fladd@b+3)^0,c
  4421  0006AC  EF60  F003         	goto	l2660
  4422  0006B0                     l2658:
  4423  0006B0  0E00               	movlw	0
  4424  0006B2  6E01               	movwf	___fladd@b^0,c
  4425  0006B4  0E00               	movlw	0
  4426  0006B6  6E02               	movwf	(___fladd@b+1)^0,c
  4427  0006B8  0E00               	movlw	0
  4428  0006BA  6E03               	movwf	(___fladd@b+2)^0,c
  4429  0006BC  0E00               	movlw	0
  4430  0006BE  6E04               	movwf	(___fladd@b+3)^0,c
  4431  0006C0                     l2660:
  4432  0006C0  5008               	movf	(___fladd@a+3)^0,w,c
  4433  0006C2  0B80               	andlw	128
  4434  0006C4  6E0E               	movwf	___fladd@aexp^0,c
  4435  0006C6  500D               	movf	___fladd@signs^0,w,c
  4436  0006C8  180E               	xorwf	___fladd@aexp^0,w,c
  4437  0006CA  B4D8               	btfsc	status,2,c
  4438  0006CC  EF6A  F003         	goto	u2401
  4439  0006D0  EF6C  F003         	goto	u2400
  4440  0006D4                     u2401:
  4441  0006D4  EF6D  F003         	goto	l2666
  4442  0006D8                     u2400:
  4443  0006D8  8C0D               	bsf	___fladd@signs^0,6,c
  4444  0006DA                     l2666:
  4445  0006DA  5008               	movf	(___fladd@a+3)^0,w,c
  4446  0006DC  2408               	addwf	(___fladd@a+3)^0,w,c
  4447  0006DE  6E0E               	movwf	___fladd@aexp^0,c
  4448  0006E0  AE07               	btfss	(___fladd@a+2)^0,7,c
  4449  0006E2  EF75  F003         	goto	u2411
  4450  0006E6  EF77  F003         	goto	u2410
  4451  0006EA                     u2411:
  4452  0006EA  EF78  F003         	goto	l2672
  4453  0006EE                     u2410:
  4454  0006EE  800E               	bsf	___fladd@aexp^0,0,c
  4455  0006F0                     l2672:
  4456  0006F0  500E               	movf	___fladd@aexp^0,w,c
  4457  0006F2  B4D8               	btfsc	status,2,c
  4458  0006F4  EF7E  F003         	goto	u2421
  4459  0006F8  EF80  F003         	goto	u2420
  4460  0006FC                     u2421:
  4461  0006FC  EF95  F003         	goto	l2682
  4462  000700                     u2420:
  4463  000700  280E               	incf	___fladd@aexp^0,w,c
  4464  000702  A4D8               	btfss	status,2,c
  4465  000704  EF86  F003         	goto	u2431
  4466  000708  EF88  F003         	goto	u2430
  4467  00070C                     u2431:
  4468  00070C  EF90  F003         	goto	l2678
  4469  000710                     u2430:
  4470  000710  0E00               	movlw	0
  4471  000712  6E05               	movwf	___fladd@a^0,c
  4472  000714  0E00               	movlw	0
  4473  000716  6E06               	movwf	(___fladd@a+1)^0,c
  4474  000718  0E00               	movlw	0
  4475  00071A  6E07               	movwf	(___fladd@a+2)^0,c
  4476  00071C  0E00               	movlw	0
  4477  00071E  6E08               	movwf	(___fladd@a+3)^0,c
  4478  000720                     l2678:
  4479  000720  8E07               	bsf	(___fladd@a+2)^0,7,c
  4480  000722  0E00               	movlw	0
  4481  000724  6E08               	movwf	(___fladd@a+3)^0,c
  4482  000726  EF9D  F003         	goto	l2684
  4483  00072A                     l2682:
  4484  00072A  0E00               	movlw	0
  4485  00072C  6E05               	movwf	___fladd@a^0,c
  4486  00072E  0E00               	movlw	0
  4487  000730  6E06               	movwf	(___fladd@a+1)^0,c
  4488  000732  0E00               	movlw	0
  4489  000734  6E07               	movwf	(___fladd@a+2)^0,c
  4490  000736  0E00               	movlw	0
  4491  000738  6E08               	movwf	(___fladd@a+3)^0,c
  4492  00073A                     l2684:
  4493  00073A  500F               	movf	___fladd@bexp^0,w,c
  4494  00073C  5C0E               	subwf	___fladd@aexp^0,w,c
  4495  00073E  B0D8               	btfsc	status,0,c
  4496  000740  EFA4  F003         	goto	u2441
  4497  000744  EFA6  F003         	goto	u2440
  4498  000748                     u2441:
  4499  000748  EFCD  F003         	goto	l2720
  4500  00074C                     u2440:
  4501  00074C  AC0D               	btfss	___fladd@signs^0,6,c
  4502  00074E  EFAB  F003         	goto	u2451
  4503  000752  EFAD  F003         	goto	u2450
  4504  000756                     u2451:
  4505  000756  EFAF  F003         	goto	l2690
  4506  00075A                     u2450:
  4507  00075A  0E80               	movlw	128
  4508  00075C  1A0D               	xorwf	___fladd@signs^0,f,c
  4509  00075E                     l2690:
  4510  00075E  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  4511  000762  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  4512  000766  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  4513  00076A  C001  F010         	movff	___fladd@b,___fladd@grs
  4514  00076E  C005  F001         	movff	___fladd@a,___fladd@b
  4515  000772  C010  F005         	movff	___fladd@grs,___fladd@a
  4516  000776  C002  F010         	movff	___fladd@b+1,___fladd@grs
  4517  00077A  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  4518  00077E  C010  F006         	movff	___fladd@grs,___fladd@a+1
  4519  000782  C003  F010         	movff	___fladd@b+2,___fladd@grs
  4520  000786  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  4521  00078A  C010  F007         	movff	___fladd@grs,___fladd@a+2
  4522  00078E  C004  F010         	movff	___fladd@b+3,___fladd@grs
  4523  000792  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  4524  000796  C010  F008         	movff	___fladd@grs,___fladd@a+3
  4525  00079A                     l2720:
  4526  00079A  0E00               	movlw	0
  4527  00079C  6E10               	movwf	___fladd@grs^0,c
  4528  00079E  500F               	movf	___fladd@bexp^0,w,c
  4529  0007A0  C00E  F009         	movff	___fladd@aexp,??___fladd
  4530  0007A4  6A0A               	clrf	(??___fladd+1)^0,c
  4531  0007A6  5E09               	subwf	??___fladd^0,f,c
  4532  0007A8  0E00               	movlw	0
  4533  0007AA  5A0A               	subwfb	(??___fladd+1)^0,f,c
  4534  0007AC  BE0A               	btfsc	(??___fladd+1)^0,7,c
  4535  0007AE  EFE2  F003         	goto	u2461
  4536  0007B2  500A               	movf	(??___fladd+1)^0,w,c
  4537  0007B4  E109               	bnz	u2460
  4538  0007B6  0E1A               	movlw	26
  4539  0007B8  5C09               	subwf	??___fladd^0,w,c
  4540  0007BA  A0D8               	btfss	status,0,c
  4541  0007BC  EFE2  F003         	goto	u2461
  4542  0007C0  EFE4  F003         	goto	u2460
  4543  0007C4                     u2461:
  4544  0007C4  EF1B  F004         	goto	l912
  4545  0007C8                     u2460:
  4546  0007C8  5001               	movf	___fladd@b^0,w,c
  4547  0007CA  1002               	iorwf	(___fladd@b+1)^0,w,c
  4548  0007CC  1003               	iorwf	(___fladd@b+2)^0,w,c
  4549  0007CE  1004               	iorwf	(___fladd@b+3)^0,w,c
  4550  0007D0  A4D8               	btfss	status,2,c
  4551  0007D2  EFED  F003         	goto	u2471
  4552  0007D6  EFF0  F003         	goto	u2470
  4553  0007DA                     u2471:
  4554  0007DA  0E01               	movlw	1
  4555  0007DC  EFF1  F003         	goto	u2480
  4556  0007E0                     u2470:
  4557  0007E0  0E00               	movlw	0
  4558  0007E2                     u2480:
  4559  0007E2  6E10               	movwf	___fladd@grs^0,c
  4560  0007E4  0E00               	movlw	0
  4561  0007E6  6E01               	movwf	___fladd@b^0,c
  4562  0007E8  0E00               	movlw	0
  4563  0007EA  6E02               	movwf	(___fladd@b+1)^0,c
  4564  0007EC  0E00               	movlw	0
  4565  0007EE  6E03               	movwf	(___fladd@b+2)^0,c
  4566  0007F0  0E00               	movlw	0
  4567  0007F2  6E04               	movwf	(___fladd@b+3)^0,c
  4568  0007F4  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  4569  0007F8  EF24  F004         	goto	l911
  4570  0007FC                     l913:
  4571  0007FC  A010               	btfss	___fladd@grs^0,0,c
  4572  0007FE  EF03  F004         	goto	u2491
  4573  000802  EF05  F004         	goto	u2490
  4574  000806                     u2491:
  4575  000806  EF0B  F004         	goto	l2732
  4576  00080A                     u2490:
  4577  00080A  90D8               	bcf	status,0,c
  4578  00080C  3010               	rrcf	___fladd@grs^0,w,c
  4579  00080E  0901               	iorlw	1
  4580  000810  6E10               	movwf	___fladd@grs^0,c
  4581  000812  EF0D  F004         	goto	l2734
  4582  000816                     l2732:
  4583  000816  90D8               	bcf	status,0,c
  4584  000818  3210               	rrcf	___fladd@grs^0,f,c
  4585  00081A                     l2734:
  4586  00081A  A001               	btfss	___fladd@b^0,0,c
  4587  00081C  EF12  F004         	goto	u2501
  4588  000820  EF14  F004         	goto	u2500
  4589  000824                     u2501:
  4590  000824  EF15  F004         	goto	l2738
  4591  000828                     u2500:
  4592  000828  8E10               	bsf	___fladd@grs^0,7,c
  4593  00082A                     l2738:
  4594  00082A  3404               	rlcf	(___fladd@b+3)^0,w,c
  4595  00082C  3204               	rrcf	(___fladd@b+3)^0,f,c
  4596  00082E  3203               	rrcf	(___fladd@b+2)^0,f,c
  4597  000830  3202               	rrcf	(___fladd@b+1)^0,f,c
  4598  000832  3201               	rrcf	___fladd@b^0,f,c
  4599  000834  2A0F               	incf	___fladd@bexp^0,f,c
  4600  000836                     l912:
  4601  000836  500E               	movf	___fladd@aexp^0,w,c
  4602  000838  5C0F               	subwf	___fladd@bexp^0,w,c
  4603  00083A  A0D8               	btfss	status,0,c
  4604  00083C  EF22  F004         	goto	u2511
  4605  000840  EF24  F004         	goto	u2510
  4606  000844                     u2511:
  4607  000844  EFFE  F003         	goto	l913
  4608  000848                     u2510:
  4609  000848                     l911:
  4610  000848  BC0D               	btfsc	___fladd@signs^0,6,c
  4611  00084A  EF29  F004         	goto	u2521
  4612  00084E  EF2B  F004         	goto	u2520
  4613  000852                     u2521:
  4614  000852  EF6B  F004         	goto	l2766
  4615  000856                     u2520:
  4616  000856  500F               	movf	___fladd@bexp^0,w,c
  4617  000858  A4D8               	btfss	status,2,c
  4618  00085A  EF31  F004         	goto	u2531
  4619  00085E  EF33  F004         	goto	u2530
  4620  000862                     u2531:
  4621  000862  EF3D  F004         	goto	l2748
  4622  000866                     u2530:
  4623  000866  0E00               	movlw	0
  4624  000868  6E01               	movwf	?___fladd^0,c
  4625  00086A  0E00               	movlw	0
  4626  00086C  6E02               	movwf	(?___fladd+1)^0,c
  4627  00086E  0E00               	movlw	0
  4628  000870  6E03               	movwf	(?___fladd+2)^0,c
  4629  000872  0E00               	movlw	0
  4630  000874  6E04               	movwf	(?___fladd+3)^0,c
  4631  000876  EF8C  F005         	goto	l920
  4632  00087A                     l2748:
  4633  00087A  5005               	movf	___fladd@a^0,w,c
  4634  00087C  2601               	addwf	___fladd@b^0,f,c
  4635  00087E  5006               	movf	(___fladd@a+1)^0,w,c
  4636  000880  2202               	addwfc	(___fladd@b+1)^0,f,c
  4637  000882  5007               	movf	(___fladd@a+2)^0,w,c
  4638  000884  2203               	addwfc	(___fladd@b+2)^0,f,c
  4639  000886  5008               	movf	(___fladd@a+3)^0,w,c
  4640  000888  2204               	addwfc	(___fladd@b+3)^0,f,c
  4641  00088A  A004               	btfss	(___fladd@b+3)^0,0,c
  4642  00088C  EF4A  F004         	goto	u2541
  4643  000890  EF4C  F004         	goto	u2540
  4644  000894                     u2541:
  4645  000894  EFF8  F004         	goto	l2802
  4646  000898                     u2540:
  4647  000898  A010               	btfss	___fladd@grs^0,0,c
  4648  00089A  EF51  F004         	goto	u2551
  4649  00089E  EF53  F004         	goto	u2550
  4650  0008A2                     u2551:
  4651  0008A2  EF59  F004         	goto	l2756
  4652  0008A6                     u2550:
  4653  0008A6  90D8               	bcf	status,0,c
  4654  0008A8  3010               	rrcf	___fladd@grs^0,w,c
  4655  0008AA  0901               	iorlw	1
  4656  0008AC  6E10               	movwf	___fladd@grs^0,c
  4657  0008AE  EF5B  F004         	goto	l2758
  4658  0008B2                     l2756:
  4659  0008B2  90D8               	bcf	status,0,c
  4660  0008B4  3210               	rrcf	___fladd@grs^0,f,c
  4661  0008B6                     l2758:
  4662  0008B6  A001               	btfss	___fladd@b^0,0,c
  4663  0008B8  EF60  F004         	goto	u2561
  4664  0008BC  EF62  F004         	goto	u2560
  4665  0008C0                     u2561:
  4666  0008C0  EF63  F004         	goto	l2762
  4667  0008C4                     u2560:
  4668  0008C4  8E10               	bsf	___fladd@grs^0,7,c
  4669  0008C6                     l2762:
  4670  0008C6  3404               	rlcf	(___fladd@b+3)^0,w,c
  4671  0008C8  3204               	rrcf	(___fladd@b+3)^0,f,c
  4672  0008CA  3203               	rrcf	(___fladd@b+2)^0,f,c
  4673  0008CC  3202               	rrcf	(___fladd@b+1)^0,f,c
  4674  0008CE  3201               	rrcf	___fladd@b^0,f,c
  4675  0008D0  2A0F               	incf	___fladd@bexp^0,f,c
  4676  0008D2  EFF8  F004         	goto	l2802
  4677  0008D6                     l2766:
  4678  0008D6  5005               	movf	___fladd@a^0,w,c
  4679  0008D8  5C01               	subwf	___fladd@b^0,w,c
  4680  0008DA  5006               	movf	(___fladd@a+1)^0,w,c
  4681  0008DC  5802               	subwfb	(___fladd@b+1)^0,w,c
  4682  0008DE  5007               	movf	(___fladd@a+2)^0,w,c
  4683  0008E0  5803               	subwfb	(___fladd@b+2)^0,w,c
  4684  0008E2  5004               	movf	(___fladd@b+3)^0,w,c
  4685  0008E4  0A80               	xorlw	128
  4686  0008E6  6E09               	movwf	??___fladd^0,c
  4687  0008E8  5008               	movf	(___fladd@a+3)^0,w,c
  4688  0008EA  0A80               	xorlw	128
  4689  0008EC  5809               	subwfb	??___fladd^0,w,c
  4690  0008EE  B0D8               	btfsc	status,0,c
  4691  0008F0  EF7C  F004         	goto	u2571
  4692  0008F4  EF7E  F004         	goto	u2570
  4693  0008F8                     u2571:
  4694  0008F8  EFA9  F004         	goto	l2776
  4695  0008FC                     u2570:
  4696  0008FC  5001               	movf	___fladd@b^0,w,c
  4697  0008FE  5C05               	subwf	___fladd@a^0,w,c
  4698  000900  6E09               	movwf	??___fladd^0,c
  4699  000902  5002               	movf	(___fladd@b+1)^0,w,c
  4700  000904  5806               	subwfb	(___fladd@a+1)^0,w,c
  4701  000906  6E0A               	movwf	(??___fladd+1)^0,c
  4702  000908  5003               	movf	(___fladd@b+2)^0,w,c
  4703  00090A  5807               	subwfb	(___fladd@a+2)^0,w,c
  4704  00090C  6E0B               	movwf	(??___fladd+2)^0,c
  4705  00090E  5004               	movf	(___fladd@b+3)^0,w,c
  4706  000910  5808               	subwfb	(___fladd@a+3)^0,w,c
  4707  000912  6E0C               	movwf	(??___fladd+3)^0,c
  4708  000914  0EFF               	movlw	255
  4709  000916  2409               	addwf	??___fladd^0,w,c
  4710  000918  6E01               	movwf	___fladd@b^0,c
  4711  00091A  0EFF               	movlw	255
  4712  00091C  200A               	addwfc	(??___fladd+1)^0,w,c
  4713  00091E  6E02               	movwf	(___fladd@b+1)^0,c
  4714  000920  0EFF               	movlw	255
  4715  000922  200B               	addwfc	(??___fladd+2)^0,w,c
  4716  000924  6E03               	movwf	(___fladd@b+2)^0,c
  4717  000926  0EFF               	movlw	255
  4718  000928  200C               	addwfc	(??___fladd+3)^0,w,c
  4719  00092A  6E04               	movwf	(___fladd@b+3)^0,c
  4720  00092C  0E80               	movlw	128
  4721  00092E  1A0D               	xorwf	___fladd@signs^0,f,c
  4722  000930  6C10               	negf	___fladd@grs^0,c
  4723  000932  5010               	movf	___fladd@grs^0,w,c
  4724  000934  A4D8               	btfss	status,2,c
  4725  000936  EF9F  F004         	goto	u2581
  4726  00093A  EFA1  F004         	goto	u2580
  4727  00093E                     u2581:
  4728  00093E  EFB1  F004         	goto	l928
  4729  000942                     u2580:
  4730  000942  0E01               	movlw	1
  4731  000944  2601               	addwf	___fladd@b^0,f,c
  4732  000946  0E00               	movlw	0
  4733  000948  2202               	addwfc	(___fladd@b+1)^0,f,c
  4734  00094A  2203               	addwfc	(___fladd@b+2)^0,f,c
  4735  00094C  2204               	addwfc	(___fladd@b+3)^0,f,c
  4736  00094E  EFB1  F004         	goto	l928
  4737  000952                     l2776:
  4738  000952  5005               	movf	___fladd@a^0,w,c
  4739  000954  5E01               	subwf	___fladd@b^0,f,c
  4740  000956  5006               	movf	(___fladd@a+1)^0,w,c
  4741  000958  5A02               	subwfb	(___fladd@b+1)^0,f,c
  4742  00095A  5007               	movf	(___fladd@a+2)^0,w,c
  4743  00095C  5A03               	subwfb	(___fladd@b+2)^0,f,c
  4744  00095E  5008               	movf	(___fladd@a+3)^0,w,c
  4745  000960  5A04               	subwfb	(___fladd@b+3)^0,f,c
  4746  000962                     l928:
  4747  000962  5001               	movf	___fladd@b^0,w,c
  4748  000964  1002               	iorwf	(___fladd@b+1)^0,w,c
  4749  000966  1003               	iorwf	(___fladd@b+2)^0,w,c
  4750  000968  1004               	iorwf	(___fladd@b+3)^0,w,c
  4751  00096A  A4D8               	btfss	status,2,c
  4752  00096C  EFBA  F004         	goto	u2591
  4753  000970  EFBC  F004         	goto	u2590
  4754  000974                     u2591:
  4755  000974  EFF1  F004         	goto	l2800
  4756  000978                     u2590:
  4757  000978  5010               	movf	___fladd@grs^0,w,c
  4758  00097A  A4D8               	btfss	status,2,c
  4759  00097C  EFC2  F004         	goto	u2601
  4760  000980  EFC4  F004         	goto	u2600
  4761  000984                     u2601:
  4762  000984  EFF1  F004         	goto	l2800
  4763  000988                     u2600:
  4764  000988  0E00               	movlw	0
  4765  00098A  6E01               	movwf	?___fladd^0,c
  4766  00098C  0E00               	movlw	0
  4767  00098E  6E02               	movwf	(?___fladd+1)^0,c
  4768  000990  0E00               	movlw	0
  4769  000992  6E03               	movwf	(?___fladd+2)^0,c
  4770  000994  0E00               	movlw	0
  4771  000996  6E04               	movwf	(?___fladd+3)^0,c
  4772  000998  EF8C  F005         	goto	l920
  4773  00099C                     l2784:
  4774  00099C  90D8               	bcf	status,0,c
  4775  00099E  3601               	rlcf	___fladd@b^0,f,c
  4776  0009A0  3602               	rlcf	(___fladd@b+1)^0,f,c
  4777  0009A2  3603               	rlcf	(___fladd@b+2)^0,f,c
  4778  0009A4  3604               	rlcf	(___fladd@b+3)^0,f,c
  4779  0009A6  AE10               	btfss	___fladd@grs^0,7,c
  4780  0009A8  EFD8  F004         	goto	u2611
  4781  0009AC  EFDA  F004         	goto	u2610
  4782  0009B0                     u2611:
  4783  0009B0  EFDB  F004         	goto	l2790
  4784  0009B4                     u2610:
  4785  0009B4  8001               	bsf	___fladd@b^0,0,c
  4786  0009B6                     l2790:
  4787  0009B6  A010               	btfss	___fladd@grs^0,0,c
  4788  0009B8  EFE0  F004         	goto	u2621
  4789  0009BC  EFE2  F004         	goto	u2620
  4790  0009C0                     u2621:
  4791  0009C0  EFE6  F004         	goto	l2794
  4792  0009C4                     u2620:
  4793  0009C4  80D8               	bsf	status,0,c
  4794  0009C6  3610               	rlcf	___fladd@grs^0,f,c
  4795  0009C8  EFE8  F004         	goto	l2796
  4796  0009CC                     l2794:
  4797  0009CC  90D8               	bcf	status,0,c
  4798  0009CE  3610               	rlcf	___fladd@grs^0,f,c
  4799  0009D0                     l2796:
  4800  0009D0  500F               	movf	___fladd@bexp^0,w,c
  4801  0009D2  B4D8               	btfsc	status,2,c
  4802  0009D4  EFEE  F004         	goto	u2631
  4803  0009D8  EFF0  F004         	goto	u2630
  4804  0009DC                     u2631:
  4805  0009DC  EFF1  F004         	goto	l2800
  4806  0009E0                     u2630:
  4807  0009E0  060F               	decf	___fladd@bexp^0,f,c
  4808  0009E2                     l2800:
  4809  0009E2  AE03               	btfss	(___fladd@b+2)^0,7,c
  4810  0009E4  EFF6  F004         	goto	u2641
  4811  0009E8  EFF8  F004         	goto	u2640
  4812  0009EC                     u2641:
  4813  0009EC  EFCE  F004         	goto	l2784
  4814  0009F0                     u2640:
  4815  0009F0                     l2802:
  4816  0009F0  0E00               	movlw	0
  4817  0009F2  6E0E               	movwf	___fladd@aexp^0,c
  4818  0009F4  AE10               	btfss	___fladd@grs^0,7,c
  4819  0009F6  EFFF  F004         	goto	u2651
  4820  0009FA  EF01  F005         	goto	u2650
  4821  0009FE                     u2651:
  4822  0009FE  EF19  F005         	goto	l937
  4823  000A02                     u2650:
  4824  000A02  C010  F009         	movff	___fladd@grs,??___fladd
  4825  000A06  0E7F               	movlw	127
  4826  000A08  1609               	andwf	??___fladd^0,f,c
  4827  000A0A  B4D8               	btfsc	status,2,c
  4828  000A0C  EF0A  F005         	goto	u2661
  4829  000A10  EF0C  F005         	goto	u2660
  4830  000A14                     u2661:
  4831  000A14  EF10  F005         	goto	l938
  4832  000A18                     u2660:
  4833  000A18                     l2808:
  4834  000A18  0E01               	movlw	1
  4835  000A1A  6E0E               	movwf	___fladd@aexp^0,c
  4836  000A1C  EF19  F005         	goto	l937
  4837  000A20                     l938:
  4838  000A20  A001               	btfss	___fladd@b^0,0,c
  4839  000A22  EF15  F005         	goto	u2671
  4840  000A26  EF17  F005         	goto	u2670
  4841  000A2A                     u2671:
  4842  000A2A  EF19  F005         	goto	l937
  4843  000A2E                     u2670:
  4844  000A2E  EF0C  F005         	goto	l2808
  4845  000A32                     l937:
  4846  000A32  500E               	movf	___fladd@aexp^0,w,c
  4847  000A34  B4D8               	btfsc	status,2,c
  4848  000A36  EF1F  F005         	goto	u2681
  4849  000A3A  EF21  F005         	goto	u2680
  4850  000A3E                     u2681:
  4851  000A3E  EF4C  F005         	goto	l2820
  4852  000A42                     u2680:
  4853  000A42  0E01               	movlw	1
  4854  000A44  2601               	addwf	___fladd@b^0,f,c
  4855  000A46  0E00               	movlw	0
  4856  000A48  2202               	addwfc	(___fladd@b+1)^0,f,c
  4857  000A4A  2203               	addwfc	(___fladd@b+2)^0,f,c
  4858  000A4C  2204               	addwfc	(___fladd@b+3)^0,f,c
  4859  000A4E  A004               	btfss	(___fladd@b+3)^0,0,c
  4860  000A50  EF2C  F005         	goto	u2691
  4861  000A54  EF2E  F005         	goto	u2690
  4862  000A58                     u2691:
  4863  000A58  EF4C  F005         	goto	l2820
  4864  000A5C                     u2690:
  4865  000A5C  C001  F009         	movff	___fladd@b,??___fladd
  4866  000A60  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  4867  000A64  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  4868  000A68  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  4869  000A6C  340C               	rlcf	(??___fladd+3)^0,w,c
  4870  000A6E  320C               	rrcf	(??___fladd+3)^0,f,c
  4871  000A70  320B               	rrcf	(??___fladd+2)^0,f,c
  4872  000A72  320A               	rrcf	(??___fladd+1)^0,f,c
  4873  000A74  3209               	rrcf	??___fladd^0,f,c
  4874  000A76  C009  F001         	movff	??___fladd,___fladd@b
  4875  000A7A  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  4876  000A7E  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  4877  000A82  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  4878  000A86  280F               	incf	___fladd@bexp^0,w,c
  4879  000A88  B4D8               	btfsc	status,2,c
  4880  000A8A  EF49  F005         	goto	u2701
  4881  000A8E  EF4B  F005         	goto	u2700
  4882  000A92                     u2701:
  4883  000A92  EF4C  F005         	goto	l2820
  4884  000A96                     u2700:
  4885  000A96  2A0F               	incf	___fladd@bexp^0,f,c
  4886  000A98                     l2820:
  4887  000A98  280F               	incf	___fladd@bexp^0,w,c
  4888  000A9A  B4D8               	btfsc	status,2,c
  4889  000A9C  EF52  F005         	goto	u2711
  4890  000AA0  EF54  F005         	goto	u2710
  4891  000AA4                     u2711:
  4892  000AA4  EF5C  F005         	goto	l2824
  4893  000AA8                     u2710:
  4894  000AA8  500F               	movf	___fladd@bexp^0,w,c
  4895  000AAA  A4D8               	btfss	status,2,c
  4896  000AAC  EF5A  F005         	goto	u2721
  4897  000AB0  EF5C  F005         	goto	u2720
  4898  000AB4                     u2721:
  4899  000AB4  EF6E  F005         	goto	l2828
  4900  000AB8                     u2720:
  4901  000AB8                     l2824:
  4902  000AB8  0E00               	movlw	0
  4903  000ABA  6E01               	movwf	___fladd@b^0,c
  4904  000ABC  0E00               	movlw	0
  4905  000ABE  6E02               	movwf	(___fladd@b+1)^0,c
  4906  000AC0  0E00               	movlw	0
  4907  000AC2  6E03               	movwf	(___fladd@b+2)^0,c
  4908  000AC4  0E00               	movlw	0
  4909  000AC6  6E04               	movwf	(___fladd@b+3)^0,c
  4910  000AC8  500F               	movf	___fladd@bexp^0,w,c
  4911  000ACA  A4D8               	btfss	status,2,c
  4912  000ACC  EF6A  F005         	goto	u2731
  4913  000AD0  EF6C  F005         	goto	u2730
  4914  000AD4                     u2731:
  4915  000AD4  EF6E  F005         	goto	l2828
  4916  000AD8                     u2730:
  4917  000AD8  0E00               	movlw	0
  4918  000ADA  6E0D               	movwf	___fladd@signs^0,c
  4919  000ADC                     l2828:
  4920  000ADC  A00F               	btfss	___fladd@bexp^0,0,c
  4921  000ADE  EF73  F005         	goto	u2741
  4922  000AE2  EF75  F005         	goto	u2740
  4923  000AE6                     u2741:
  4924  000AE6  EF78  F005         	goto	l2832
  4925  000AEA                     u2740:
  4926  000AEA  8E03               	bsf	(___fladd@b+2)^0,7,c
  4927  000AEC  EF79  F005         	goto	l2834
  4928  000AF0                     l2832:
  4929  000AF0  9E03               	bcf	(___fladd@b+2)^0,7,c
  4930  000AF2                     l2834:
  4931  000AF2  90D8               	bcf	status,0,c
  4932  000AF4  300F               	rrcf	___fladd@bexp^0,w,c
  4933  000AF6  6E04               	movwf	(___fladd@b+3)^0,c
  4934  000AF8  AE0D               	btfss	___fladd@signs^0,7,c
  4935  000AFA  EF81  F005         	goto	u2751
  4936  000AFE  EF83  F005         	goto	u2750
  4937  000B02                     u2751:
  4938  000B02  EF84  F005         	goto	l2840
  4939  000B06                     u2750:
  4940  000B06  8E04               	bsf	(___fladd@b+3)^0,7,c
  4941  000B08                     l2840:
  4942  000B08  C001  F001         	movff	___fladd@b,?___fladd
  4943  000B0C  C002  F002         	movff	___fladd@b+1,?___fladd+1
  4944  000B10  C003  F003         	movff	___fladd@b+2,?___fladd+2
  4945  000B14  C004  F004         	movff	___fladd@b+3,?___fladd+3
  4946  000B18                     l920:
  4947  000B18  0012               	return		;funcret
  4948  000B1A                     __end_of___fladd:
  4949                           	callstack 0
  4950                           
  4951 ;; *************** function ___awmod *****************
  4952 ;; Defined at:
  4953 ;;		line 7 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/awmod.c"
  4954 ;; Parameters:    Size  Location     Type
  4955 ;;  dividend        2   18[COMRAM] int 
  4956 ;;  divisor         2   20[COMRAM] int 
  4957 ;; Auto vars:     Size  Location     Type
  4958 ;;  sign            1   23[COMRAM] unsigned char 
  4959 ;;  counter         1   22[COMRAM] unsigned char 
  4960 ;; Return value:  Size  Location     Type
  4961 ;;                  2   18[COMRAM] int 
  4962 ;; Registers used:
  4963 ;;		wreg, status,2, status,0
  4964 ;; Tracked objects:
  4965 ;;		On entry : 0/0
  4966 ;;		On exit  : 0/0
  4967 ;;		Unchanged: 0/0
  4968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4969 ;;      Params:         4       0       0       0       0       0       0
  4970 ;;      Locals:         2       0       0       0       0       0       0
  4971 ;;      Temps:          0       0       0       0       0       0       0
  4972 ;;      Totals:         6       0       0       0       0       0       0
  4973 ;;Total ram usage:        6 bytes
  4974 ;; Hardware stack levels used: 1
  4975 ;; This function calls:
  4976 ;;		Nothing
  4977 ;; This function is called by:
  4978 ;;		_Apostando
  4979 ;; This function uses a non-reentrant model
  4980 ;;
  4981                           
  4982                           	psect	text28
  4983  001B48                     __ptext28:
  4984                           	callstack 0
  4985  001B48                     ___awmod:
  4986                           	callstack 28
  4987  001B48  0E00               	movlw	0
  4988  001B4A  6E18               	movwf	___awmod@sign^0,c
  4989  001B4C  BE14               	btfsc	(___awmod@dividend+1)^0,7,c
  4990  001B4E  EFAD  F00D         	goto	u2760
  4991  001B52  EFAB  F00D         	goto	u2761
  4992  001B56                     u2761:
  4993  001B56  EFB3  F00D         	goto	l2852
  4994  001B5A                     u2760:
  4995  001B5A  6C13               	negf	___awmod@dividend^0,c
  4996  001B5C  1E14               	comf	(___awmod@dividend+1)^0,f,c
  4997  001B5E  B0D8               	btfsc	status,0,c
  4998  001B60  2A14               	incf	(___awmod@dividend+1)^0,f,c
  4999  001B62  0E01               	movlw	1
  5000  001B64  6E18               	movwf	___awmod@sign^0,c
  5001  001B66                     l2852:
  5002  001B66  BE16               	btfsc	(___awmod@divisor+1)^0,7,c
  5003  001B68  EFBA  F00D         	goto	u2770
  5004  001B6C  EFB8  F00D         	goto	u2771
  5005  001B70                     u2771:
  5006  001B70  EFBE  F00D         	goto	l2856
  5007  001B74                     u2770:
  5008  001B74  6C15               	negf	___awmod@divisor^0,c
  5009  001B76  1E16               	comf	(___awmod@divisor+1)^0,f,c
  5010  001B78  B0D8               	btfsc	status,0,c
  5011  001B7A  2A16               	incf	(___awmod@divisor+1)^0,f,c
  5012  001B7C                     l2856:
  5013  001B7C  5015               	movf	___awmod@divisor^0,w,c
  5014  001B7E  1016               	iorwf	(___awmod@divisor+1)^0,w,c
  5015  001B80  B4D8               	btfsc	status,2,c
  5016  001B82  EFC5  F00D         	goto	u2781
  5017  001B86  EFC7  F00D         	goto	u2780
  5018  001B8A                     u2781:
  5019  001B8A  EFEB  F00D         	goto	l2872
  5020  001B8E                     u2780:
  5021  001B8E  0E01               	movlw	1
  5022  001B90  6E17               	movwf	___awmod@counter^0,c
  5023  001B92  EFCF  F00D         	goto	l2862
  5024  001B96                     l2860:
  5025  001B96  90D8               	bcf	status,0,c
  5026  001B98  3615               	rlcf	___awmod@divisor^0,f,c
  5027  001B9A  3616               	rlcf	(___awmod@divisor+1)^0,f,c
  5028  001B9C  2A17               	incf	___awmod@counter^0,f,c
  5029  001B9E                     l2862:
  5030  001B9E  AE16               	btfss	(___awmod@divisor+1)^0,7,c
  5031  001BA0  EFD4  F00D         	goto	u2791
  5032  001BA4  EFD6  F00D         	goto	u2790
  5033  001BA8                     u2791:
  5034  001BA8  EFCB  F00D         	goto	l2860
  5035  001BAC                     u2790:
  5036  001BAC                     l2864:
  5037  001BAC  5015               	movf	___awmod@divisor^0,w,c
  5038  001BAE  5C13               	subwf	___awmod@dividend^0,w,c
  5039  001BB0  5016               	movf	(___awmod@divisor+1)^0,w,c
  5040  001BB2  5814               	subwfb	(___awmod@dividend+1)^0,w,c
  5041  001BB4  A0D8               	btfss	status,0,c
  5042  001BB6  EFDF  F00D         	goto	u2801
  5043  001BBA  EFE1  F00D         	goto	u2800
  5044  001BBE                     u2801:
  5045  001BBE  EFE5  F00D         	goto	l2868
  5046  001BC2                     u2800:
  5047  001BC2  5015               	movf	___awmod@divisor^0,w,c
  5048  001BC4  5E13               	subwf	___awmod@dividend^0,f,c
  5049  001BC6  5016               	movf	(___awmod@divisor+1)^0,w,c
  5050  001BC8  5A14               	subwfb	(___awmod@dividend+1)^0,f,c
  5051  001BCA                     l2868:
  5052  001BCA  90D8               	bcf	status,0,c
  5053  001BCC  3216               	rrcf	(___awmod@divisor+1)^0,f,c
  5054  001BCE  3215               	rrcf	___awmod@divisor^0,f,c
  5055  001BD0  2E17               	decfsz	___awmod@counter^0,f,c
  5056  001BD2  EFD6  F00D         	goto	l2864
  5057  001BD6                     l2872:
  5058  001BD6  5018               	movf	___awmod@sign^0,w,c
  5059  001BD8  B4D8               	btfsc	status,2,c
  5060  001BDA  EFF1  F00D         	goto	u2811
  5061  001BDE  EFF3  F00D         	goto	u2810
  5062  001BE2                     u2811:
  5063  001BE2  EFF7  F00D         	goto	l2876
  5064  001BE6                     u2810:
  5065  001BE6  6C13               	negf	___awmod@dividend^0,c
  5066  001BE8  1E14               	comf	(___awmod@dividend+1)^0,f,c
  5067  001BEA  B0D8               	btfsc	status,0,c
  5068  001BEC  2A14               	incf	(___awmod@dividend+1)^0,f,c
  5069  001BEE                     l2876:
  5070  001BEE  C013  F013         	movff	___awmod@dividend,?___awmod
  5071  001BF2  C014  F014         	movff	___awmod@dividend+1,?___awmod+1
  5072  001BF6  0012               	return		;funcret
  5073  001BF8                     __end_of___awmod:
  5074                           	callstack 0
  5075                           
  5076 ;; *************** function _ssdInit *****************
  5077 ;; Defined at:
  5078 ;;		line 101 in file "ssd.c"
  5079 ;; Parameters:    Size  Location     Type
  5080 ;;		None
  5081 ;; Auto vars:     Size  Location     Type
  5082 ;;		None
  5083 ;; Return value:  Size  Location     Type
  5084 ;;                  1    wreg      void 
  5085 ;; Registers used:
  5086 ;;		wreg, status,2, status,0, cstack
  5087 ;; Tracked objects:
  5088 ;;		On entry : 0/0
  5089 ;;		On exit  : 0/0
  5090 ;;		Unchanged: 0/0
  5091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5092 ;;      Params:         0       0       0       0       0       0       0
  5093 ;;      Locals:         0       0       0       0       0       0       0
  5094 ;;      Temps:          0       0       0       0       0       0       0
  5095 ;;      Totals:         0       0       0       0       0       0       0
  5096 ;;Total ram usage:        0 bytes
  5097 ;; Hardware stack levels used: 1
  5098 ;; Hardware stack levels required when called: 1
  5099 ;; This function calls:
  5100 ;;		_pinMode
  5101 ;; This function is called by:
  5102 ;;		_main
  5103 ;; This function uses a non-reentrant model
  5104 ;;
  5105                           
  5106                           	psect	text29
  5107  002366                     __ptext29:
  5108                           	callstack 0
  5109  002366                     _ssdInit:
  5110                           	callstack 29
  5111  002366                     
  5112                           ;ssd.c: 103:     pinMode(PIN_A2, 0);
  5113  002366  0E00               	movlw	0
  5114  002368  6E02               	movwf	(pinMode@pin+1)^0,c
  5115  00236A  0E02               	movlw	2
  5116  00236C  6E01               	movwf	pinMode@pin^0,c
  5117  00236E  0E00               	movlw	0
  5118  002370  6E04               	movwf	(pinMode@type+1)^0,c
  5119  002372  0E00               	movlw	0
  5120  002374  6E03               	movwf	pinMode@type^0,c
  5121  002376  ECF6  F006         	call	_pinMode	;wreg free
  5122                           
  5123                           ;ssd.c: 104:     pinMode(PIN_A3, 0);
  5124  00237A  0E00               	movlw	0
  5125  00237C  6E02               	movwf	(pinMode@pin+1)^0,c
  5126  00237E  0E03               	movlw	3
  5127  002380  6E01               	movwf	pinMode@pin^0,c
  5128  002382  0E00               	movlw	0
  5129  002384  6E04               	movwf	(pinMode@type+1)^0,c
  5130  002386  0E00               	movlw	0
  5131  002388  6E03               	movwf	pinMode@type^0,c
  5132  00238A  ECF6  F006         	call	_pinMode	;wreg free
  5133                           
  5134                           ;ssd.c: 105:     pinMode(PIN_A4, 0);
  5135  00238E  0E00               	movlw	0
  5136  002390  6E02               	movwf	(pinMode@pin+1)^0,c
  5137  002392  0E04               	movlw	4
  5138  002394  6E01               	movwf	pinMode@pin^0,c
  5139  002396  0E00               	movlw	0
  5140  002398  6E04               	movwf	(pinMode@type+1)^0,c
  5141  00239A  0E00               	movlw	0
  5142  00239C  6E03               	movwf	pinMode@type^0,c
  5143  00239E  ECF6  F006         	call	_pinMode	;wreg free
  5144                           
  5145                           ;ssd.c: 106:     pinMode(PIN_A5, 0);
  5146  0023A2  0E00               	movlw	0
  5147  0023A4  6E02               	movwf	(pinMode@pin+1)^0,c
  5148  0023A6  0E05               	movlw	5
  5149  0023A8  6E01               	movwf	pinMode@pin^0,c
  5150  0023AA  0E00               	movlw	0
  5151  0023AC  6E04               	movwf	(pinMode@type+1)^0,c
  5152  0023AE  0E00               	movlw	0
  5153  0023B0  6E03               	movwf	pinMode@type^0,c
  5154  0023B2  ECF6  F006         	call	_pinMode	;wreg free
  5155  0023B6                     
  5156                           ;ssd.c: 109:     TRISD = 0x00;
  5157  0023B6  0E00               	movlw	0
  5158  0023B8  6E95               	movwf	149,c	;volatile
  5159  0023BA  0012               	return		;funcret
  5160  0023BC                     __end_of_ssdInit:
  5161                           	callstack 0
  5162                           
  5163 ;; *************** function _srand *****************
  5164 ;; Defined at:
  5165 ;;		line 6 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/rand.c"
  5166 ;; Parameters:    Size  Location     Type
  5167 ;;  s               2    8[COMRAM] unsigned int 
  5168 ;; Auto vars:     Size  Location     Type
  5169 ;;		None
  5170 ;; Return value:  Size  Location     Type
  5171 ;;                  1    wreg      void 
  5172 ;; Registers used:
  5173 ;;		wreg, status,2, status,0
  5174 ;; Tracked objects:
  5175 ;;		On entry : 0/0
  5176 ;;		On exit  : 0/0
  5177 ;;		Unchanged: 0/0
  5178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5179 ;;      Params:         2       0       0       0       0       0       0
  5180 ;;      Locals:         0       0       0       0       0       0       0
  5181 ;;      Temps:          4       0       0       0       0       0       0
  5182 ;;      Totals:         6       0       0       0       0       0       0
  5183 ;;Total ram usage:        6 bytes
  5184 ;; Hardware stack levels used: 1
  5185 ;; This function calls:
  5186 ;;		Nothing
  5187 ;; This function is called by:
  5188 ;;		_main
  5189 ;; This function uses a non-reentrant model
  5190 ;;
  5191                           
  5192                           	psect	text30
  5193  002536                     __ptext30:
  5194                           	callstack 0
  5195  002536                     _srand:
  5196                           	callstack 30
  5197  002536  0EFF               	movlw	255
  5198  002538  6E0B               	movwf	??_srand^0,c
  5199  00253A  0EFF               	movlw	255
  5200  00253C  6E0C               	movwf	(??_srand+1)^0,c
  5201  00253E  C009  F00D         	movff	srand@s,??_srand+2
  5202  002542  C00A  F00E         	movff	srand@s+1,??_srand+3
  5203  002546  500B               	movf	??_srand^0,w,c
  5204  002548  260D               	addwf	(??_srand+2)^0,f,c
  5205  00254A  500C               	movf	(??_srand+1)^0,w,c
  5206  00254C  220E               	addwfc	(??_srand+3)^0,f,c
  5207  00254E  C00D  F0F6         	movff	??_srand+2,_seed
  5208  002552  C00E  F0F7         	movff	??_srand+3,_seed+1
  5209  002556  0100               	movlb	0	; () banked
  5210  002558  6BF8               	clrf	(_seed+2)& (0+255),b
  5211  00255A  6BF9               	clrf	(_seed+3)& (0+255),b
  5212  00255C                     
  5213                           ; BSR set to: 0
  5214  00255C  0012               	return		;funcret
  5215  00255E                     __end_of_srand:
  5216                           	callstack 0
  5217                           
  5218 ;; *************** function _pwmInit *****************
  5219 ;; Defined at:
  5220 ;;		line 51 in file "pwm.c"
  5221 ;; Parameters:    Size  Location     Type
  5222 ;;		None
  5223 ;; Auto vars:     Size  Location     Type
  5224 ;;		None
  5225 ;; Return value:  Size  Location     Type
  5226 ;;                  1    wreg      void 
  5227 ;; Registers used:
  5228 ;;		wreg, status,2, status,0, cstack
  5229 ;; Tracked objects:
  5230 ;;		On entry : 0/0
  5231 ;;		On exit  : 0/0
  5232 ;;		Unchanged: 0/0
  5233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5234 ;;      Params:         0       0       0       0       0       0       0
  5235 ;;      Locals:         0       0       0       0       0       0       0
  5236 ;;      Temps:          0       0       0       0       0       0       0
  5237 ;;      Totals:         0       0       0       0       0       0       0
  5238 ;;Total ram usage:        0 bytes
  5239 ;; Hardware stack levels used: 1
  5240 ;; Hardware stack levels required when called: 2
  5241 ;; This function calls:
  5242 ;;		_pwmFrequency
  5243 ;; This function is called by:
  5244 ;;		_main
  5245 ;; This function uses a non-reentrant model
  5246 ;;
  5247                           
  5248                           	psect	text31
  5249  0025C6                     __ptext31:
  5250                           	callstack 0
  5251  0025C6                     _pwmInit:
  5252                           	callstack 28
  5253  0025C6                     
  5254                           ;pwm.c: 53:  ((TRISC) &= ~(1<<(2)));
  5255  0025C6  9494               	bcf	148,2,c	;volatile
  5256  0025C8                     
  5257                           ;pwm.c: 55:  T2CON |= 0b00000011;
  5258  0025C8  0E03               	movlw	3
  5259  0025CA  12CA               	iorwf	202,f,c	;volatile
  5260  0025CC                     
  5261                           ;pwm.c: 56:  ((T2CON) |= (1<<(2)));
  5262  0025CC  84CA               	bsf	202,2,c	;volatile
  5263  0025CE                     
  5264                           ;pwm.c: 58:  CCP1CON = 0b00001100;
  5265  0025CE  0E0C               	movlw	12
  5266  0025D0  6EBD               	movwf	189,c	;volatile
  5267  0025D2                     
  5268                           ;pwm.c: 60:     pwmFrequency(100);
  5269  0025D2  0E00               	movlw	0
  5270  0025D4  6E10               	movwf	(pwmFrequency@freq+1)^0,c
  5271  0025D6  0E64               	movlw	100
  5272  0025D8  6E0F               	movwf	pwmFrequency@freq^0,c
  5273  0025DA  ECC2  F012         	call	_pwmFrequency	;wreg free
  5274  0025DE  0012               	return		;funcret
  5275  0025E0                     __end_of_pwmInit:
  5276                           	callstack 0
  5277                           
  5278 ;; *************** function _pwmFrequency *****************
  5279 ;; Defined at:
  5280 ;;		line 44 in file "pwm.c"
  5281 ;; Parameters:    Size  Location     Type
  5282 ;;  freq            2   14[COMRAM] unsigned int 
  5283 ;; Auto vars:     Size  Location     Type
  5284 ;;		None
  5285 ;; Return value:  Size  Location     Type
  5286 ;;                  1    wreg      void 
  5287 ;; Registers used:
  5288 ;;		wreg, status,2, status,0, cstack
  5289 ;; Tracked objects:
  5290 ;;		On entry : 0/0
  5291 ;;		On exit  : 0/0
  5292 ;;		Unchanged: 0/0
  5293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5294 ;;      Params:         2       0       0       0       0       0       0
  5295 ;;      Locals:         0       0       0       0       0       0       0
  5296 ;;      Temps:          0       0       0       0       0       0       0
  5297 ;;      Totals:         2       0       0       0       0       0       0
  5298 ;;Total ram usage:        2 bytes
  5299 ;; Hardware stack levels used: 1
  5300 ;; Hardware stack levels required when called: 1
  5301 ;; This function calls:
  5302 ;;		___aldiv
  5303 ;; This function is called by:
  5304 ;;		_pwmInit
  5305 ;;		_textApostando
  5306 ;; This function uses a non-reentrant model
  5307 ;;
  5308                           
  5309                           	psect	text32
  5310  002584                     __ptext32:
  5311                           	callstack 0
  5312  002584                     _pwmFrequency:
  5313                           	callstack 28
  5314  002584                     
  5315                           ;pwm.c: 44: void pwmFrequency(unsigned int freq);pwm.c: 45: {;pwm.c: 48:  PR2 = (125000l
      +                          /(freq)) - 1;
  5316  002584  0E48               	movlw	72
  5317  002586  6E01               	movwf	___aldiv@dividend^0,c
  5318  002588  0EE8               	movlw	232
  5319  00258A  6E02               	movwf	(___aldiv@dividend+1)^0,c
  5320  00258C  0E01               	movlw	1
  5321  00258E  6E03               	movwf	(___aldiv@dividend+2)^0,c
  5322  002590  0E00               	movlw	0
  5323  002592  6E04               	movwf	(___aldiv@dividend+3)^0,c
  5324  002594  C00F  F005         	movff	pwmFrequency@freq,___aldiv@divisor
  5325  002598  C010  F006         	movff	pwmFrequency@freq+1,___aldiv@divisor+1
  5326  00259C  6A07               	clrf	(___aldiv@divisor+2)^0,c
  5327  00259E  6A08               	clrf	(___aldiv@divisor+3)^0,c
  5328  0025A0  EC5F  F00B         	call	___aldiv	;wreg free
  5329  0025A4  0401               	decf	?___aldiv^0,w,c
  5330  0025A6  6ECB               	movwf	203,c	;volatile
  5331  0025A8  0012               	return		;funcret
  5332  0025AA                     __end_of_pwmFrequency:
  5333                           	callstack 0
  5334                           
  5335 ;; *************** function ___aldiv *****************
  5336 ;; Defined at:
  5337 ;;		line 7 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/aldiv.c"
  5338 ;; Parameters:    Size  Location     Type
  5339 ;;  dividend        4    0[COMRAM] long 
  5340 ;;  divisor         4    4[COMRAM] long 
  5341 ;; Auto vars:     Size  Location     Type
  5342 ;;  quotient        4   10[COMRAM] long 
  5343 ;;  sign            1    9[COMRAM] unsigned char 
  5344 ;;  counter         1    8[COMRAM] unsigned char 
  5345 ;; Return value:  Size  Location     Type
  5346 ;;                  4    0[COMRAM] long 
  5347 ;; Registers used:
  5348 ;;		wreg, status,2, status,0
  5349 ;; Tracked objects:
  5350 ;;		On entry : 0/0
  5351 ;;		On exit  : 0/0
  5352 ;;		Unchanged: 0/0
  5353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5354 ;;      Params:         8       0       0       0       0       0       0
  5355 ;;      Locals:         6       0       0       0       0       0       0
  5356 ;;      Temps:          0       0       0       0       0       0       0
  5357 ;;      Totals:        14       0       0       0       0       0       0
  5358 ;;Total ram usage:       14 bytes
  5359 ;; Hardware stack levels used: 1
  5360 ;; This function calls:
  5361 ;;		Nothing
  5362 ;; This function is called by:
  5363 ;;		_pwmFrequency
  5364 ;; This function uses a non-reentrant model
  5365 ;;
  5366                           
  5367                           	psect	text33
  5368  0016BE                     __ptext33:
  5369                           	callstack 0
  5370  0016BE                     ___aldiv:
  5371                           	callstack 28
  5372  0016BE  0E00               	movlw	0
  5373  0016C0  6E0A               	movwf	___aldiv@sign^0,c
  5374  0016C2  BE08               	btfsc	(___aldiv@divisor+3)^0,7,c
  5375  0016C4  EF68  F00B         	goto	u2310
  5376  0016C8  EF66  F00B         	goto	u2311
  5377  0016CC                     u2311:
  5378  0016CC  EF72  F00B         	goto	l2606
  5379  0016D0                     u2310:
  5380  0016D0  1E08               	comf	(___aldiv@divisor+3)^0,f,c
  5381  0016D2  1E07               	comf	(___aldiv@divisor+2)^0,f,c
  5382  0016D4  1E06               	comf	(___aldiv@divisor+1)^0,f,c
  5383  0016D6  6C05               	negf	___aldiv@divisor^0,c
  5384  0016D8  0E00               	movlw	0
  5385  0016DA  2206               	addwfc	(___aldiv@divisor+1)^0,f,c
  5386  0016DC  2207               	addwfc	(___aldiv@divisor+2)^0,f,c
  5387  0016DE  2208               	addwfc	(___aldiv@divisor+3)^0,f,c
  5388  0016E0  0E01               	movlw	1
  5389  0016E2  6E0A               	movwf	___aldiv@sign^0,c
  5390  0016E4                     l2606:
  5391  0016E4  BE04               	btfsc	(___aldiv@dividend+3)^0,7,c
  5392  0016E6  EF79  F00B         	goto	u2320
  5393  0016EA  EF77  F00B         	goto	u2321
  5394  0016EE                     u2321:
  5395  0016EE  EF83  F00B         	goto	l2612
  5396  0016F2                     u2320:
  5397  0016F2  1E04               	comf	(___aldiv@dividend+3)^0,f,c
  5398  0016F4  1E03               	comf	(___aldiv@dividend+2)^0,f,c
  5399  0016F6  1E02               	comf	(___aldiv@dividend+1)^0,f,c
  5400  0016F8  6C01               	negf	___aldiv@dividend^0,c
  5401  0016FA  0E00               	movlw	0
  5402  0016FC  2202               	addwfc	(___aldiv@dividend+1)^0,f,c
  5403  0016FE  2203               	addwfc	(___aldiv@dividend+2)^0,f,c
  5404  001700  2204               	addwfc	(___aldiv@dividend+3)^0,f,c
  5405  001702  0E01               	movlw	1
  5406  001704  1A0A               	xorwf	___aldiv@sign^0,f,c
  5407  001706                     l2612:
  5408  001706  0E00               	movlw	0
  5409  001708  6E0B               	movwf	___aldiv@quotient^0,c
  5410  00170A  0E00               	movlw	0
  5411  00170C  6E0C               	movwf	(___aldiv@quotient+1)^0,c
  5412  00170E  0E00               	movlw	0
  5413  001710  6E0D               	movwf	(___aldiv@quotient+2)^0,c
  5414  001712  0E00               	movlw	0
  5415  001714  6E0E               	movwf	(___aldiv@quotient+3)^0,c
  5416  001716  5005               	movf	___aldiv@divisor^0,w,c
  5417  001718  1006               	iorwf	(___aldiv@divisor+1)^0,w,c
  5418  00171A  1007               	iorwf	(___aldiv@divisor+2)^0,w,c
  5419  00171C  1008               	iorwf	(___aldiv@divisor+3)^0,w,c
  5420  00171E  B4D8               	btfsc	status,2,c
  5421  001720  EF94  F00B         	goto	u2331
  5422  001724  EF96  F00B         	goto	u2330
  5423  001728                     u2331:
  5424  001728  EFCC  F00B         	goto	l2634
  5425  00172C                     u2330:
  5426  00172C  0E01               	movlw	1
  5427  00172E  6E09               	movwf	___aldiv@counter^0,c
  5428  001730  EFA0  F00B         	goto	l2620
  5429  001734                     l2618:
  5430  001734  90D8               	bcf	status,0,c
  5431  001736  3605               	rlcf	___aldiv@divisor^0,f,c
  5432  001738  3606               	rlcf	(___aldiv@divisor+1)^0,f,c
  5433  00173A  3607               	rlcf	(___aldiv@divisor+2)^0,f,c
  5434  00173C  3608               	rlcf	(___aldiv@divisor+3)^0,f,c
  5435  00173E  2A09               	incf	___aldiv@counter^0,f,c
  5436  001740                     l2620:
  5437  001740  AE08               	btfss	(___aldiv@divisor+3)^0,7,c
  5438  001742  EFA5  F00B         	goto	u2341
  5439  001746  EFA7  F00B         	goto	u2340
  5440  00174A                     u2341:
  5441  00174A  EF9A  F00B         	goto	l2618
  5442  00174E                     u2340:
  5443  00174E                     l2622:
  5444  00174E  90D8               	bcf	status,0,c
  5445  001750  360B               	rlcf	___aldiv@quotient^0,f,c
  5446  001752  360C               	rlcf	(___aldiv@quotient+1)^0,f,c
  5447  001754  360D               	rlcf	(___aldiv@quotient+2)^0,f,c
  5448  001756  360E               	rlcf	(___aldiv@quotient+3)^0,f,c
  5449  001758  5005               	movf	___aldiv@divisor^0,w,c
  5450  00175A  5C01               	subwf	___aldiv@dividend^0,w,c
  5451  00175C  5006               	movf	(___aldiv@divisor+1)^0,w,c
  5452  00175E  5802               	subwfb	(___aldiv@dividend+1)^0,w,c
  5453  001760  5007               	movf	(___aldiv@divisor+2)^0,w,c
  5454  001762  5803               	subwfb	(___aldiv@dividend+2)^0,w,c
  5455  001764  5008               	movf	(___aldiv@divisor+3)^0,w,c
  5456  001766  5804               	subwfb	(___aldiv@dividend+3)^0,w,c
  5457  001768  A0D8               	btfss	status,0,c
  5458  00176A  EFB9  F00B         	goto	u2351
  5459  00176E  EFBB  F00B         	goto	u2350
  5460  001772                     u2351:
  5461  001772  EFC4  F00B         	goto	l2630
  5462  001776                     u2350:
  5463  001776  5005               	movf	___aldiv@divisor^0,w,c
  5464  001778  5E01               	subwf	___aldiv@dividend^0,f,c
  5465  00177A  5006               	movf	(___aldiv@divisor+1)^0,w,c
  5466  00177C  5A02               	subwfb	(___aldiv@dividend+1)^0,f,c
  5467  00177E  5007               	movf	(___aldiv@divisor+2)^0,w,c
  5468  001780  5A03               	subwfb	(___aldiv@dividend+2)^0,f,c
  5469  001782  5008               	movf	(___aldiv@divisor+3)^0,w,c
  5470  001784  5A04               	subwfb	(___aldiv@dividend+3)^0,f,c
  5471  001786  800B               	bsf	___aldiv@quotient^0,0,c
  5472  001788                     l2630:
  5473  001788  90D8               	bcf	status,0,c
  5474  00178A  3208               	rrcf	(___aldiv@divisor+3)^0,f,c
  5475  00178C  3207               	rrcf	(___aldiv@divisor+2)^0,f,c
  5476  00178E  3206               	rrcf	(___aldiv@divisor+1)^0,f,c
  5477  001790  3205               	rrcf	___aldiv@divisor^0,f,c
  5478  001792  2E09               	decfsz	___aldiv@counter^0,f,c
  5479  001794  EFA7  F00B         	goto	l2622
  5480  001798                     l2634:
  5481  001798  500A               	movf	___aldiv@sign^0,w,c
  5482  00179A  B4D8               	btfsc	status,2,c
  5483  00179C  EFD2  F00B         	goto	u2361
  5484  0017A0  EFD4  F00B         	goto	u2360
  5485  0017A4                     u2361:
  5486  0017A4  EFDC  F00B         	goto	l2638
  5487  0017A8                     u2360:
  5488  0017A8  1E0E               	comf	(___aldiv@quotient+3)^0,f,c
  5489  0017AA  1E0D               	comf	(___aldiv@quotient+2)^0,f,c
  5490  0017AC  1E0C               	comf	(___aldiv@quotient+1)^0,f,c
  5491  0017AE  6C0B               	negf	___aldiv@quotient^0,c
  5492  0017B0  0E00               	movlw	0
  5493  0017B2  220C               	addwfc	(___aldiv@quotient+1)^0,f,c
  5494  0017B4  220D               	addwfc	(___aldiv@quotient+2)^0,f,c
  5495  0017B6  220E               	addwfc	(___aldiv@quotient+3)^0,f,c
  5496  0017B8                     l2638:
  5497  0017B8  C00B  F001         	movff	___aldiv@quotient,?___aldiv
  5498  0017BC  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
  5499  0017C0  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
  5500  0017C4  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
  5501  0017C8  0012               	return		;funcret
  5502  0017CA                     __end_of___aldiv:
  5503                           	callstack 0
  5504                           
  5505 ;; *************** function _lcdInit *****************
  5506 ;; Defined at:
  5507 ;;		line 95 in file "lcd.c"
  5508 ;; Parameters:    Size  Location     Type
  5509 ;;		None
  5510 ;; Auto vars:     Size  Location     Type
  5511 ;;		None
  5512 ;; Return value:  Size  Location     Type
  5513 ;;                  1    wreg      void 
  5514 ;; Registers used:
  5515 ;;		wreg, status,2, status,0, cstack
  5516 ;; Tracked objects:
  5517 ;;		On entry : 0/0
  5518 ;;		On exit  : 0/0
  5519 ;;		Unchanged: 0/0
  5520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5521 ;;      Params:         0       0       0       0       0       0       0
  5522 ;;      Locals:         0       0       0       0       0       0       0
  5523 ;;      Temps:          0       0       0       0       0       0       0
  5524 ;;      Totals:         0       0       0       0       0       0       0
  5525 ;;Total ram usage:        0 bytes
  5526 ;; Hardware stack levels used: 1
  5527 ;; Hardware stack levels required when called: 3
  5528 ;; This function calls:
  5529 ;;		_Delay2ms
  5530 ;;		_lcdCommand
  5531 ;;		_pinMode
  5532 ;; This function is called by:
  5533 ;;		_main
  5534 ;; This function uses a non-reentrant model
  5535 ;;
  5536                           
  5537                           	psect	text34
  5538  001D8A                     __ptext34:
  5539                           	callstack 0
  5540  001D8A                     _lcdInit:
  5541                           	callstack 27
  5542  001D8A                     
  5543                           ;lcd.c: 97:     pinMode(PIN_E2, 0);
  5544  001D8A  0E00               	movlw	0
  5545  001D8C  6E02               	movwf	(pinMode@pin+1)^0,c
  5546  001D8E  0E22               	movlw	34
  5547  001D90  6E01               	movwf	pinMode@pin^0,c
  5548  001D92  0E00               	movlw	0
  5549  001D94  6E04               	movwf	(pinMode@type+1)^0,c
  5550  001D96  0E00               	movlw	0
  5551  001D98  6E03               	movwf	pinMode@type^0,c
  5552  001D9A  ECF6  F006         	call	_pinMode	;wreg free
  5553                           
  5554                           ;lcd.c: 98:     pinMode(PIN_E1, 0);
  5555  001D9E  0E00               	movlw	0
  5556  001DA0  6E02               	movwf	(pinMode@pin+1)^0,c
  5557  001DA2  0E21               	movlw	33
  5558  001DA4  6E01               	movwf	pinMode@pin^0,c
  5559  001DA6  0E00               	movlw	0
  5560  001DA8  6E04               	movwf	(pinMode@type+1)^0,c
  5561  001DAA  0E00               	movlw	0
  5562  001DAC  6E03               	movwf	pinMode@type^0,c
  5563  001DAE  ECF6  F006         	call	_pinMode	;wreg free
  5564  001DB2                     
  5565                           ;lcd.c: 99:  TRISD = 0x00;
  5566  001DB2  0E00               	movlw	0
  5567  001DB4  6E95               	movwf	149,c	;volatile
  5568  001DB6                     
  5569                           ;lcd.c: 102:  Delay2ms(); Delay2ms(); Delay2ms(); Delay2ms(); Delay2ms();
  5570  001DB6  ECD5  F012         	call	_Delay2ms	;wreg free
  5571  001DBA  ECD5  F012         	call	_Delay2ms	;wreg free
  5572  001DBE  ECD5  F012         	call	_Delay2ms	;wreg free
  5573  001DC2  ECD5  F012         	call	_Delay2ms	;wreg free
  5574  001DC6  ECD5  F012         	call	_Delay2ms	;wreg free
  5575  001DCA                     
  5576                           ;lcd.c: 104:     lcdCommand(0x38);
  5577  001DCA  0E38               	movlw	56
  5578  001DCC  EC4A  F00E         	call	_lcdCommand
  5579  001DD0                     
  5580                           ;lcd.c: 105:     Delay2ms(); Delay2ms();
  5581  001DD0  ECD5  F012         	call	_Delay2ms	;wreg free
  5582  001DD4  ECD5  F012         	call	_Delay2ms	;wreg free
  5583  001DD8                     
  5584                           ;lcd.c: 106:     lcdCommand(0x38);
  5585  001DD8  0E38               	movlw	56
  5586  001DDA  EC4A  F00E         	call	_lcdCommand
  5587  001DDE                     
  5588                           ;lcd.c: 107:     Delay2ms();
  5589  001DDE  ECD5  F012         	call	_Delay2ms	;wreg free
  5590  001DE2                     
  5591                           ;lcd.c: 108:     lcdCommand(0x38);
  5592  001DE2  0E38               	movlw	56
  5593  001DE4  EC4A  F00E         	call	_lcdCommand
  5594  001DE8                     
  5595                           ;lcd.c: 110:     lcdCommand(0x38);
  5596  001DE8  0E38               	movlw	56
  5597  001DEA  EC4A  F00E         	call	_lcdCommand
  5598  001DEE                     
  5599                           ;lcd.c: 111:     lcdCommand(0x06);
  5600  001DEE  0E06               	movlw	6
  5601  001DF0  EC4A  F00E         	call	_lcdCommand
  5602  001DF4                     
  5603                           ;lcd.c: 114:     lcdCommand(0x0C);
  5604  001DF4  0E0C               	movlw	12
  5605  001DF6  EC4A  F00E         	call	_lcdCommand
  5606  001DFA                     
  5607                           ;lcd.c: 115:     lcdCommand(0x01);
  5608  001DFA  0E01               	movlw	1
  5609  001DFC  EC4A  F00E         	call	_lcdCommand
  5610  001E00  0012               	return		;funcret
  5611  001E02                     __end_of_lcdInit:
  5612                           	callstack 0
  5613                           
  5614 ;; *************** function _pinMode *****************
  5615 ;; Defined at:
  5616 ;;		line 54 in file "io.c"
  5617 ;; Parameters:    Size  Location     Type
  5618 ;;  pin             2    0[COMRAM] int 
  5619 ;;  type            2    2[COMRAM] int 
  5620 ;; Auto vars:     Size  Location     Type
  5621 ;;		None
  5622 ;; Return value:  Size  Location     Type
  5623 ;;                  1    wreg      void 
  5624 ;; Registers used:
  5625 ;;		wreg, status,2, status,0
  5626 ;; Tracked objects:
  5627 ;;		On entry : 0/0
  5628 ;;		On exit  : 0/0
  5629 ;;		Unchanged: 0/0
  5630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5631 ;;      Params:         4       0       0       0       0       0       0
  5632 ;;      Locals:         0       0       0       0       0       0       0
  5633 ;;      Temps:          2       0       0       0       0       0       0
  5634 ;;      Totals:         6       0       0       0       0       0       0
  5635 ;;Total ram usage:        6 bytes
  5636 ;; Hardware stack levels used: 1
  5637 ;; This function calls:
  5638 ;;		Nothing
  5639 ;; This function is called by:
  5640 ;;		_lcdInit
  5641 ;;		_ssdInit
  5642 ;; This function uses a non-reentrant model
  5643 ;;
  5644                           
  5645                           	psect	text35
  5646  000DEC                     __ptext35:
  5647                           	callstack 0
  5648  000DEC                     _pinMode:
  5649                           	callstack 29
  5650  000DEC                     
  5651                           ;io.c: 56:     if(pin <8){
  5652  000DEC  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  5653  000DEE  EF04  F007         	goto	u2900
  5654  000DF2  5002               	movf	(pinMode@pin+1)^0,w,c
  5655  000DF4  E107               	bnz	u2901
  5656  000DF6  0E08               	movlw	8
  5657  000DF8  5C01               	subwf	pinMode@pin^0,w,c
  5658  000DFA  B0D8               	btfsc	status,0,c
  5659  000DFC  EF02  F007         	goto	u2901
  5660  000E00  EF04  F007         	goto	u2900
  5661  000E04                     u2901:
  5662  000E04  EF2E  F007         	goto	l2932
  5663  000E08                     u2900:
  5664  000E08                     
  5665                           ;io.c: 57:         if (type){ ((TRISA) |= (1<<(pin)));}
  5666  000E08  5003               	movf	pinMode@type^0,w,c
  5667  000E0A  1004               	iorwf	(pinMode@type+1)^0,w,c
  5668  000E0C  B4D8               	btfsc	status,2,c
  5669  000E0E  EF0B  F007         	goto	u2911
  5670  000E12  EF0D  F007         	goto	u2910
  5671  000E16                     u2911:
  5672  000E16  EF1D  F007         	goto	l2930
  5673  000E1A                     u2910:
  5674  000E1A  C001  F005         	movff	pinMode@pin,??_pinMode
  5675  000E1E  0E01               	movlw	1
  5676  000E20  6E06               	movwf	(??_pinMode+1)^0,c
  5677  000E22  2A05               	incf	??_pinMode^0,f,c
  5678  000E24  EF16  F007         	goto	u2924
  5679  000E28                     u2925:
  5680  000E28  90D8               	bcf	status,0,c
  5681  000E2A  3606               	rlcf	(??_pinMode+1)^0,f,c
  5682  000E2C                     u2924:
  5683  000E2C  2E05               	decfsz	??_pinMode^0,f,c
  5684  000E2E  EF14  F007         	goto	u2925
  5685  000E32  5006               	movf	(??_pinMode+1)^0,w,c
  5686  000E34  1292               	iorwf	146,f,c	;volatile
  5687  000E36  EF1C  F008         	goto	l76
  5688  000E3A                     l2930:
  5689  000E3A  C001  F005         	movff	pinMode@pin,??_pinMode
  5690  000E3E  0E01               	movlw	1
  5691  000E40  6E06               	movwf	(??_pinMode+1)^0,c
  5692  000E42  2A05               	incf	??_pinMode^0,f,c
  5693  000E44  EF26  F007         	goto	u2934
  5694  000E48                     u2935:
  5695  000E48  90D8               	bcf	status,0,c
  5696  000E4A  3606               	rlcf	(??_pinMode+1)^0,f,c
  5697  000E4C                     u2934:
  5698  000E4C  2E05               	decfsz	??_pinMode^0,f,c
  5699  000E4E  EF24  F007         	goto	u2935
  5700  000E52  5006               	movf	(??_pinMode+1)^0,w,c
  5701  000E54  0AFF               	xorlw	255
  5702  000E56  1692               	andwf	146,f,c	;volatile
  5703  000E58  EF1C  F008         	goto	l76
  5704  000E5C                     l2932:
  5705  000E5C  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  5706  000E5E  EF3C  F007         	goto	u2940
  5707  000E62  5002               	movf	(pinMode@pin+1)^0,w,c
  5708  000E64  E107               	bnz	u2941
  5709  000E66  0E10               	movlw	16
  5710  000E68  5C01               	subwf	pinMode@pin^0,w,c
  5711  000E6A  B0D8               	btfsc	status,0,c
  5712  000E6C  EF3A  F007         	goto	u2941
  5713  000E70  EF3C  F007         	goto	u2940
  5714  000E74                     u2941:
  5715  000E74  EF6A  F007         	goto	l2940
  5716  000E78                     u2940:
  5717  000E78                     
  5718                           ;io.c: 60:         if (type){ ((TRISB) |= (1<<(pin-8)));}
  5719  000E78  5003               	movf	pinMode@type^0,w,c
  5720  000E7A  1004               	iorwf	(pinMode@type+1)^0,w,c
  5721  000E7C  B4D8               	btfsc	status,2,c
  5722  000E7E  EF43  F007         	goto	u2951
  5723  000E82  EF45  F007         	goto	u2950
  5724  000E86                     u2951:
  5725  000E86  EF57  F007         	goto	l2938
  5726  000E8A                     u2950:
  5727  000E8A  C001  F005         	movff	pinMode@pin,??_pinMode
  5728  000E8E  0EF8               	movlw	-8
  5729  000E90  2605               	addwf	??_pinMode^0,f,c
  5730  000E92  0E01               	movlw	1
  5731  000E94  6E06               	movwf	(??_pinMode+1)^0,c
  5732  000E96  2A05               	incf	??_pinMode^0,f,c
  5733  000E98  EF50  F007         	goto	u2964
  5734  000E9C                     u2965:
  5735  000E9C  90D8               	bcf	status,0,c
  5736  000E9E  3606               	rlcf	(??_pinMode+1)^0,f,c
  5737  000EA0                     u2964:
  5738  000EA0  2E05               	decfsz	??_pinMode^0,f,c
  5739  000EA2  EF4E  F007         	goto	u2965
  5740  000EA6  5006               	movf	(??_pinMode+1)^0,w,c
  5741  000EA8  1293               	iorwf	147,f,c	;volatile
  5742  000EAA  EF1C  F008         	goto	l76
  5743  000EAE                     l2938:
  5744  000EAE  C001  F005         	movff	pinMode@pin,??_pinMode
  5745  000EB2  0EF8               	movlw	-8
  5746  000EB4  2605               	addwf	??_pinMode^0,f,c
  5747  000EB6  0E01               	movlw	1
  5748  000EB8  6E06               	movwf	(??_pinMode+1)^0,c
  5749  000EBA  2A05               	incf	??_pinMode^0,f,c
  5750  000EBC  EF62  F007         	goto	u2974
  5751  000EC0                     u2975:
  5752  000EC0  90D8               	bcf	status,0,c
  5753  000EC2  3606               	rlcf	(??_pinMode+1)^0,f,c
  5754  000EC4                     u2974:
  5755  000EC4  2E05               	decfsz	??_pinMode^0,f,c
  5756  000EC6  EF60  F007         	goto	u2975
  5757  000ECA  5006               	movf	(??_pinMode+1)^0,w,c
  5758  000ECC  0AFF               	xorlw	255
  5759  000ECE  1693               	andwf	147,f,c	;volatile
  5760  000ED0  EF1C  F008         	goto	l76
  5761  000ED4                     l2940:
  5762  000ED4  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  5763  000ED6  EF78  F007         	goto	u2980
  5764  000EDA  5002               	movf	(pinMode@pin+1)^0,w,c
  5765  000EDC  E107               	bnz	u2981
  5766  000EDE  0E18               	movlw	24
  5767  000EE0  5C01               	subwf	pinMode@pin^0,w,c
  5768  000EE2  B0D8               	btfsc	status,0,c
  5769  000EE4  EF76  F007         	goto	u2981
  5770  000EE8  EF78  F007         	goto	u2980
  5771  000EEC                     u2981:
  5772  000EEC  EFA6  F007         	goto	l2948
  5773  000EF0                     u2980:
  5774  000EF0                     
  5775                           ;io.c: 63:         if (type){ ((TRISC) |= (1<<(pin-16)));}
  5776  000EF0  5003               	movf	pinMode@type^0,w,c
  5777  000EF2  1004               	iorwf	(pinMode@type+1)^0,w,c
  5778  000EF4  B4D8               	btfsc	status,2,c
  5779  000EF6  EF7F  F007         	goto	u2991
  5780  000EFA  EF81  F007         	goto	u2990
  5781  000EFE                     u2991:
  5782  000EFE  EF93  F007         	goto	l2946
  5783  000F02                     u2990:
  5784  000F02  C001  F005         	movff	pinMode@pin,??_pinMode
  5785  000F06  0EF0               	movlw	-16
  5786  000F08  2605               	addwf	??_pinMode^0,f,c
  5787  000F0A  0E01               	movlw	1
  5788  000F0C  6E06               	movwf	(??_pinMode+1)^0,c
  5789  000F0E  2A05               	incf	??_pinMode^0,f,c
  5790  000F10  EF8C  F007         	goto	u3004
  5791  000F14                     u3005:
  5792  000F14  90D8               	bcf	status,0,c
  5793  000F16  3606               	rlcf	(??_pinMode+1)^0,f,c
  5794  000F18                     u3004:
  5795  000F18  2E05               	decfsz	??_pinMode^0,f,c
  5796  000F1A  EF8A  F007         	goto	u3005
  5797  000F1E  5006               	movf	(??_pinMode+1)^0,w,c
  5798  000F20  1294               	iorwf	148,f,c	;volatile
  5799  000F22  EF1C  F008         	goto	l76
  5800  000F26                     l2946:
  5801  000F26  C001  F005         	movff	pinMode@pin,??_pinMode
  5802  000F2A  0EF0               	movlw	-16
  5803  000F2C  2605               	addwf	??_pinMode^0,f,c
  5804  000F2E  0E01               	movlw	1
  5805  000F30  6E06               	movwf	(??_pinMode+1)^0,c
  5806  000F32  2A05               	incf	??_pinMode^0,f,c
  5807  000F34  EF9E  F007         	goto	u3014
  5808  000F38                     u3015:
  5809  000F38  90D8               	bcf	status,0,c
  5810  000F3A  3606               	rlcf	(??_pinMode+1)^0,f,c
  5811  000F3C                     u3014:
  5812  000F3C  2E05               	decfsz	??_pinMode^0,f,c
  5813  000F3E  EF9C  F007         	goto	u3015
  5814  000F42  5006               	movf	(??_pinMode+1)^0,w,c
  5815  000F44  0AFF               	xorlw	255
  5816  000F46  1694               	andwf	148,f,c	;volatile
  5817  000F48  EF1C  F008         	goto	l76
  5818  000F4C                     l2948:
  5819  000F4C  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  5820  000F4E  EFB4  F007         	goto	u3020
  5821  000F52  5002               	movf	(pinMode@pin+1)^0,w,c
  5822  000F54  E107               	bnz	u3021
  5823  000F56  0E20               	movlw	32
  5824  000F58  5C01               	subwf	pinMode@pin^0,w,c
  5825  000F5A  B0D8               	btfsc	status,0,c
  5826  000F5C  EFB2  F007         	goto	u3021
  5827  000F60  EFB4  F007         	goto	u3020
  5828  000F64                     u3021:
  5829  000F64  EFE2  F007         	goto	l2956
  5830  000F68                     u3020:
  5831  000F68                     
  5832                           ;io.c: 66:         if (type){ ((TRISD) |= (1<<(pin-24)));}
  5833  000F68  5003               	movf	pinMode@type^0,w,c
  5834  000F6A  1004               	iorwf	(pinMode@type+1)^0,w,c
  5835  000F6C  B4D8               	btfsc	status,2,c
  5836  000F6E  EFBB  F007         	goto	u3031
  5837  000F72  EFBD  F007         	goto	u3030
  5838  000F76                     u3031:
  5839  000F76  EFCF  F007         	goto	l2954
  5840  000F7A                     u3030:
  5841  000F7A  C001  F005         	movff	pinMode@pin,??_pinMode
  5842  000F7E  0EE8               	movlw	-24
  5843  000F80  2605               	addwf	??_pinMode^0,f,c
  5844  000F82  0E01               	movlw	1
  5845  000F84  6E06               	movwf	(??_pinMode+1)^0,c
  5846  000F86  2A05               	incf	??_pinMode^0,f,c
  5847  000F88  EFC8  F007         	goto	u3044
  5848  000F8C                     u3045:
  5849  000F8C  90D8               	bcf	status,0,c
  5850  000F8E  3606               	rlcf	(??_pinMode+1)^0,f,c
  5851  000F90                     u3044:
  5852  000F90  2E05               	decfsz	??_pinMode^0,f,c
  5853  000F92  EFC6  F007         	goto	u3045
  5854  000F96  5006               	movf	(??_pinMode+1)^0,w,c
  5855  000F98  1295               	iorwf	149,f,c	;volatile
  5856  000F9A  EF1C  F008         	goto	l76
  5857  000F9E                     l2954:
  5858  000F9E  C001  F005         	movff	pinMode@pin,??_pinMode
  5859  000FA2  0EE8               	movlw	-24
  5860  000FA4  2605               	addwf	??_pinMode^0,f,c
  5861  000FA6  0E01               	movlw	1
  5862  000FA8  6E06               	movwf	(??_pinMode+1)^0,c
  5863  000FAA  2A05               	incf	??_pinMode^0,f,c
  5864  000FAC  EFDA  F007         	goto	u3054
  5865  000FB0                     u3055:
  5866  000FB0  90D8               	bcf	status,0,c
  5867  000FB2  3606               	rlcf	(??_pinMode+1)^0,f,c
  5868  000FB4                     u3054:
  5869  000FB4  2E05               	decfsz	??_pinMode^0,f,c
  5870  000FB6  EFD8  F007         	goto	u3055
  5871  000FBA  5006               	movf	(??_pinMode+1)^0,w,c
  5872  000FBC  0AFF               	xorlw	255
  5873  000FBE  1695               	andwf	149,f,c	;volatile
  5874  000FC0  EF1C  F008         	goto	l76
  5875  000FC4                     l2956:
  5876  000FC4  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  5877  000FC6  EFF0  F007         	goto	u3060
  5878  000FCA  5002               	movf	(pinMode@pin+1)^0,w,c
  5879  000FCC  E107               	bnz	u3061
  5880  000FCE  0E28               	movlw	40
  5881  000FD0  5C01               	subwf	pinMode@pin^0,w,c
  5882  000FD2  B0D8               	btfsc	status,0,c
  5883  000FD4  EFEE  F007         	goto	u3061
  5884  000FD8  EFF0  F007         	goto	u3060
  5885  000FDC                     u3061:
  5886  000FDC  EF1C  F008         	goto	l76
  5887  000FE0                     u3060:
  5888  000FE0                     
  5889                           ;io.c: 69:         if (type){ ((TRISE) |= (1<<(pin-32)));}
  5890  000FE0  5003               	movf	pinMode@type^0,w,c
  5891  000FE2  1004               	iorwf	(pinMode@type+1)^0,w,c
  5892  000FE4  B4D8               	btfsc	status,2,c
  5893  000FE6  EFF7  F007         	goto	u3071
  5894  000FEA  EFF9  F007         	goto	u3070
  5895  000FEE                     u3071:
  5896  000FEE  EF0B  F008         	goto	l2962
  5897  000FF2                     u3070:
  5898  000FF2  C001  F005         	movff	pinMode@pin,??_pinMode
  5899  000FF6  0EE0               	movlw	-32
  5900  000FF8  2605               	addwf	??_pinMode^0,f,c
  5901  000FFA  0E01               	movlw	1
  5902  000FFC  6E06               	movwf	(??_pinMode+1)^0,c
  5903  000FFE  2A05               	incf	??_pinMode^0,f,c
  5904  001000  EF04  F008         	goto	u3084
  5905  001004                     u3085:
  5906  001004  90D8               	bcf	status,0,c
  5907  001006  3606               	rlcf	(??_pinMode+1)^0,f,c
  5908  001008                     u3084:
  5909  001008  2E05               	decfsz	??_pinMode^0,f,c
  5910  00100A  EF02  F008         	goto	u3085
  5911  00100E  5006               	movf	(??_pinMode+1)^0,w,c
  5912  001010  1296               	iorwf	150,f,c	;volatile
  5913  001012  EF1C  F008         	goto	l76
  5914  001016                     l2962:
  5915  001016  C001  F005         	movff	pinMode@pin,??_pinMode
  5916  00101A  0EE0               	movlw	-32
  5917  00101C  2605               	addwf	??_pinMode^0,f,c
  5918  00101E  0E01               	movlw	1
  5919  001020  6E06               	movwf	(??_pinMode+1)^0,c
  5920  001022  2A05               	incf	??_pinMode^0,f,c
  5921  001024  EF16  F008         	goto	u3094
  5922  001028                     u3095:
  5923  001028  90D8               	bcf	status,0,c
  5924  00102A  3606               	rlcf	(??_pinMode+1)^0,f,c
  5925  00102C                     u3094:
  5926  00102C  2E05               	decfsz	??_pinMode^0,f,c
  5927  00102E  EF14  F008         	goto	u3095
  5928  001032  5006               	movf	(??_pinMode+1)^0,w,c
  5929  001034  0AFF               	xorlw	255
  5930  001036  1696               	andwf	150,f,c	;volatile
  5931  001038                     l76:
  5932  001038  0012               	return		;funcret
  5933  00103A                     __end_of_pinMode:
  5934                           	callstack 0
  5935                           
  5936 ;; *************** function _lcdCommand *****************
  5937 ;; Defined at:
  5938 ;;		line 48 in file "lcd.c"
  5939 ;; Parameters:    Size  Location     Type
  5940 ;;  cmd             1    wreg     unsigned char 
  5941 ;; Auto vars:     Size  Location     Type
  5942 ;;  cmd             1    7[COMRAM] unsigned char 
  5943 ;;  old_D           1    6[COMRAM] unsigned char 
  5944 ;; Return value:  Size  Location     Type
  5945 ;;                  1    wreg      void 
  5946 ;; Registers used:
  5947 ;;		wreg, status,2, status,0, cstack
  5948 ;; Tracked objects:
  5949 ;;		On entry : 0/0
  5950 ;;		On exit  : 0/0
  5951 ;;		Unchanged: 0/0
  5952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5953 ;;      Params:         0       0       0       0       0       0       0
  5954 ;;      Locals:         2       0       0       0       0       0       0
  5955 ;;      Temps:          0       0       0       0       0       0       0
  5956 ;;      Totals:         2       0       0       0       0       0       0
  5957 ;;Total ram usage:        2 bytes
  5958 ;; Hardware stack levels used: 1
  5959 ;; Hardware stack levels required when called: 2
  5960 ;; This function calls:
  5961 ;;		_Delay2ms
  5962 ;;		_Delay40us
  5963 ;;		_digitalWrite
  5964 ;; This function is called by:
  5965 ;;		_lcdInit
  5966 ;;		_main
  5967 ;;		_textInit
  5968 ;;		_textInstrutions
  5969 ;;		_textApostas
  5970 ;;		_textSaldo
  5971 ;;		_textWait
  5972 ;;		_textGameOver
  5973 ;;		_textLost
  5974 ;;		_textWin
  5975 ;;		_textApostando
  5976 ;; This function uses a non-reentrant model
  5977 ;;
  5978                           
  5979                           	psect	text36
  5980  001C94                     __ptext36:
  5981                           	callstack 0
  5982  001C94                     _lcdCommand:
  5983                           	callstack 27
  5984                           
  5985                           ;incstack = 0
  5986                           ;lcdCommand@cmd stored from wreg
  5987  001C94  6E08               	movwf	lcdCommand@cmd^0,c
  5988  001C96                     
  5989                           ;lcd.c: 48: void lcdCommand(unsigned char cmd);lcd.c: 49: {;lcd.c: 50:     unsigned char
      +                           old_D;;lcd.c: 51:     old_D = PORTD;
  5990  001C96  CF83 F007          	movff	3971,lcdCommand@old_D	;volatile
  5991  001C9A                     
  5992                           ;lcd.c: 54:     TRISD = 0x00;
  5993  001C9A  0E00               	movlw	0
  5994  001C9C  6E95               	movwf	149,c	;volatile
  5995  001C9E                     
  5996                           ;lcd.c: 56:  digitalWrite(PIN_E2, 0);
  5997  001C9E  0E00               	movlw	0
  5998  001CA0  6E02               	movwf	(digitalWrite@pin+1)^0,c
  5999  001CA2  0E22               	movlw	34
  6000  001CA4  6E01               	movwf	digitalWrite@pin^0,c
  6001  001CA6  0E00               	movlw	0
  6002  001CA8  6E04               	movwf	(digitalWrite@value+1)^0,c
  6003  001CAA  0E00               	movlw	0
  6004  001CAC  6E03               	movwf	digitalWrite@value^0,c
  6005  001CAE  EC1D  F008         	call	_digitalWrite	;wreg free
  6006  001CB2                     
  6007                           ;lcd.c: 57:  PORTD = cmd;
  6008  001CB2  C008  FF83         	movff	lcdCommand@cmd,3971	;volatile
  6009  001CB6                     
  6010                           ;lcd.c: 59:     digitalWrite(PIN_E1, 1);
  6011  001CB6  0E00               	movlw	0
  6012  001CB8  6E02               	movwf	(digitalWrite@pin+1)^0,c
  6013  001CBA  0E21               	movlw	33
  6014  001CBC  6E01               	movwf	digitalWrite@pin^0,c
  6015  001CBE  0E00               	movlw	0
  6016  001CC0  6E04               	movwf	(digitalWrite@value+1)^0,c
  6017  001CC2  0E01               	movlw	1
  6018  001CC4  6E03               	movwf	digitalWrite@value^0,c
  6019  001CC6  EC1D  F008         	call	_digitalWrite	;wreg free
  6020  001CCA                     
  6021                           ;lcd.c: 60:  digitalWrite(PIN_E1, 0);
  6022  001CCA  0E00               	movlw	0
  6023  001CCC  6E02               	movwf	(digitalWrite@pin+1)^0,c
  6024  001CCE  0E21               	movlw	33
  6025  001CD0  6E01               	movwf	digitalWrite@pin^0,c
  6026  001CD2  0E00               	movlw	0
  6027  001CD4  6E04               	movwf	(digitalWrite@value+1)^0,c
  6028  001CD6  0E00               	movlw	0
  6029  001CD8  6E03               	movwf	digitalWrite@value^0,c
  6030  001CDA  EC1D  F008         	call	_digitalWrite	;wreg free
  6031  001CDE                     
  6032                           ;lcd.c: 63:     PORTD= old_D;
  6033  001CDE  C007  FF83         	movff	lcdCommand@old_D,3971	;volatile
  6034  001CE2                     
  6035                           ;lcd.c: 65:     if((cmd == 0x02)||(cmd == 0x01)){
  6036  001CE2  0E02               	movlw	2
  6037  001CE4  1808               	xorwf	lcdCommand@cmd^0,w,c
  6038  001CE6  B4D8               	btfsc	status,2,c
  6039  001CE8  EF78  F00E         	goto	u2071
  6040  001CEC  EF7A  F00E         	goto	u2070
  6041  001CF0                     u2071:
  6042  001CF0  EF82  F00E         	goto	l2374
  6043  001CF4                     u2070:
  6044  001CF4  0408               	decf	lcdCommand@cmd^0,w,c
  6045  001CF6  A4D8               	btfss	status,2,c
  6046  001CF8  EF80  F00E         	goto	u2081
  6047  001CFC  EF82  F00E         	goto	u2080
  6048  001D00                     u2081:
  6049  001D00  EF86  F00E         	goto	l2376
  6050  001D04                     u2080:
  6051  001D04                     l2374:
  6052                           
  6053                           ;lcd.c: 66:        Delay2ms();
  6054  001D04  ECD5  F012         	call	_Delay2ms	;wreg free
  6055                           
  6056                           ;lcd.c: 67:     }else{
  6057  001D08  EF88  F00E         	goto	l101
  6058  001D0C                     l2376:
  6059                           
  6060                           ;lcd.c: 68:     Delay40us();
  6061  001D0C  ECF0  F012         	call	_Delay40us	;wreg free
  6062  001D10                     l101:
  6063  001D10  0012               	return		;funcret
  6064  001D12                     __end_of_lcdCommand:
  6065                           	callstack 0
  6066                           
  6067 ;; *************** function _digitalWrite *****************
  6068 ;; Defined at:
  6069 ;;		line 14 in file "io.c"
  6070 ;; Parameters:    Size  Location     Type
  6071 ;;  pin             2    0[COMRAM] int 
  6072 ;;  value           2    2[COMRAM] int 
  6073 ;; Auto vars:     Size  Location     Type
  6074 ;;		None
  6075 ;; Return value:  Size  Location     Type
  6076 ;;                  1    wreg      void 
  6077 ;; Registers used:
  6078 ;;		wreg, status,2, status,0
  6079 ;; Tracked objects:
  6080 ;;		On entry : 0/0
  6081 ;;		On exit  : 0/0
  6082 ;;		Unchanged: 0/0
  6083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6084 ;;      Params:         4       0       0       0       0       0       0
  6085 ;;      Locals:         0       0       0       0       0       0       0
  6086 ;;      Temps:          2       0       0       0       0       0       0
  6087 ;;      Totals:         6       0       0       0       0       0       0
  6088 ;;Total ram usage:        6 bytes
  6089 ;; Hardware stack levels used: 1
  6090 ;; This function calls:
  6091 ;;		Nothing
  6092 ;; This function is called by:
  6093 ;;		_lcdCommand
  6094 ;;		_lcdData
  6095 ;;		_ssdUpdate
  6096 ;;		_Apostando
  6097 ;; This function uses a non-reentrant model
  6098 ;;
  6099                           
  6100                           	psect	text37
  6101  00103A                     __ptext37:
  6102                           	callstack 0
  6103  00103A                     _digitalWrite:
  6104                           	callstack 28
  6105  00103A                     
  6106                           ;io.c: 16:     if(pin <8){
  6107  00103A  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  6108  00103C  EF2B  F008         	goto	u1790
  6109  001040  5002               	movf	(digitalWrite@pin+1)^0,w,c
  6110  001042  E107               	bnz	u1791
  6111  001044  0E08               	movlw	8
  6112  001046  5C01               	subwf	digitalWrite@pin^0,w,c
  6113  001048  B0D8               	btfsc	status,0,c
  6114  00104A  EF29  F008         	goto	u1791
  6115  00104E  EF2B  F008         	goto	u1790
  6116  001052                     u1791:
  6117  001052  EF55  F008         	goto	l2236
  6118  001056                     u1790:
  6119  001056                     
  6120                           ;io.c: 17:         if (value){ ((PORTA) |= (1<<(pin)));}
  6121  001056  5003               	movf	digitalWrite@value^0,w,c
  6122  001058  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  6123  00105A  B4D8               	btfsc	status,2,c
  6124  00105C  EF32  F008         	goto	u1801
  6125  001060  EF34  F008         	goto	u1800
  6126  001064                     u1801:
  6127  001064  EF44  F008         	goto	l2234
  6128  001068                     u1800:
  6129  001068  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  6130  00106C  0E01               	movlw	1
  6131  00106E  6E06               	movwf	(??_digitalWrite+1)^0,c
  6132  001070  2A05               	incf	??_digitalWrite^0,f,c
  6133  001072  EF3D  F008         	goto	u1814
  6134  001076                     u1815:
  6135  001076  90D8               	bcf	status,0,c
  6136  001078  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  6137  00107A                     u1814:
  6138  00107A  2E05               	decfsz	??_digitalWrite^0,f,c
  6139  00107C  EF3B  F008         	goto	u1815
  6140  001080  5006               	movf	(??_digitalWrite+1)^0,w,c
  6141  001082  1280               	iorwf	128,f,c	;volatile
  6142  001084  EF43  F009         	goto	l42
  6143  001088                     l2234:
  6144  001088  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  6145  00108C  0E01               	movlw	1
  6146  00108E  6E06               	movwf	(??_digitalWrite+1)^0,c
  6147  001090  2A05               	incf	??_digitalWrite^0,f,c
  6148  001092  EF4D  F008         	goto	u1824
  6149  001096                     u1825:
  6150  001096  90D8               	bcf	status,0,c
  6151  001098  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  6152  00109A                     u1824:
  6153  00109A  2E05               	decfsz	??_digitalWrite^0,f,c
  6154  00109C  EF4B  F008         	goto	u1825
  6155  0010A0  5006               	movf	(??_digitalWrite+1)^0,w,c
  6156  0010A2  0AFF               	xorlw	255
  6157  0010A4  1680               	andwf	128,f,c	;volatile
  6158  0010A6  EF43  F009         	goto	l42
  6159  0010AA                     l2236:
  6160  0010AA  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  6161  0010AC  EF63  F008         	goto	u1830
  6162  0010B0  5002               	movf	(digitalWrite@pin+1)^0,w,c
  6163  0010B2  E107               	bnz	u1831
  6164  0010B4  0E10               	movlw	16
  6165  0010B6  5C01               	subwf	digitalWrite@pin^0,w,c
  6166  0010B8  B0D8               	btfsc	status,0,c
  6167  0010BA  EF61  F008         	goto	u1831
  6168  0010BE  EF63  F008         	goto	u1830
  6169  0010C2                     u1831:
  6170  0010C2  EF91  F008         	goto	l2244
  6171  0010C6                     u1830:
  6172  0010C6                     
  6173                           ;io.c: 20:         pin -=8;
  6174  0010C6  0EF8               	movlw	248
  6175  0010C8  2601               	addwf	digitalWrite@pin^0,f,c
  6176  0010CA  0EFF               	movlw	255
  6177  0010CC  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  6178                           
  6179                           ;io.c: 21:         if (value){ ((PORTB) |= (1<<(pin)));}
  6180  0010CE  5003               	movf	digitalWrite@value^0,w,c
  6181  0010D0  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  6182  0010D2  B4D8               	btfsc	status,2,c
  6183  0010D4  EF6E  F008         	goto	u1841
  6184  0010D8  EF70  F008         	goto	u1840
  6185  0010DC                     u1841:
  6186  0010DC  EF80  F008         	goto	l2242
  6187  0010E0                     u1840:
  6188  0010E0  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  6189  0010E4  0E01               	movlw	1
  6190  0010E6  6E06               	movwf	(??_digitalWrite+1)^0,c
  6191  0010E8  2A05               	incf	??_digitalWrite^0,f,c
  6192  0010EA  EF79  F008         	goto	u1854
  6193  0010EE                     u1855:
  6194  0010EE  90D8               	bcf	status,0,c
  6195  0010F0  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  6196  0010F2                     u1854:
  6197  0010F2  2E05               	decfsz	??_digitalWrite^0,f,c
  6198  0010F4  EF77  F008         	goto	u1855
  6199  0010F8  5006               	movf	(??_digitalWrite+1)^0,w,c
  6200  0010FA  1281               	iorwf	129,f,c	;volatile
  6201  0010FC  EF43  F009         	goto	l42
  6202  001100                     l2242:
  6203  001100  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  6204  001104  0E01               	movlw	1
  6205  001106  6E06               	movwf	(??_digitalWrite+1)^0,c
  6206  001108  2A05               	incf	??_digitalWrite^0,f,c
  6207  00110A  EF89  F008         	goto	u1864
  6208  00110E                     u1865:
  6209  00110E  90D8               	bcf	status,0,c
  6210  001110  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  6211  001112                     u1864:
  6212  001112  2E05               	decfsz	??_digitalWrite^0,f,c
  6213  001114  EF87  F008         	goto	u1865
  6214  001118  5006               	movf	(??_digitalWrite+1)^0,w,c
  6215  00111A  0AFF               	xorlw	255
  6216  00111C  1681               	andwf	129,f,c	;volatile
  6217  00111E  EF43  F009         	goto	l42
  6218  001122                     l2244:
  6219  001122  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  6220  001124  EF9F  F008         	goto	u1870
  6221  001128  5002               	movf	(digitalWrite@pin+1)^0,w,c
  6222  00112A  E107               	bnz	u1871
  6223  00112C  0E18               	movlw	24
  6224  00112E  5C01               	subwf	digitalWrite@pin^0,w,c
  6225  001130  B0D8               	btfsc	status,0,c
  6226  001132  EF9D  F008         	goto	u1871
  6227  001136  EF9F  F008         	goto	u1870
  6228  00113A                     u1871:
  6229  00113A  EFCD  F008         	goto	l2252
  6230  00113E                     u1870:
  6231  00113E                     
  6232                           ;io.c: 24:         pin -=16;
  6233  00113E  0EF0               	movlw	240
  6234  001140  2601               	addwf	digitalWrite@pin^0,f,c
  6235  001142  0EFF               	movlw	255
  6236  001144  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  6237                           
  6238                           ;io.c: 25:         if (value){ ((PORTC) |= (1<<(pin)));}
  6239  001146  5003               	movf	digitalWrite@value^0,w,c
  6240  001148  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  6241  00114A  B4D8               	btfsc	status,2,c
  6242  00114C  EFAA  F008         	goto	u1881
  6243  001150  EFAC  F008         	goto	u1880
  6244  001154                     u1881:
  6245  001154  EFBC  F008         	goto	l2250
  6246  001158                     u1880:
  6247  001158  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  6248  00115C  0E01               	movlw	1
  6249  00115E  6E06               	movwf	(??_digitalWrite+1)^0,c
  6250  001160  2A05               	incf	??_digitalWrite^0,f,c
  6251  001162  EFB5  F008         	goto	u1894
  6252  001166                     u1895:
  6253  001166  90D8               	bcf	status,0,c
  6254  001168  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  6255  00116A                     u1894:
  6256  00116A  2E05               	decfsz	??_digitalWrite^0,f,c
  6257  00116C  EFB3  F008         	goto	u1895
  6258  001170  5006               	movf	(??_digitalWrite+1)^0,w,c
  6259  001172  1282               	iorwf	130,f,c	;volatile
  6260  001174  EF43  F009         	goto	l42
  6261  001178                     l2250:
  6262  001178  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  6263  00117C  0E01               	movlw	1
  6264  00117E  6E06               	movwf	(??_digitalWrite+1)^0,c
  6265  001180  2A05               	incf	??_digitalWrite^0,f,c
  6266  001182  EFC5  F008         	goto	u1904
  6267  001186                     u1905:
  6268  001186  90D8               	bcf	status,0,c
  6269  001188  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  6270  00118A                     u1904:
  6271  00118A  2E05               	decfsz	??_digitalWrite^0,f,c
  6272  00118C  EFC3  F008         	goto	u1905
  6273  001190  5006               	movf	(??_digitalWrite+1)^0,w,c
  6274  001192  0AFF               	xorlw	255
  6275  001194  1682               	andwf	130,f,c	;volatile
  6276  001196  EF43  F009         	goto	l42
  6277  00119A                     l2252:
  6278  00119A  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  6279  00119C  EFDB  F008         	goto	u1910
  6280  0011A0  5002               	movf	(digitalWrite@pin+1)^0,w,c
  6281  0011A2  E107               	bnz	u1911
  6282  0011A4  0E20               	movlw	32
  6283  0011A6  5C01               	subwf	digitalWrite@pin^0,w,c
  6284  0011A8  B0D8               	btfsc	status,0,c
  6285  0011AA  EFD9  F008         	goto	u1911
  6286  0011AE  EFDB  F008         	goto	u1910
  6287  0011B2                     u1911:
  6288  0011B2  EF09  F009         	goto	l2260
  6289  0011B6                     u1910:
  6290  0011B6                     
  6291                           ;io.c: 28:         pin -=24;
  6292  0011B6  0EE8               	movlw	232
  6293  0011B8  2601               	addwf	digitalWrite@pin^0,f,c
  6294  0011BA  0EFF               	movlw	255
  6295  0011BC  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  6296                           
  6297                           ;io.c: 29:         if (value){ ((PORTD) |= (1<<(pin)));}
  6298  0011BE  5003               	movf	digitalWrite@value^0,w,c
  6299  0011C0  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  6300  0011C2  B4D8               	btfsc	status,2,c
  6301  0011C4  EFE6  F008         	goto	u1921
  6302  0011C8  EFE8  F008         	goto	u1920
  6303  0011CC                     u1921:
  6304  0011CC  EFF8  F008         	goto	l2258
  6305  0011D0                     u1920:
  6306  0011D0  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  6307  0011D4  0E01               	movlw	1
  6308  0011D6  6E06               	movwf	(??_digitalWrite+1)^0,c
  6309  0011D8  2A05               	incf	??_digitalWrite^0,f,c
  6310  0011DA  EFF1  F008         	goto	u1934
  6311  0011DE                     u1935:
  6312  0011DE  90D8               	bcf	status,0,c
  6313  0011E0  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  6314  0011E2                     u1934:
  6315  0011E2  2E05               	decfsz	??_digitalWrite^0,f,c
  6316  0011E4  EFEF  F008         	goto	u1935
  6317  0011E8  5006               	movf	(??_digitalWrite+1)^0,w,c
  6318  0011EA  1283               	iorwf	131,f,c	;volatile
  6319  0011EC  EF43  F009         	goto	l42
  6320  0011F0                     l2258:
  6321  0011F0  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  6322  0011F4  0E01               	movlw	1
  6323  0011F6  6E06               	movwf	(??_digitalWrite+1)^0,c
  6324  0011F8  2A05               	incf	??_digitalWrite^0,f,c
  6325  0011FA  EF01  F009         	goto	u1944
  6326  0011FE                     u1945:
  6327  0011FE  90D8               	bcf	status,0,c
  6328  001200  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  6329  001202                     u1944:
  6330  001202  2E05               	decfsz	??_digitalWrite^0,f,c
  6331  001204  EFFF  F008         	goto	u1945
  6332  001208  5006               	movf	(??_digitalWrite+1)^0,w,c
  6333  00120A  0AFF               	xorlw	255
  6334  00120C  1683               	andwf	131,f,c	;volatile
  6335  00120E  EF43  F009         	goto	l42
  6336  001212                     l2260:
  6337  001212  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  6338  001214  EF17  F009         	goto	u1950
  6339  001218  5002               	movf	(digitalWrite@pin+1)^0,w,c
  6340  00121A  E107               	bnz	u1951
  6341  00121C  0E28               	movlw	40
  6342  00121E  5C01               	subwf	digitalWrite@pin^0,w,c
  6343  001220  B0D8               	btfsc	status,0,c
  6344  001222  EF15  F009         	goto	u1951
  6345  001226  EF17  F009         	goto	u1950
  6346  00122A                     u1951:
  6347  00122A  EF43  F009         	goto	l42
  6348  00122E                     u1950:
  6349  00122E                     
  6350                           ;io.c: 32:         pin -=32;
  6351  00122E  0EE0               	movlw	224
  6352  001230  2601               	addwf	digitalWrite@pin^0,f,c
  6353  001232  0EFF               	movlw	255
  6354  001234  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  6355                           
  6356                           ;io.c: 33:         if (value){ ((PORTE) |= (1<<(pin)));}
  6357  001236  5003               	movf	digitalWrite@value^0,w,c
  6358  001238  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  6359  00123A  B4D8               	btfsc	status,2,c
  6360  00123C  EF22  F009         	goto	u1961
  6361  001240  EF24  F009         	goto	u1960
  6362  001244                     u1961:
  6363  001244  EF34  F009         	goto	l2266
  6364  001248                     u1960:
  6365  001248  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  6366  00124C  0E01               	movlw	1
  6367  00124E  6E06               	movwf	(??_digitalWrite+1)^0,c
  6368  001250  2A05               	incf	??_digitalWrite^0,f,c
  6369  001252  EF2D  F009         	goto	u1974
  6370  001256                     u1975:
  6371  001256  90D8               	bcf	status,0,c
  6372  001258  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  6373  00125A                     u1974:
  6374  00125A  2E05               	decfsz	??_digitalWrite^0,f,c
  6375  00125C  EF2B  F009         	goto	u1975
  6376  001260  5006               	movf	(??_digitalWrite+1)^0,w,c
  6377  001262  1284               	iorwf	132,f,c	;volatile
  6378  001264  EF43  F009         	goto	l42
  6379  001268                     l2266:
  6380  001268  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  6381  00126C  0E01               	movlw	1
  6382  00126E  6E06               	movwf	(??_digitalWrite+1)^0,c
  6383  001270  2A05               	incf	??_digitalWrite^0,f,c
  6384  001272  EF3D  F009         	goto	u1984
  6385  001276                     u1985:
  6386  001276  90D8               	bcf	status,0,c
  6387  001278  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  6388  00127A                     u1984:
  6389  00127A  2E05               	decfsz	??_digitalWrite^0,f,c
  6390  00127C  EF3B  F009         	goto	u1985
  6391  001280  5006               	movf	(??_digitalWrite+1)^0,w,c
  6392  001282  0AFF               	xorlw	255
  6393  001284  1684               	andwf	132,f,c	;volatile
  6394  001286                     l42:
  6395  001286  0012               	return		;funcret
  6396  001288                     __end_of_digitalWrite:
  6397                           	callstack 0
  6398                           
  6399 ;; *************** function _Delay2ms *****************
  6400 ;; Defined at:
  6401 ;;		line 37 in file "lcd.c"
  6402 ;; Parameters:    Size  Location     Type
  6403 ;;		None
  6404 ;; Auto vars:     Size  Location     Type
  6405 ;;  i               1    1[COMRAM] unsigned char 
  6406 ;; Return value:  Size  Location     Type
  6407 ;;                  1    wreg      void 
  6408 ;; Registers used:
  6409 ;;		wreg, status,2, status,0, cstack
  6410 ;; Tracked objects:
  6411 ;;		On entry : 0/0
  6412 ;;		On exit  : 0/0
  6413 ;;		Unchanged: 0/0
  6414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6415 ;;      Params:         0       0       0       0       0       0       0
  6416 ;;      Locals:         1       0       0       0       0       0       0
  6417 ;;      Temps:          0       0       0       0       0       0       0
  6418 ;;      Totals:         1       0       0       0       0       0       0
  6419 ;;Total ram usage:        1 bytes
  6420 ;; Hardware stack levels used: 1
  6421 ;; Hardware stack levels required when called: 1
  6422 ;; This function calls:
  6423 ;;		_Delay40us
  6424 ;; This function is called by:
  6425 ;;		_lcdCommand
  6426 ;;		_lcdInit
  6427 ;; This function uses a non-reentrant model
  6428 ;;
  6429                           
  6430                           	psect	text38
  6431  0025AA                     __ptext38:
  6432                           	callstack 0
  6433  0025AA                     _Delay2ms:
  6434                           	callstack 27
  6435  0025AA                     
  6436                           ;lcd.c: 39:  unsigned char i;;lcd.c: 40:  for(i=0; i < 50; i++)
  6437  0025AA  0E00               	movlw	0
  6438  0025AC  6E02               	movwf	Delay2ms@i^0,c
  6439  0025AE                     l2284:
  6440                           
  6441                           ;lcd.c: 41:  {;lcd.c: 42:   Delay40us();
  6442  0025AE  ECF0  F012         	call	_Delay40us	;wreg free
  6443  0025B2                     
  6444                           ;lcd.c: 43:  }
  6445  0025B2  2A02               	incf	Delay2ms@i^0,f,c
  6446  0025B4  0E31               	movlw	49
  6447  0025B6  6402               	cpfsgt	Delay2ms@i^0,c
  6448  0025B8  EFE0  F012         	goto	u2001
  6449  0025BC  EFE2  F012         	goto	u2000
  6450  0025C0                     u2001:
  6451  0025C0  EFD7  F012         	goto	l2284
  6452  0025C4                     u2000:
  6453  0025C4  0012               	return		;funcret
  6454  0025C6                     __end_of_Delay2ms:
  6455                           	callstack 0
  6456                           
  6457 ;; *************** function _Delay40us *****************
  6458 ;; Defined at:
  6459 ;;		line 31 in file "lcd.c"
  6460 ;; Parameters:    Size  Location     Type
  6461 ;;		None
  6462 ;; Auto vars:     Size  Location     Type
  6463 ;;  i               1    0[COMRAM] unsigned char 
  6464 ;; Return value:  Size  Location     Type
  6465 ;;                  1    wreg      void 
  6466 ;; Registers used:
  6467 ;;		wreg, status,2, status,0
  6468 ;; Tracked objects:
  6469 ;;		On entry : 0/0
  6470 ;;		On exit  : 0/0
  6471 ;;		Unchanged: 0/0
  6472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6473 ;;      Params:         0       0       0       0       0       0       0
  6474 ;;      Locals:         1       0       0       0       0       0       0
  6475 ;;      Temps:          0       0       0       0       0       0       0
  6476 ;;      Totals:         1       0       0       0       0       0       0
  6477 ;;Total ram usage:        1 bytes
  6478 ;; Hardware stack levels used: 1
  6479 ;; This function calls:
  6480 ;;		Nothing
  6481 ;; This function is called by:
  6482 ;;		_Delay2ms
  6483 ;;		_lcdCommand
  6484 ;;		_lcdData
  6485 ;; This function uses a non-reentrant model
  6486 ;;
  6487                           
  6488                           	psect	text39
  6489  0025E0                     __ptext39:
  6490                           	callstack 0
  6491  0025E0                     _Delay40us:
  6492                           	callstack 28
  6493  0025E0                     
  6494                           ;lcd.c: 33:  unsigned char i;;lcd.c: 34:  for(i=0; i < 25; i++);
  6495  0025E0  0E00               	movlw	0
  6496  0025E2  6E01               	movwf	Delay40us@i^0,c
  6497  0025E4                     l2274:
  6498  0025E4  2A01               	incf	Delay40us@i^0,f,c
  6499  0025E6  0E18               	movlw	24
  6500  0025E8  6401               	cpfsgt	Delay40us@i^0,c
  6501  0025EA  EFF9  F012         	goto	u1991
  6502  0025EE  EFFB  F012         	goto	u1990
  6503  0025F2                     u1991:
  6504  0025F2  EFF2  F012         	goto	l2274
  6505  0025F6                     u1990:
  6506  0025F6  0012               	return		;funcret
  6507  0025F8                     __end_of_Delay40us:
  6508                           	callstack 0
  6509                           
  6510 ;; *************** function _kpRead *****************
  6511 ;; Defined at:
  6512 ;;		line 35 in file "keypad.c"
  6513 ;; Parameters:    Size  Location     Type
  6514 ;;		None
  6515 ;; Auto vars:     Size  Location     Type
  6516 ;;		None
  6517 ;; Return value:  Size  Location     Type
  6518 ;;                  2    0[COMRAM] unsigned int 
  6519 ;; Registers used:
  6520 ;;		None
  6521 ;; Tracked objects:
  6522 ;;		On entry : 0/0
  6523 ;;		On exit  : 0/0
  6524 ;;		Unchanged: 0/0
  6525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6526 ;;      Params:         2       0       0       0       0       0       0
  6527 ;;      Locals:         0       0       0       0       0       0       0
  6528 ;;      Temps:          0       0       0       0       0       0       0
  6529 ;;      Totals:         2       0       0       0       0       0       0
  6530 ;;Total ram usage:        2 bytes
  6531 ;; Hardware stack levels used: 1
  6532 ;; This function calls:
  6533 ;;		Nothing
  6534 ;; This function is called by:
  6535 ;;		_main
  6536 ;; This function uses a non-reentrant model
  6537 ;;
  6538                           
  6539                           	psect	text40
  6540  0025F8                     __ptext40:
  6541                           	callstack 0
  6542  0025F8                     _kpRead:
  6543                           	callstack 30
  6544  0025F8                     
  6545                           ;keypad.c: 36:     return valor;
  6546  0025F8  C0ED  F001         	movff	_valor,?_kpRead
  6547  0025FC  C0EE  F002         	movff	_valor+1,?_kpRead+1
  6548  002600  0012               	return		;funcret
  6549  002602                     __end_of_kpRead:
  6550                           	callstack 0
  6551                           
  6552 ;; *************** function _kpInit *****************
  6553 ;; Defined at:
  6554 ;;		line 87 in file "keypad.c"
  6555 ;; Parameters:    Size  Location     Type
  6556 ;;		None
  6557 ;; Auto vars:     Size  Location     Type
  6558 ;;		None
  6559 ;; Return value:  Size  Location     Type
  6560 ;;                  1    wreg      void 
  6561 ;; Registers used:
  6562 ;;		wreg, status,2, status,0
  6563 ;; Tracked objects:
  6564 ;;		On entry : 0/0
  6565 ;;		On exit  : 0/0
  6566 ;;		Unchanged: 0/0
  6567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6568 ;;      Params:         0       0       0       0       0       0       0
  6569 ;;      Locals:         0       0       0       0       0       0       0
  6570 ;;      Temps:          0       0       0       0       0       0       0
  6571 ;;      Totals:         0       0       0       0       0       0       0
  6572 ;;Total ram usage:        0 bytes
  6573 ;; Hardware stack levels used: 1
  6574 ;; This function calls:
  6575 ;;		Nothing
  6576 ;; This function is called by:
  6577 ;;		_main
  6578 ;; This function uses a non-reentrant model
  6579 ;;
  6580                           
  6581                           	psect	text41
  6582  002602                     __ptext41:
  6583                           	callstack 0
  6584  002602                     _kpInit:
  6585                           	callstack 30
  6586  002602                     
  6587                           ;keypad.c: 89:     TRISB &= 0x07;
  6588  002602  0E07               	movlw	7
  6589  002604  1693               	andwf	147,f,c	;volatile
  6590                           
  6591                           ;keypad.c: 91:     TRISD |= 0x0f;
  6592  002606  0E0F               	movlw	15
  6593  002608  1295               	iorwf	149,f,c	;volatile
  6594  00260A  0012               	return		;funcret
  6595  00260C                     __end_of_kpInit:
  6596                           	callstack 0
  6597                           
  6598 ;; *************** function _kpDebounce *****************
  6599 ;; Defined at:
  6600 ;;		line 39 in file "keypad.c"
  6601 ;; Parameters:    Size  Location     Type
  6602 ;;		None
  6603 ;; Auto vars:     Size  Location     Type
  6604 ;;  k               2    6[COMRAM] int 
  6605 ;;  i               1    9[COMRAM] unsigned char 
  6606 ;;  j               1    8[COMRAM] unsigned char 
  6607 ;;  old_D           1    5[COMRAM] unsigned char 
  6608 ;; Return value:  Size  Location     Type
  6609 ;;                  1    wreg      void 
  6610 ;; Registers used:
  6611 ;;		wreg, status,2, status,0, prodl, prodh
  6612 ;; Tracked objects:
  6613 ;;		On entry : 0/0
  6614 ;;		On exit  : 0/0
  6615 ;;		Unchanged: 0/0
  6616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6617 ;;      Params:         0       0       0       0       0       0       0
  6618 ;;      Locals:         5       0       0       0       0       0       0
  6619 ;;      Temps:          5       0       0       0       0       0       0
  6620 ;;      Totals:        10       0       0       0       0       0       0
  6621 ;;Total ram usage:       10 bytes
  6622 ;; Hardware stack levels used: 1
  6623 ;; This function calls:
  6624 ;;		Nothing
  6625 ;; This function is called by:
  6626 ;;		_main
  6627 ;; This function uses a non-reentrant model
  6628 ;;
  6629                           
  6630                           	psect	text42
  6631  001288                     __ptext42:
  6632                           	callstack 0
  6633  001288                     _kpDebounce:
  6634                           	callstack 30
  6635  001288                     
  6636                           ;keypad.c: 40:     unsigned char i, j;;keypad.c: 41:     static unsigned char tempo;;key
      +                          pad.c: 42:     static unsigned int valorNovo = 0x0000;;keypad.c: 43:     static unsigned
      +                           int valorAntigo = 0x0000;;keypad.c: 46:     unsigned char old_D;;keypad.c: 47:     old_
      +                          D = PORTD;
  6637  001288  CF83 F006          	movff	3971,kpDebounce@old_D	;volatile
  6638  00128C                     
  6639                           ;keypad.c: 51:     TRISD |= 0x0f;
  6640  00128C  0E0F               	movlw	15
  6641  00128E  1295               	iorwf	149,f,c	;volatile
  6642  001290                     
  6643                           ;keypad.c: 53:     for (i = 0; i < 3; i++) {
  6644  001290  0E00               	movlw	0
  6645  001292  6E0A               	movwf	kpDebounce@i^0,c
  6646  001294                     l3120:
  6647                           
  6648                           ;keypad.c: 55:         TRISB &= 0xF8;
  6649  001294  0EF8               	movlw	248
  6650  001296  1693               	andwf	147,f,c	;volatile
  6651                           
  6652                           ;keypad.c: 57:         ((TRISB) |= (1<<(i)));
  6653  001298  C00A  F001         	movff	kpDebounce@i,??_kpDebounce
  6654  00129C  0E01               	movlw	1
  6655  00129E  6E02               	movwf	(??_kpDebounce+1)^0,c
  6656  0012A0  2A01               	incf	??_kpDebounce^0,f,c
  6657  0012A2  EF55  F009         	goto	u3214
  6658  0012A6                     u3215:
  6659  0012A6  90D8               	bcf	status,0,c
  6660  0012A8  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  6661  0012AA                     u3214:
  6662  0012AA  2E01               	decfsz	??_kpDebounce^0,f,c
  6663  0012AC  EF53  F009         	goto	u3215
  6664  0012B0  5002               	movf	(??_kpDebounce+1)^0,w,c
  6665  0012B2  1293               	iorwf	147,f,c	;volatile
  6666                           
  6667                           ;keypad.c: 59:         PORTB |= 0x07;
  6668  0012B4  0E07               	movlw	7
  6669  0012B6  1281               	iorwf	129,f,c	;volatile
  6670                           
  6671                           ;keypad.c: 60:         ((PORTB) &= ~(1<<(i)));
  6672  0012B8  C00A  F001         	movff	kpDebounce@i,??_kpDebounce
  6673  0012BC  0E01               	movlw	1
  6674  0012BE  6E02               	movwf	(??_kpDebounce+1)^0,c
  6675  0012C0  2A01               	incf	??_kpDebounce^0,f,c
  6676  0012C2  EF65  F009         	goto	u3224
  6677  0012C6                     u3225:
  6678  0012C6  90D8               	bcf	status,0,c
  6679  0012C8  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  6680  0012CA                     u3224:
  6681  0012CA  2E01               	decfsz	??_kpDebounce^0,f,c
  6682  0012CC  EF63  F009         	goto	u3225
  6683  0012D0  5002               	movf	(??_kpDebounce+1)^0,w,c
  6684  0012D2  0AFF               	xorlw	255
  6685  0012D4  1681               	andwf	129,f,c	;volatile
  6686  0012D6                     
  6687                           ;keypad.c: 63:         for (int k = 0; k < 10; k++);
  6688  0012D6  0E00               	movlw	0
  6689  0012D8  6E08               	movwf	(kpDebounce@k+1)^0,c
  6690  0012DA  0E00               	movlw	0
  6691  0012DC  6E07               	movwf	kpDebounce@k^0,c
  6692  0012DE                     l3128:
  6693  0012DE  4A07               	infsnz	kpDebounce@k^0,f,c
  6694  0012E0  2A08               	incf	(kpDebounce@k+1)^0,f,c
  6695  0012E2  BE08               	btfsc	(kpDebounce@k+1)^0,7,c
  6696  0012E4  EF7D  F009         	goto	u3231
  6697  0012E8  5008               	movf	(kpDebounce@k+1)^0,w,c
  6698  0012EA  E109               	bnz	u3230
  6699  0012EC  0E0A               	movlw	10
  6700  0012EE  5C07               	subwf	kpDebounce@k^0,w,c
  6701  0012F0  A0D8               	btfss	status,0,c
  6702  0012F2  EF7D  F009         	goto	u3231
  6703  0012F6  EF7F  F009         	goto	u3230
  6704  0012FA                     u3231:
  6705  0012FA  EF6F  F009         	goto	l3128
  6706  0012FE                     u3230:
  6707  0012FE                     
  6708                           ;keypad.c: 66:         for (j = 0; j < 4; j++) {
  6709  0012FE  0E00               	movlw	0
  6710  001300  6E09               	movwf	kpDebounce@j^0,c
  6711  001302                     l3138:
  6712                           
  6713                           ;keypad.c: 67:             if (!((PORTD) & (1<<(j)))) {
  6714  001302  C009  F001         	movff	kpDebounce@j,??_kpDebounce
  6715  001306  0E01               	movlw	1
  6716  001308  6E02               	movwf	(??_kpDebounce+1)^0,c
  6717  00130A  2A01               	incf	??_kpDebounce^0,f,c
  6718  00130C  EF8A  F009         	goto	u3244
  6719  001310                     u3245:
  6720  001310  90D8               	bcf	status,0,c
  6721  001312  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  6722  001314                     u3244:
  6723  001314  2E01               	decfsz	??_kpDebounce^0,f,c
  6724  001316  EF88  F009         	goto	u3245
  6725  00131A  5002               	movf	(??_kpDebounce+1)^0,w,c
  6726  00131C  1483               	andwf	131,w,c	;volatile
  6727  00131E  0900               	iorlw	0
  6728  001320  A4D8               	btfss	status,2,c
  6729  001322  EF95  F009         	goto	u3251
  6730  001326  EF97  F009         	goto	u3250
  6731  00132A                     u3251:
  6732  00132A  EFB0  F009         	goto	l3142
  6733  00132E                     u3250:
  6734  00132E                     
  6735                           ;keypad.c: 68:                 ((valorNovo) |= (1<<((i * 4) + j)));
  6736  00132E  500A               	movf	kpDebounce@i^0,w,c
  6737  001330  0D04               	mullw	4
  6738  001332  50F3               	movf	243,w,c
  6739  001334  2409               	addwf	kpDebounce@j^0,w,c
  6740  001336  6E01               	movwf	??_kpDebounce^0,c
  6741  001338  0E01               	movlw	1
  6742  00133A  6E02               	movwf	(??_kpDebounce+1)^0,c
  6743  00133C  0E00               	movlw	0
  6744  00133E  6E03               	movwf	(??_kpDebounce+2)^0,c
  6745  001340  2A01               	incf	??_kpDebounce^0,f,c
  6746  001342  EFA6  F009         	goto	u3264
  6747  001346                     u3265:
  6748  001346  90D8               	bcf	status,0,c
  6749  001348  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  6750  00134A  3603               	rlcf	(??_kpDebounce+2)^0,f,c
  6751  00134C                     u3264:
  6752  00134C  2E01               	decfsz	??_kpDebounce^0,f,c
  6753  00134E  EFA3  F009         	goto	u3265
  6754  001352  5002               	movf	(??_kpDebounce+1)^0,w,c
  6755  001354  0100               	movlb	0	; () banked
  6756  001356  13EB               	iorwf	kpDebounce@valorNovo& (0+255),f,b
  6757  001358  5003               	movf	(??_kpDebounce+2)^0,w,c
  6758  00135A  13EC               	iorwf	(kpDebounce@valorNovo+1)& (0+255),f,b
  6759                           
  6760                           ;keypad.c: 69:             } else {
  6761  00135C  EFCB  F009         	goto	l3144
  6762  001360                     l3142:
  6763                           
  6764                           ;keypad.c: 70:                 ((valorNovo) &= ~(1<<((i * 4) + j)));
  6765  001360  500A               	movf	kpDebounce@i^0,w,c
  6766  001362  0D04               	mullw	4
  6767  001364  50F3               	movf	243,w,c
  6768  001366  2409               	addwf	kpDebounce@j^0,w,c
  6769  001368  6E01               	movwf	??_kpDebounce^0,c
  6770  00136A  0E01               	movlw	1
  6771  00136C  6E02               	movwf	(??_kpDebounce+1)^0,c
  6772  00136E  0E00               	movlw	0
  6773  001370  6E03               	movwf	(??_kpDebounce+2)^0,c
  6774  001372  2A01               	incf	??_kpDebounce^0,f,c
  6775  001374  EFBF  F009         	goto	u3274
  6776  001378                     u3275:
  6777  001378  90D8               	bcf	status,0,c
  6778  00137A  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  6779  00137C  3603               	rlcf	(??_kpDebounce+2)^0,f,c
  6780  00137E                     u3274:
  6781  00137E  2E01               	decfsz	??_kpDebounce^0,f,c
  6782  001380  EFBC  F009         	goto	u3275
  6783  001384  1C02               	comf	(??_kpDebounce+1)^0,w,c
  6784  001386  6E04               	movwf	(??_kpDebounce+3)^0,c
  6785  001388  1C03               	comf	(??_kpDebounce+2)^0,w,c
  6786  00138A  6E05               	movwf	(??_kpDebounce+4)^0,c
  6787  00138C  5004               	movf	(??_kpDebounce+3)^0,w,c
  6788  00138E  0100               	movlb	0	; () banked
  6789  001390  17EB               	andwf	kpDebounce@valorNovo& (0+255),f,b
  6790  001392  5005               	movf	(??_kpDebounce+4)^0,w,c
  6791  001394  17EC               	andwf	(kpDebounce@valorNovo+1)& (0+255),f,b
  6792  001396                     l3144:
  6793                           
  6794                           ; BSR set to: 0
  6795                           ;keypad.c: 72:         }
  6796  001396  2A09               	incf	kpDebounce@j^0,f,c
  6797  001398                     
  6798                           ; BSR set to: 0
  6799  001398  0E03               	movlw	3
  6800  00139A  6409               	cpfsgt	kpDebounce@j^0,c
  6801  00139C  EFD2  F009         	goto	u3281
  6802  0013A0  EFD4  F009         	goto	u3280
  6803  0013A4                     u3281:
  6804  0013A4  EF81  F009         	goto	l3138
  6805  0013A8                     u3280:
  6806  0013A8                     
  6807                           ; BSR set to: 0
  6808                           ;keypad.c: 73:     }
  6809  0013A8  2A0A               	incf	kpDebounce@i^0,f,c
  6810  0013AA                     
  6811                           ; BSR set to: 0
  6812  0013AA  0E02               	movlw	2
  6813  0013AC  640A               	cpfsgt	kpDebounce@i^0,c
  6814  0013AE  EFDB  F009         	goto	u3291
  6815  0013B2  EFDD  F009         	goto	u3290
  6816  0013B6                     u3291:
  6817  0013B6  EF4A  F009         	goto	l3120
  6818  0013BA                     u3290:
  6819  0013BA                     
  6820                           ; BSR set to: 0
  6821                           ;keypad.c: 74:     if (valorAntigo == valorNovo) {
  6822  0013BA  51EB               	movf	kpDebounce@valorNovo& (0+255),w,b
  6823  0013BC  19E9               	xorwf	kpDebounce@valorAntigo& (0+255),w,b
  6824  0013BE  E107               	bnz	u3301
  6825  0013C0  51EC               	movf	(kpDebounce@valorNovo+1)& (0+255),w,b
  6826  0013C2  19EA               	xorwf	(kpDebounce@valorAntigo+1)& (0+255),w,b
  6827  0013C4  A4D8               	btfss	status,2,c
  6828  0013C6  EFE7  F009         	goto	u3301
  6829  0013CA  EFE9  F009         	goto	u3300
  6830  0013CE                     u3301:
  6831  0013CE  EFEC  F009         	goto	l3156
  6832  0013D2                     u3300:
  6833  0013D2                     
  6834                           ; BSR set to: 0
  6835                           ;keypad.c: 75:         tempo--;
  6836  0013D2  07F5               	decf	kpDebounce@tempo& (0+255),f,b
  6837                           
  6838                           ;keypad.c: 76:     } else {
  6839  0013D4  EFF2  F009         	goto	l138
  6840  0013D8                     l3156:
  6841                           
  6842                           ; BSR set to: 0
  6843                           ;keypad.c: 77:         tempo = 10;
  6844  0013D8  0E0A               	movlw	10
  6845  0013DA  6FF5               	movwf	kpDebounce@tempo& (0+255),b
  6846  0013DC                     
  6847                           ; BSR set to: 0
  6848                           ;keypad.c: 78:         valorAntigo = valorNovo;
  6849  0013DC  C0EB  F0E9         	movff	kpDebounce@valorNovo,kpDebounce@valorAntigo
  6850  0013E0  C0EC  F0EA         	movff	kpDebounce@valorNovo+1,kpDebounce@valorAntigo+1
  6851  0013E4                     l138:
  6852                           
  6853                           ; BSR set to: 0
  6854                           ;keypad.c: 80:     if (tempo == 0) {
  6855  0013E4  51F5               	movf	kpDebounce@tempo& (0+255),w,b
  6856  0013E6  A4D8               	btfss	status,2,c
  6857  0013E8  EFF8  F009         	goto	u3311
  6858  0013EC  EFFA  F009         	goto	u3310
  6859  0013F0                     u3311:
  6860  0013F0  EFFE  F009         	goto	l139
  6861  0013F4                     u3310:
  6862  0013F4                     
  6863                           ; BSR set to: 0
  6864                           ;keypad.c: 81:         valor = valorAntigo;
  6865  0013F4  C0E9  F0ED         	movff	kpDebounce@valorAntigo,_valor
  6866  0013F8  C0EA  F0EE         	movff	kpDebounce@valorAntigo+1,_valor+1
  6867  0013FC                     l139:
  6868                           
  6869                           ; BSR set to: 0
  6870                           ;keypad.c: 83:     PORTD = old_D;
  6871  0013FC  C006  FF83         	movff	kpDebounce@old_D,3971	;volatile
  6872  001400                     
  6873                           ; BSR set to: 0
  6874                           ;keypad.c: 84:     TRISD = 0x00;
  6875  001400  0E00               	movlw	0
  6876  001402  6E95               	movwf	149,c	;volatile
  6877  001404                     
  6878                           ; BSR set to: 0
  6879  001404  0012               	return		;funcret
  6880  001406                     __end_of_kpDebounce:
  6881                           	callstack 0
  6882                           
  6883                           	psect	rparam
  6884  0000                     
  6885                           	psect	idloc
  6886                           
  6887                           ;Config register IDLOC0 @ 0x200000
  6888                           ;	unspecified, using default values
  6889  200000                     	org	2097152
  6890  200000  FF                 	db	255
  6891                           
  6892                           ;Config register IDLOC1 @ 0x200001
  6893                           ;	unspecified, using default values
  6894  200001                     	org	2097153
  6895  200001  FF                 	db	255
  6896                           
  6897                           ;Config register IDLOC2 @ 0x200002
  6898                           ;	unspecified, using default values
  6899  200002                     	org	2097154
  6900  200002  FF                 	db	255
  6901                           
  6902                           ;Config register IDLOC3 @ 0x200003
  6903                           ;	unspecified, using default values
  6904  200003                     	org	2097155
  6905  200003  FF                 	db	255
  6906                           
  6907                           ;Config register IDLOC4 @ 0x200004
  6908                           ;	unspecified, using default values
  6909  200004                     	org	2097156
  6910  200004  FF                 	db	255
  6911                           
  6912                           ;Config register IDLOC5 @ 0x200005
  6913                           ;	unspecified, using default values
  6914  200005                     	org	2097157
  6915  200005  FF                 	db	255
  6916                           
  6917                           ;Config register IDLOC6 @ 0x200006
  6918                           ;	unspecified, using default values
  6919  200006                     	org	2097158
  6920  200006  FF                 	db	255
  6921                           
  6922                           ;Config register IDLOC7 @ 0x200007
  6923                           ;	unspecified, using default values
  6924  200007                     	org	2097159
  6925  200007  FF                 	db	255
  6926                           
  6927                           	psect	config
  6928                           
  6929                           ; Padding undefined space
  6930  300000                     	org	3145728
  6931  300000  FF                 	db	255
  6932                           
  6933                           ;Config register CONFIG1H @ 0x300001
  6934                           ;	Oscillator Selection bits
  6935                           ;	OSC = HS, HS oscillator
  6936                           ;	Fail-Safe Clock Monitor Enable bit
  6937                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  6938                           ;	Internal/External Oscillator Switchover bit
  6939                           ;	IESO = OFF, Oscillator Switchover mode disabled
  6940  300001                     	org	3145729
  6941  300001  02                 	db	2
  6942                           
  6943                           ;Config register CONFIG2L @ 0x300002
  6944                           ;	Power-up Timer Enable bit
  6945                           ;	PWRT = OFF, PWRT disabled
  6946                           ;	Brown-out Reset Enable bits
  6947                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  6948                           ;	Brown Out Reset Voltage bits
  6949                           ;	BORV = 0x2E, user specified literal
  6950  300002                     	org	3145730
  6951  300002  71                 	db	369
  6952                           
  6953                           ;Config register CONFIG2H @ 0x300003
  6954                           ;	Watchdog Timer Enable bit
  6955                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  6956                           ;	Watchdog Timer Postscale Select bits
  6957                           ;	WDTPS = 1, 1:1
  6958  300003                     	org	3145731
  6959  300003  00                 	db	0
  6960                           
  6961                           ; Padding undefined space
  6962  300004                     	org	3145732
  6963  300004  FF                 	db	255
  6964                           
  6965                           ;Config register CONFIG3H @ 0x300005
  6966                           ;	CCP2 MUX bit
  6967                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  6968                           ;	PORTB A/D Enable bit
  6969                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  6970                           ;	Low-Power Timer1 Oscillator Enable bit
  6971                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  6972                           ;	MCLR Pin Enable bit
  6973                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  6974  300005                     	org	3145733
  6975  300005  83                 	db	131
  6976                           
  6977                           ;Config register CONFIG4L @ 0x300006
  6978                           ;	Stack Full/Underflow Reset Enable bit
  6979                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  6980                           ;	Single-Supply ICSP Enable bit
  6981                           ;	LVP = OFF, Single-Supply ICSP disabled
  6982                           ;	Extended Instruction Set Enable bit
  6983                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  6984                           ;	Background Debugger Enable bit
  6985                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  6986  300006                     	org	3145734
  6987  300006  80                 	db	128
  6988                           
  6989                           ; Padding undefined space
  6990  300007                     	org	3145735
  6991  300007  FF                 	db	255
  6992                           
  6993                           ;Config register CONFIG5L @ 0x300008
  6994                           ;	Code Protection bit
  6995                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  6996                           ;	Code Protection bit
  6997                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  6998                           ;	Code Protection bit
  6999                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  7000                           ;	Code Protection bit
  7001                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  7002  300008                     	org	3145736
  7003  300008  0F                 	db	15
  7004                           
  7005                           ;Config register CONFIG5H @ 0x300009
  7006                           ;	Boot Block Code Protection bit
  7007                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  7008                           ;	Data EEPROM Code Protection bit
  7009                           ;	CPD = OFF, Data EEPROM not code-protected
  7010  300009                     	org	3145737
  7011  300009  C0                 	db	192
  7012                           
  7013                           ;Config register CONFIG6L @ 0x30000A
  7014                           ;	Write Protection bit
  7015                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  7016                           ;	Write Protection bit
  7017                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  7018                           ;	Write Protection bit
  7019                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  7020                           ;	Write Protection bit
  7021                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  7022  30000A                     	org	3145738
  7023  30000A  0F                 	db	15
  7024                           
  7025                           ;Config register CONFIG6H @ 0x30000B
  7026                           ;	Configuration Register Write Protection bit
  7027                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  7028                           ;	Boot Block Write Protection bit
  7029                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  7030                           ;	Data EEPROM Write Protection bit
  7031                           ;	WRTD = OFF, Data EEPROM not write-protected
  7032  30000B                     	org	3145739
  7033  30000B  E0                 	db	224
  7034                           
  7035                           ;Config register CONFIG7L @ 0x30000C
  7036                           ;	Table Read Protection bit
  7037                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  7038                           ;	Table Read Protection bit
  7039                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  7040                           ;	Table Read Protection bit
  7041                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  7042                           ;	Table Read Protection bit
  7043                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  7044  30000C                     	org	3145740
  7045  30000C  0F                 	db	15
  7046                           
  7047                           ;Config register CONFIG7H @ 0x30000D
  7048                           ;	Boot Block Table Read Protection bit
  7049                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  7050  30000D                     	org	3145741
  7051  30000D  40                 	db	64
  7052                           tosu	equ	0xFFF
  7053                           tosh	equ	0xFFE
  7054                           tosl	equ	0xFFD
  7055                           stkptr	equ	0xFFC
  7056                           pclatu	equ	0xFFB
  7057                           pclath	equ	0xFFA
  7058                           pcl	equ	0xFF9
  7059                           tblptru	equ	0xFF8
  7060                           tblptrh	equ	0xFF7
  7061                           tblptrl	equ	0xFF6
  7062                           tablat	equ	0xFF5
  7063                           prodh	equ	0xFF4
  7064                           prodl	equ	0xFF3
  7065                           indf0	equ	0xFEF
  7066                           postinc0	equ	0xFEE
  7067                           postdec0	equ	0xFED
  7068                           preinc0	equ	0xFEC
  7069                           plusw0	equ	0xFEB
  7070                           fsr0h	equ	0xFEA
  7071                           fsr0l	equ	0xFE9
  7072                           wreg	equ	0xFE8
  7073                           indf1	equ	0xFE7
  7074                           postinc1	equ	0xFE6
  7075                           postdec1	equ	0xFE5
  7076                           preinc1	equ	0xFE4
  7077                           plusw1	equ	0xFE3
  7078                           fsr1h	equ	0xFE2
  7079                           fsr1l	equ	0xFE1
  7080                           bsr	equ	0xFE0
  7081                           indf2	equ	0xFDF
  7082                           postinc2	equ	0xFDE
  7083                           postdec2	equ	0xFDD
  7084                           preinc2	equ	0xFDC
  7085                           plusw2	equ	0xFDB
  7086                           fsr2h	equ	0xFDA
  7087                           fsr2l	equ	0xFD9
  7088                           status	equ	0xFD8

Data Sizes:
    Strings     72
    Constant    16
    Data        251
    BSS         25
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127    125     127
    BANK0           128      0     122
    BANK1           256      0     156
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    time@t	PTR long long  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    itoa@ptr1	PTR unsigned char  size(2) Largest target is 10
		 -> Apostando@ssorte(COMRAM[4]), textSaldo@text2(COMRAM[10]), 

    itoa@ptr	PTR unsigned char  size(2) Largest target is 10
		 -> Apostando@ssorte(COMRAM[4]), textSaldo@text2(COMRAM[10]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 10
		 -> Apostando@ssorte(COMRAM[4]), textSaldo@text2(COMRAM[10]), 

    itoa@result	PTR unsigned char  size(2) Largest target is 10
		 -> Apostando@ssorte(COMRAM[4]), textSaldo@text2(COMRAM[10]), 

    escreve@text	PTR unsigned char  size(2) Largest target is 20
		 -> textApostando@text2(COMRAM[15]), textApostando@text(COMRAM[15]), textWin@text2(COMRAM[15]), textWin@text(COMRAM[15]), 
		 -> textLost@text2(COMRAM[15]), textLost@text(COMRAM[15]), textGameOver@text2(COMRAM[20]), textGameOver@text(COMRAM[15]), 
		 -> textWait@text2(COMRAM[15]), textWait@text(COMRAM[15]), textSaldo@text2(COMRAM[10]), textSaldo@text(COMRAM[6]), 
		 -> textApostas@text2(COMRAM[15]), textApostas@text(COMRAM[15]), textInstrutions@text2(COMRAM[15]), textInstrutions@text(COMRAM[15]), 
		 -> textInit@text2(COMRAM[16]), textInit@text(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->_textApostando
    _textWait->_escreve
    _textInstrutions->_escreve
    _textInit->_escreve
    _textApostas->_escreve
    _textApostando->_Apostando
    _verso->_delay
    _textGameOver->_textSaldo
    _pwmSet->___lwdiv
    _inverso->_delay
    _Apostando->_textLost
    _Apostando->_textWin
    _textWin->_textSaldo
    _textLost->_textSaldo
    _textSaldo->_itoa
    _itoa->___awdiv
    _escreve->_lcdData
    _lcdData->_digitalWrite
    _ssdUpdate->_digitalWrite
    _ssdDigit->___awmod
    _rand->___lmul
    ___awmod->_rand
    _ssdInit->_pinMode
    _srand->_time
    _pwmInit->_pwmFrequency
    _pwmFrequency->___aldiv
    _lcdInit->_lcdCommand
    _lcdCommand->_digitalWrite
    _Delay2ms->_Delay40us

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0  137295
                                            115 COMRAM    10    10      0
                         _kpDebounce
                             _kpInit
                             _kpRead
                         _lcdCommand
                            _lcdInit
                            _pwmInit
                              _srand
                            _ssdInit
                      _textApostando
                        _textApostas
                           _textInit
                    _textInstrutions
                          _textSaldo
                           _textWait
                               _time
 ---------------------------------------------------------------------------------
 (1) _time                                                 8     0      8     120
                                              0 COMRAM     8     0      8
 ---------------------------------------------------------------------------------
 (1) _textWait                                            30    30      0    8324
                                             11 COMRAM    30    30      0
                              _delay
                            _escreve
                         _lcdCommand
 ---------------------------------------------------------------------------------
 (1) _textInstrutions                                     30    30      0    8324
                                             11 COMRAM    30    30      0
                              _delay
                            _escreve
                         _lcdCommand
 ---------------------------------------------------------------------------------
 (1) _textInit                                            28    28      0    8324
                                             11 COMRAM    28    28      0
                              _delay
                            _escreve
                         _lcdCommand
 ---------------------------------------------------------------------------------
 (1) _textApostas                                         30    30      0    8324
                                             11 COMRAM    30    30      0
                              _delay
                            _escreve
                         _lcdCommand
 ---------------------------------------------------------------------------------
 (1) _textApostando                                       34    34      0   82349
                                             81 COMRAM    34    34      0
                          _Apostando
                            _escreve
                            _inverso
                         _lcdCommand
                       _pwmFrequency
                             _pwmSet
                       _textGameOver
                              _verso
 ---------------------------------------------------------------------------------
 (2) _verso                                                2     2      0     230
                                              2 COMRAM     2     2      0
                              _delay
 ---------------------------------------------------------------------------------
 (2) _textGameOver                                        35    35      0   19039
                                             39 COMRAM    35    35      0
                              _delay
                            _escreve
                         _lcdCommand
                          _textSaldo
 ---------------------------------------------------------------------------------
 (2) _pwmSet                                               5     5      0     868
                                              7 COMRAM     5     5      0
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     314
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _inverso                                              2     2      0     230
                                              2 COMRAM     2     2      0
                              _delay
 ---------------------------------------------------------------------------------
 (2) _Apostando                                           12    12      0   53094
                                             69 COMRAM    12    12      0
                            ___awdiv
                            ___awmod
                            ___fladd
                             ___flge
                       _digitalWrite
                               _itoa
                               _rand
                           _ssdDigit
                          _ssdUpdate
                           _textLost
                            _textWin
 ---------------------------------------------------------------------------------
 (3) _textWin                                             30    30      0   19039
                                             39 COMRAM    30    30      0
                              _delay
                            _escreve
                         _lcdCommand
                          _textSaldo
 ---------------------------------------------------------------------------------
 (3) _textLost                                            30    30      0   19039
                                             39 COMRAM    30    30      0
                              _delay
                            _escreve
                         _lcdCommand
                          _textSaldo
 ---------------------------------------------------------------------------------
 (1) _textSaldo                                           16    16      0   10715
                                             23 COMRAM    16    16      0
                              _delay
                            _escreve
                               _itoa
                         _lcdCommand
 ---------------------------------------------------------------------------------
 (2) _itoa                                                15     9      6    2355
                                              8 COMRAM    15     9      6
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     463
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     908
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _escreve                                              3     1      2    4729
                                              8 COMRAM     3     1      2
                            _lcdData
 ---------------------------------------------------------------------------------
 (3) _lcdData                                              2     2      0    3271
                                              6 COMRAM     2     2      0
                          _Delay40us
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (2) _delay                                                2     2      0     138
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _ssdUpdate                                            2     2      0    3180
                                              6 COMRAM     2     2      0
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (3) _ssdDigit                                             2     1      1     480
                                             24 COMRAM     2     1      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) _rand                                                 6     4      2     370
                                             12 COMRAM     6     4      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     370
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     790
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             16     8      8    2540
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     904
                                             18 COMRAM     6     2      4
                            ___awdiv (ARG)
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (1) _ssdInit                                              0     0      0    1352
                            _pinMode
 ---------------------------------------------------------------------------------
 (1) _srand                                                6     4      2      98
                                              8 COMRAM     6     4      2
                               _time (ARG)
 ---------------------------------------------------------------------------------
 (1) _pwmInit                                              0     0      0     702
                       _pwmFrequency
 ---------------------------------------------------------------------------------
 (2) _pwmFrequency                                         2     0      2     702
                                             14 COMRAM     2     0      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     452
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _lcdInit                                              0     0      0    4851
                           _Delay2ms
                         _lcdCommand
                            _pinMode
 ---------------------------------------------------------------------------------
 (2) _pinMode                                              6     2      4    1352
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _lcdCommand                                           2     2      0    3407
                                              6 COMRAM     2     2      0
                           _Delay2ms
                          _Delay40us
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (3) _digitalWrite                                         6     2      4    3180
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _Delay2ms                                             1     1      0      92
                                              1 COMRAM     1     1      0
                          _Delay40us
 ---------------------------------------------------------------------------------
 (3) _Delay40us                                            1     1      0      46
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _kpRead                                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _kpInit                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _kpDebounce                                          10    10      0     315
                                              0 COMRAM    10    10      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _kpDebounce
   _kpInit
   _kpRead
   _lcdCommand
     _Delay2ms
       _Delay40us
     _Delay40us
     _digitalWrite
   _lcdInit
     _Delay2ms
     _lcdCommand
     _pinMode
   _pwmInit
     _pwmFrequency
       ___aldiv
   _srand
     _time (ARG)
   _ssdInit
     _pinMode
   _textApostando
     _Apostando
       ___awdiv
       ___awmod
         ___awdiv (ARG)
         _rand (ARG)
           ___lmul
       ___fladd
       ___flge
       _digitalWrite
       _itoa
         ___awdiv
         ___wmul
       _rand
       _ssdDigit
         ___awdiv (ARG)
         ___awmod (ARG)
       _ssdUpdate
         _digitalWrite
       _textLost
         _delay
         _escreve
           _lcdData
             _Delay40us
             _digitalWrite
         _lcdCommand
         _textSaldo
           _delay
           _escreve
           _itoa
           _lcdCommand
       _textWin
         _delay
         _escreve
         _lcdCommand
         _textSaldo
     _escreve
     _inverso
       _delay
     _lcdCommand
     _pwmFrequency
     _pwmSet
       ___lwdiv
       ___wmul
     _textGameOver
       _delay
       _escreve
       _lcdCommand
       _textSaldo
     _verso
       _delay
   _textApostas
     _delay
     _escreve
     _lcdCommand
   _textInit
     _delay
     _escreve
     _lcdCommand
   _textInstrutions
     _delay
     _escreve
     _lcdCommand
   _textSaldo
   _textWait
     _delay
     _escreve
     _lcdCommand
   _time

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      9C       7       60.9%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      7A       5       95.3%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     7D      7F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     195      15        0.0%
DATA                 0      0     195       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Aug  1 09:30:49 2021

                       _i 00EF                        l42 1286                        l76 1038  
                      l94 25C4                        l89 25F6              ___awdiv@sign 0006  
                      _v0 00F3                        _v1 00F2                        _v2 00F1  
                      _v3 00F0       ___wmul@multiplicand 0003                       l101 1D10  
                     l120 2600                       l104 240E                       l107 1E00  
                     l211 2364                       l140 1404                       l221 16BC  
                     l143 260A                       l303 1562                       l240 25A8  
                     l224 23BA                       l138 13E4                       l139 13FC  
                     l243 25DE                       l323 22B2                       l332 1D88  
                     l316 21FA                       l237 1F4E                       l271 24D8  
                     l280 249E                       l360 1FB8                       l353 20E2  
                     l290 2534                       l346 2082                       l371 0DEA  
                     l339 219E                       l380 1A82                       l285 2506  
                     l462 17C8                       l614 1B46                       l383 2582  
                     l297 2256                       l394 2012                       l627 1BF6  
                     l395 2022                       l653 18CC                       l911 0848  
                     l920 0B18                       l912 0836                       l648 1886  
                     l913 07FC                       l928 0962                       l937 0A32  
                     l881 1E74                       l938 0A20                       l874 1E6C  
                     _PR2 000FCB              ___awmod@sign 0018                       wreg 000FE8  
                    l2004 2602                      l1062 1EE2                      l3000 2510  
                    l3010 251C                      l1066 245A                      l1059 255C  
                    l3100 1DE8                      l2300 23F2                      l3012 2522  
                    l3020 204E                      l3110 1288                      l2230 1056  
                    l3102 1DEE                      l2302 2406                      l3014 2524  
                    l3006 2514                      l3030 2074                      l3022 205A  
                    l3120 1294                      l3112 128C                      l2240 10E0  
                    l2232 1068                      l3104 1DF4                      l2400 2466  
                    l2304 240A                      l2320 1AA2                      l2312 1A84  
                    l3040 0B40                      l3008 2518                      l3032 2078  
                    l3024 2060                      l3016 2024                      l3200 2248  
                    l3130 12E2                      l3122 12D6                      l3114 1290  
                    l2250 1178                      l2242 1100                      l2234 1088  
                    l3106 1DFA                      l2410 247C                      l2402 2476  
                    l2330 1AD6                      l2322 1AB0                      l2314 1A88  
                    l2306 255E                      l3050 0C42                      l3042 0B5C  
                    l3034 207E                      l3026 206C                      l3018 2048  
                    l3202 224C                      l3210 21CA                      l3140 132E  
                    l3132 12FE                      l3108 25F8                      l2260 1212  
                    l2252 119A                      l2244 1122                      l2236 10AA  
                    l2228 103A                      l2500 234A                      l2412 248C  
                    l2340 1B10                      l2332 1ADE                      l2324 1AB8  
                    l2316 1A96                      l2308 257A                      l2420 143E  
                    l3060 0CF2                      l3052 0C46                      l3044 0B6C  
                    l3036 0B1A                      l3028 2070                      l3204 2250  
                    l3220 21F0                      l3212 21D6                      l3300 1912  
                    l3150 13AA                      l3142 1360                      l2262 122E  
                    l2254 11B6                      l2246 113E                      l2238 10C6  
                    l2502 234E                      l2510 157C                      l2414 248E  
                    l2350 1B36                      l2342 1B18                      l2334 1AE6  
                    l2326 1ABC                      l2318 1A9E                      l2430 1482  
                    l3070 0DDE                      l3054 0C56                      l3062 0D58  
                    l3038 0B3A                      l3222 21F4                      l3214 21DC  
                    l3206 21A0                      l3230 2174                      l3310 1928  
                    l3302 1916                      l3160 13F4                      l3152 13BA  
                    l3144 1396                      l3128 12DE                      l2264 1248  
                    l2256 11D0                      l2248 1158                      l2360 1C9E  
                    l3080 1DBA                      l2600 16C2                      l2504 2360  
                    l2520 15E6                      l2512 1590                      l2408 247A  
                    l2352 1B3E                      l2344 1B1A                      l2336 1AF4  
                    l2328 1AC4                      l2440 14FC                      l2432 14CC  
                    l2424 144E                      l2416 1406                      l3072 0DE6  
                    l3064 0DA8                      l3048 0BA2                      l3240 19B8  
                    l3216 21E8                      l3208 21C4                      l3232 2180  
                    l3224 2144                      l3320 1954                      l3312 192C  
                    l3304 191A                      l3162 1400                      l3154 13D2  
                    l3146 1398                      l3138 1302                      l2274 25E4  
                    l2266 1268                      l2258 11F0                      l2370 1CE2  
                    l2362 1CB2                      l3090 1DD0                      l3082 1DBE  
                    l3074 1D8A                      l2610 1702                      l2602 16D0  
                    l2530 1632                      l2522 15F0                      l2514 15A4  
                    l2506 1564                      l2290 23BE                      l2346 1B20  
                    l2338 1AFA                      l2450 153C                      l2442 1500  
                    l2434 14D0                      l2426 145E                      l2418 1422  
                    l3066 0DBA                      l3058 0C8C                      l3250 1A28  
                    l3242 19EA                      l3218 21EC                      l3234 2192  
                    l3226 214A                      l3330 197C                      l3322 1960  
                    l3314 1930                      l3306 191E                      l3156 13D8  
                    l3148 13A8                      l2276 25E6                      l2268 25E0  
                    l2284 25AE                      l2372 1CF4                      l2364 1CB6  
                    l2356 1C96                      l3092 1DD4                      l3084 1DC2  
                    l3076 1DB2                      l2620 1740                      l2612 1706  
                    l2604 16E0                      l3180 25CE                      l3172 2536  
                    l2700 0772                      l2532 1646                      l2524 1602  
                    l2516 15C0                      l2508 1568                      l2292 23C2  
                    l2380 24A8                      l2348 1B26                      l2452 1548  
                    l2444 1516                      l2436 14E2                      l2428 1466  
                    l2460 1D2A                      l3068 0DCC                      l3260 1A56  
                    l3252 1A2E                      l3244 19F2                      l3236 2196  
                    l3228 215C                      l3164 2410                      l3332 198A  
                    l3340 199C                      l3324 196E                      l3316 1934  
                    l3308 1924                      l3158 13DC                      l2286 25B2  
                    l2278 25AA                      l2374 1D04                      l2366 1CCA  
                    l2358 1C9A                      l3094 1DD8                      l3086 1DC6  
                    l3078 1DB6                      l2630 1788                      l2622 174E  
                    l2614 1716                      l2606 16E4                      l3182 25D2  
                    l3174 25C6                      l2710 0786                      l2702 0776  
                    l2534 1650                      l2526 1616                      l2518 15D2  
                    l2294 23C6                      l2382 24BA                      l2446 1522  
                    l2454 154C                      l2438 14F0                      l2470 1D6A  
                    l2462 1D36                      l2550 2084                      l3270 1A6C  
                    l3262 1A5A                      l3254 1A3A                      l3246 1A16  
                    l3190 2220                      l3238 219A                      l3166 2422  
                    l3342 19AA                      l3334 1990                      l3326 1974  
                    l3318 1938                      l2288 25B4                      l2376 1D0C  
                    l2368 1CDE                      l3096 1DDE                      l3088 1DCA  
                    l2632 1792                      l2624 1758                      l2616 172C  
                    l2608 16F2                      l3176 25C8                      l3184 2366  
                    l2800 09E2                      l2712 078A                      l2704 077A  
                    l2720 079A                      l2480 1FBA                      l2536 1662  
                    l2528 1620                      l2544 1680                      l2392 2460  
                    l2296 23DA                      l2384 24BC                      l2448 1536  
                    l2472 1D76                      l2464 1D52                      l2456 1D12  
                    l2560 20CC                      l2552 20A8                      l3272 1A78  
                    l3264 1A5E                      l3256 1A44                      l3248 1A1C  
                    l3280 2282                      l3192 2226                      l3168 244A  
                    l3336 1994                      l3328 1978                      l3098 1DE2  
                    l2626 1776                      l2618 1734                      l2634 1798  
                    l3178 25CC                      l3186 23B6                      l2802 09F0  
                    l2730 080A                      l2722 079E                      l2714 078E  
                    l2706 077E                      l2650 0686                      l2642 065A  
                    l2482 1FCA                      l2490 2310                      l2538 1676  
                    l2386 245C                      l2298 23DE                      l2378 24A0  
                    l2474 1D7A                      l2466 1D58                      l2458 1D18  
                    l2562 20D0                      l2554 20AE                      l2570 1F50  
                    l3274 1A7C                      l3266 1A62                      l3258 1A4A  
                    l3290 22A8                      l3282 228E                      l3194 2232  
                    l3338 1998                      l2636 17A8                      l2628 1786  
                    l2812 0A42                      l2820 0A98                      l2804 09F4  
                    l2740 0834                      l2732 0816                      l2724 07C8  
                    l2716 0792                      l2708 0782                      l2660 06C0  
                    l2652 0696                      l2644 0666                      l2484 1FD8  
                    l2492 2320                      l3364 1696                      l2476 1D7E  
                    l2468 1D64                      l2564 20D4                      l2556 20BA  
                    l2580 1F98                      l2572 1F74                      l3268 1A66  
                    l3292 22AC                      l3284 2294                      l3276 2258  
                    l3196 2238                      l3188 21FC                      l2638 17B8  
                    l2830 0AEA                      l2822 0AA8                      l2814 0A4E  
                    l2806 0A02                      l2750 088A                      l2742 0856  
                    l2734 081A                      l2726 07E4                      l2718 0796  
                    l2670 06EE                      l2662 06C6                      l2654 06A6  
                    l2646 0674                      l2486 1FE8                      l2494 2324  
                    l2398 2464                      l2478 1D82                      l2566 20D8  
                    l2558 20C0                      l2590 1FB4                      l2582 1F9C  
                    l2574 1F7A                      l2910 1E2C                      l2902 1E02  
                    l3286 22A0                      l3278 227C                      l3198 2244  
                    l3294 18CE                      l2840 0B08                      l2832 0AF0  
                    l2824 0AB8                      l2816 0A5C                      l2808 0A18  
                    l2760 08C4                      l2752 0898                      l2744 0866  
                    l2736 0828                      l2728 07F4                      l2680 0722  
                    l2672 06F0                      l2664 06D8                      l2656 06A8  
                    l2648 0676                      l2488 1FF2                      l2592 1E76  
                    l2496 2334                      l2568 20DE                      l2584 1FA0  
                    l2576 1F86                      l2920 1E60                      l2912 1E3A  
                    l2904 1E0A                      l3288 22A4                      l3296 18D6  
                    l2930 0E3A                      l2850 1B62                      l2834 0AF2  
                    l2826 0AD8                      l2818 0A96                      l2770 0930  
                    l2762 08C6                      l2754 08A6                      l2738 082A  
                    l2690 075E                      l2674 0700                      l2682 072A  
                    l2666 06DA                      l2658 06B0                      l2594 1EB4  
                    l2498 2338                      l2586 1FA4                      l2578 1F8C  
                    l2922 1E66                      l2914 1E40                      l2906 1E1C  
                    l3298 190E                      l2940 0ED4                      l2932 0E5C  
                    l2924 0DEC                      l2860 1B96                      l2852 1B66  
                    l2844 1B48                      l2836 0AF8                      l2828 0ADC  
                    l2780 0988                      l2772 0932                      l2764 08D0  
                    l2756 08B2                      l2748 087A                      l2692 0762  
                    l2684 073A                      l2676 0710                      l2668 06E0  
                    l2588 1FAA                      l2916 1E56                      l2908 1E24  
                    l2950 0F68                      l2942 0EF0                      l2934 0E78  
                    l2926 0E08                      l2598 16BE                      l2870 1BD0  
                    l2862 1B9E                      l2854 1B74                      l2846 1B4C  
                    l2838 0B06                      l2790 09B6                      l2774 0942  
                    l2758 08B6                      l2766 08D6                      l2694 0766  
                    l2686 074C                      l2678 0720                      l2918 1E5E  
                    l2960 0FF2                      l2952 0F7A                      l2944 0F02  
                    l2936 0E8A                      l2928 0E1A                      l2864 1BAC  
                    l2872 1BD6                      l2856 1B7C                      l2848 1B5A  
                    l2792 09C4                      l2784 099C                      l2768 08FC  
                    l2776 0952                      l2696 076A                      l2688 075A  
                    l2880 17CA                      l2962 1016                      l2954 0F9E  
                    l2946 0F26                      l2938 0EAE                      l2874 1BE6  
                    l2866 1BC2                      l2858 1B8E                      l2794 09CC  
                    l2786 09A6                      l2778 0978                      l2698 076E  
                    l2890 1854                      l2882 17F8                      l2970 1F28  
                    l2956 0FC4                      l2948 0F4C                      l2876 1BEE  
                    l2868 1BCA                      l2796 09D0                      l2788 09B4  
                    l2892 1866                      l2884 1808                      l2972 1F40  
                    l2964 1EE6                      l2980 24E2                      l2958 0FE0  
                    l2974 2584                      l2798 09E0                      l2894 1874  
                    l2886 1836                      l2966 1F04                      l2990 24EE  
                    l2896 18C4                      l2888 1846                      l2968 1F20  
                    l2992 24F4                      l2976 24DA                      l2898 18CA  
                    l2994 24F6                      l2986 24E6                      l2978 24DE  
                    l2996 2508                      l2988 24EA                      l2998 250C  
                    STR_1 0611                      u2000 25C4                      u2001 25C0  
                    u2010 1A96                      u2011 1A92                      u2100 2476  
                    u2020 1AB0                      u2101 2472                      u2021 1AAC  
                    u2110 248C                      u2030 1AD6                      u2111 2488  
                    u2031 1AD2                      u2200 1FD8                      u2120 249E  
                    u2040 1AF4                      u2201 1FD4                      u2121 249A  
                    u2041 1AF0                      u2210 2012                      u2050 1B10  
                    u2130 1422                      u2211 200E                      u2051 1B0C  
                    u2131 141E                      u3020 0F68                      u3004 0F18  
                    u2300 1ED4                      u2220 2320                      u2060 1B36  
                    u2140 143E                      u3100 2506                      u3021 0F64  
                    u3005 0F14                      u2221 231C                      u2061 1B32  
                    u2141 143A                      u3101 2502                      u2070 1CF4  
                    u3030 0F7A                      u3014 0F3C                      u2310 16D0  
                    u2230 2334                      u2150 14E2                      u3110 2534  
                    u2071 1CF0                      u3031 0F76                      u3015 0F38  
                    u2311 16CC                      u2231 2330                      u2151 14DE  
                    u3111 2530                      u2080 1D04                      u2320 16F2  
                    u2400 06D8                      u2240 234A                      u2160 14F0  
                    u3200 0DDE                      u2081 1D00                      u2321 16EE  
                    u2401 06D4                      u2305 1ECA                      u2241 2346  
                    u2161 14EC                      u3201 0DDA                      u3121 202E  
                    u2330 172C                      u2410 06EE                      u2250 2360  
                    u2090 24D8                      u2170 1562                      u2331 1728  
                    u2411 06EA                      u2251 235C                      u2091 24D4  
                    u2171 155E                      u3131 2040                      u3300 13D2  
                    u3060 0FE0                      u3044 0F90                      u2340 174E  
                    u2500 0828                      u2420 0700                      u3140 0B9E  
                    u3301 13CE                      u3061 0FDC                      u3045 0F8C  
                    u2341 174A                      u2501 0824                      u2421 06FC  
                    u2181 1D22                      u2261 208E                      u3141 0B9A  
                    u3310 13F4                      u3230 12FE                      u3214 12AA  
                    u3070 0FF2                      u3054 0FB4                      u2350 1776  
                    u2510 0848                      u2430 0710                      u3150 0C88  
                    u3311 13F0                      u3231 12FA                      u3215 12A6  
                    u3071 0FEE                      u3055 0FB0                      u2351 1772  
                    u2511 0844                      u2431 070C                      u2191 1D30  
                    u2271 20A0                      u3151 0C84                      u3224 12CA  
                    u1800 1068                      u2360 17A8                      u2600 0988  
                    u2520 0856                      u2440 074C                      u3160 0CF2  
                    u3320 2422                      u3225 12C6                      u1801 1064  
                    u2361 17A4                      u2601 0984                      u2521 0852  
                    u2441 0748                      u2281 1F5A                      u3161 0CEE  
                    u3401 19FC                      u3321 241E                      u3250 132E  
                    u2610 09B4                      u2530 0866                      u2450 075A  
                    u2370 0674                      u3170 0D58                      u3251 132A  
                    u2611 09B0                      u2531 0862                      u2451 0756  
                    u2371 0670                      u2291 1F6C                      u3171 0D54  
                    u3411 1A0E                      u3331 2206                      u3244 1314  
                    u3084 1008                      u2700 0A96                      u2620 09C4  
                    u2540 0898                      u2460 07C8                      u2380 0686  
                    u3180 0DBA                      u3245 1310                      u3085 1004  
                    u2701 0A92                      u2621 09C0                      u2541 0894  
                    u2461 07C4                      u2381 0682                      u3181 0DB6  
                    u3421 2262                      u3341 2218                      u1910 11B6  
                    u1830 10C6                      u1814 107A                      u3094 102C  
                    u2710 0AA8                      u2630 09E0                      u2550 08A6  
                    u2470 07E0                      u2390 0696                      u3190 0DCC  
                    u1911 11B2                      u1831 10C2                      u1815 1076  
                    u3095 1028                      u2711 0AA4                      u2631 09DC  
                    u2551 08A2                      u2471 07DA                      u2391 0692  
                    u3191 0DC8                      u3431 2274                      u3351 21AA  
                    u3280 13A8                      u3264 134C                      u1920 11D0  
                    u1904 118A                      u1840 10E0                      u1824 109A  
                    u2800 1BC2                      u2720 0AB8                      u2640 09F0  
                    u2560 08C4                      u2480 07E2                      u3440 1954  
                    u3281 13A4                      u3265 1346                      u1921 11CC  
                    u1905 1186                      u1841 10DC                      u1825 1096  
                    u2801 1BBE                      u2721 0AB4                      u2641 09EC  
                    u2561 08C0                      u3361 21BC                      u3441 1950  
                    u3290 13BA                      u3274 137E                      u2810 1BE6  
                    u2730 0AD8                      u2650 0A02                      u2570 08FC  
                    u2490 080A                      u3450 196E                      u3291 13B6  
                    u3275 1378                      u2811 1BE2                      u2731 0AD4  
                    u2651 09FE                      u2571 08F8                      u2491 0806  
                    u3371 2154                      u3451 196A                      u2900 0E08  
                    u2740 0AEA                      u2660 0A18                      u2580 0942  
                    u2820 17F8                      u3460 198A                      u2901 0E04  
                    u2741 0AE6                      u2661 0A14                      u2581 093E  
                    u2821 17F4                      u3381 2166                      u3461 1986  
                    u1950 122E                      u1934 11E2                      u1870 113E  
                    u1854 10F2                      u1790 1056                      u2910 0E1A  
                    u2750 0B06                      u2670 0A2E                      u2590 0978  
                    u2830 1836                      u3390 19EA                      u3470 19AA  
                    u1951 122A                      u1935 11DE                      u1871 113A  
                    u1855 10EE                      u1791 1052                      u2911 0E16  
                    u2751 0B02                      u2671 0A2A                      u2591 0974  
                    u2831 1832                      u3391 19E6                      u3471 19A6  
                    u1960 1248                      u1944 1202                      u1880 1158  
                    u1864 1112                      u2760 1B5A                      u2680 0A42  
                    u2840 1854                      u1961 1244                      u1945 11FE  
                    u1881 1154                      u1865 110E                      u2761 1B56  
                    u2681 0A3E                      u2841 1850                      u2770 1B74  
                    u2690 0A5C                      u2850 1874                      u2771 1B70  
                    u2691 0A58                      u2851 1870                      u2940 0E78  
                    u2924 0E2C                      u2780 1B8E                      u2860 18C4  
                    u2941 0E74                      u2925 0E28                      u2781 1B8A  
                    u2861 18C0                      u1990 25F6                      u1974 125A  
                    u1894 116A                      u2950 0E8A                      u2934 0E4C  
                    u2790 1BAC                      u2870 1E1C                      u1991 25F2  
                    u1975 1256                      u1895 1166                      u2951 0E86  
                    u2935 0E48                      u2791 1BA8                      u2871 1E18  
                    u1984 127A                      u2880 1E3A                      u1985 1276  
                    u2881 1E36                      u2890 1E56                      u2891 1E52  
                    u2980 0EF0                      u2964 0EA0                      u2981 0EEC  
                    u2965 0E9C                      u2990 0F02                      u2974 0EC4  
                    u2991 0EFE                      u2975 0EC0              textInit@text 001C  
                    _main 18CE                      _rand 1E76                      _itoa 1406  
                    _seed 00F6                      _time 2410                      fsr1h 000FE2  
                    fsr2h 000FDA                      indf1 000FE7                      indf2 000FDF  
                    fsr1l 000FE1                      fsr2l 000FD9                      prodh 000FF4  
                    prodl 000FF3                      start 0000              textWin@F2794 0151  
            textWin@F2796 0142              ___param_bank 000000             textInit@F2750 00CB  
           textInit@F2752 0114            pwmSet@porcento 000A              textLost@text 0028  
            textWait@text 000C           __end_of___aldiv 17CA              textWin@text2 0037  
         __end_of___fladd 0B1A                     ?_main 0001                     ?_rand 000D  
                   ?_itoa 0009           __end_of___awdiv 1B48           __end_of___awmod 1BF8  
                   ?_time 0001           ??_textApostando 0052           ___awdiv@divisor 0003  
                   _T2CON 000FCA           __end_of___lwdiv 1E76           ___awdiv@counter 0005  
                   _PORTA 000F80                     _PORTB 000F81                     _PORTC 000F82  
                   _PORTD 000F83                     _PORTE 000F84                     _TRISA 000F92  
                   _TRISB 000F93                     _TRISC 000F94                     _TRISD 000F95  
                   _TRISE 000F96             textInit@text2 000C           __end_of_lcdData 2410  
     ___lmul@multiplicand 0005           __end_of_lcdInit 1E02           __end_of_escreve 24DA  
                   _delay 245C         textApostando@text 0056                     _saldo 00DD  
         __end_of_pinMode 103A                     _valor 00ED                     _srand 2536  
                   _verso 24DA           __end_of_inverso 2536                     _sorte 007E  
                   tablat 000FF5           __end_of_ssdInit 23BC           __end_of_pwmInit 25E0  
                   time@t 0001           __end_of_textWin 1FBA                     plusw1 000FE3  
                   plusw2 000FDB                     status 000FD8             textLost@F2791 0160  
           textLost@F2789 016F          __end_of_Delay2ms 25C6               escreve@text 0009  
           textSaldo@text 0018             textWait@F2781 018D             textWait@F2779 0080  
    __end_of_digitalWrite 1288           __initialization 22B4              __end_of_main 19B8  
            __end_of_rand 1EE4              __end_of_itoa 1564              __end_of_time 245C  
      __size_of_Delay40us 0018             textLost@text2 0037                    ??_main 0074  
                  ??_rand 000F                    ??_itoa 000F                    ??_time 0009  
           __activetblptr 000002             textWait@text2 001B                    ?_delay 0001  
      __size_of_Apostando 02D2                    _CCPR1L 000FBE          ___awdiv@dividend 0001  
                  ?_srand 0009                    ?_verso 0001          textGameOver@text 003C  
      textApostando@F2804 0133        textApostando@F2806 0124                    ___flge 17CA  
                  ___lmul 1FBA                 ??___aldiv 0009                 ??___fladd 0009  
                  ___wmul 255E                 ??___awdiv 0005                 ??___awmod 0017  
     textInstrutions@text 000C                 ??___lwdiv 0005                    _kpInit 2602  
                  _kpRead 25F8        textApostando@text2 0065                    delay@i 0001  
                  delay@j 0002                    clear_0 22FA          ___awdiv@quotient 0007  
         ___awmod@divisor 0015                 ??_lcdData 0007                    isa$std 000001  
               ??_lcdInit 0009                    _pwmSet 1EE4           ___awmod@counter 0017  
               ??_escreve 000B          __end_of_ssdDigit 2366            textSaldo@F2774 00D7  
          textSaldo@F2776 00DF                 ??_pinMode 0005                 ??_inverso 0003  
            __mediumconst 0000          __end_of_textInit 2258                    tblptrh 000FF7  
                  tblptrl 000FF6                    tblptru 000FF8          __end_of_textLost 20E4  
        __end_of_textWait 21A0                 ??_ssdInit 0007                    srand@s 0009  
               ??_pwmInit 0011                    verso@k 0003                    verso@x 0004  
               ??_textWin 0028              ?_textApostas 0001         __end_of_Delay40us 25F8  
              ___flge@ff1 0001                ___flge@ff2 0005                __accesstop 0080  
 __end_of__initialization 2304            textSaldo@text2 001E             ___rparam_used 000001  
             pinMode@type 0003            __pcstackCOMRAM 0001              __pidataBANK0 20E4  
            __pidataBANK1 1BF8         __end_of_Apostando 0DEC           textApostas@text 000C  
           __end_of_delay 24A0             __end_of_srand 255E             __end_of_verso 2508  
               ?_Delay2ms 0001                   ??_delay 0001                   ??_srand 000B  
                 ??_verso 0003                __pbssBANK0 00DF     __size_of_digitalWrite 024E  
       textGameOver@F2784 017E         textGameOver@F2786 0100                   ?___flge 0001  
                 ?___lmul 0001                _lcdCommand 1C94                   ?___wmul 0001  
                 ?_kpInit 0001                   ?_kpRead 0001                   _CCP1CON 000FBD  
          ___lmul@product 0009                _kpDebounce 1288                   ?_pwmSet 0001  
__size_of_textInstrutions 005C         textGameOver@text2 0028        __size_of_ssdUpdate 015A  
              ??_Delay2ms 0002        __size_of_textSaldo 0078              _digitalWrite 103A  
    textInstrutions@F2763 00BC      textInstrutions@F2765 00AD                   __Hparam 0000  
                 __Lparam 0000                 ?_ssdDigit 0019           kpDebounce@old_D 0006  
         kpDebounce@tempo 00F5                   ___aldiv 16BE           __size_of___flge 0104  
               ?_textInit 0001                   ___fladd 065A                 ?_textLost 0001  
               ?_textWait 0001                   ___awdiv 1A84           __size_of___lmul 006A  
                 ___awmod 1B48           __size_of___wmul 0026                   ___lwdiv 1E02  
            __psmallconst 0600           __size_of_kpInit 000A           __size_of_kpRead 000A  
             ssdDigit@val 001A               ssdDigit@pos 0019                   __pcinit 22B4  
    textInstrutions@text2 001B                   _lcdData 23BC                   __ramtop 0600  
                 _lcdInit 1D8A                   __ptext0 18CE                   __ptext1 2410  
                 __ptext2 2144                   __ptext3 21A0                   __ptext4 21FC  
                 __ptext5 2258                   __ptext6 19B8                   __ptext7 24DA  
                 __ptext8 2024                   __ptext9 1EE4           __size_of_pwmSet 006C  
                 _display 00F4                   _escreve 24A0                   _pinMode 0DEC  
        ___awmod@dividend 0013     __end_of_textApostando 1A84                   _inverso 2508  
        ___aldiv@dividend 0001                   _ssdInit 2366                   _pwmInit 25C6  
                 _textWin 1F50                 Delay2ms@i 0002       kpDebounce@valorNovo 00EB  
    end_of_initialization 2304      __size_of_textApostas 005C                   itoa@ptr 0016  
           __Lmediumconst 0000             ?_pwmFrequency 000F         __end_of_ssdUpdate 16BE  
              ??_ssdDigit 001A         __end_of_textSaldo 1D8A             ?_textGameOver 0001  
        ___aldiv@quotient 000B                   postdec1 000FE5                   postdec2 000FDD  
             ?_lcdCommand 0001                ??_textInit 000C                   postinc0 000FEE  
                 postinc2 000FDE                ??_textLost 0028                ??_textWait 000C  
            itoa@tmp_char 0011               ?_kpDebounce 0001            _valor@ssd$F222 0601  
             ___fladd@grs 0010         ??_textInstrutions 000C            ??_pwmFrequency 0011  
        textApostas@F2770 008F          textApostas@F2768 009E                 _Delay40us 25E0  
          ??_textGameOver 0028               textWin@text 0028            __end_of___flge 18CE  
          __end_of___lmul 2024          textApostas@text2 001B            __end_of___wmul 2584  
          __end_of_kpInit 260C            __end_of_kpRead 2602    __end_of_valor@ssd$F222 0611  
               _Apostando 0B1A            __end_of_pwmSet 1F50       start_initialization 22B4  
       __size_of_Delay2ms 001C       __size_of_lcdCommand 007E       __size_of_kpDebounce 017E  
              ?_Delay40us 0001                  ??___flge 0009                  ??___lmul 0009  
                ??___wmul 0005                  ??_kpInit 0001                  ??_kpRead 0003  
             __pdataBANK0 0080               __pdataBANK1 0100                  ??_pwmSet 0008  
              ?_Apostando 0001                itoa@result 000B                 ___fladd@a 0005  
               ___fladd@b 0001               __pbssCOMRAM 007E                pinMode@pin 0001  
               __pnvBANK0 00F6          ___lwdiv@dividend 0001                  ?___aldiv 0001  
                ?___fladd 0001                  ?___awdiv 0001                  ?___awmod 0013  
       __size_of_ssdDigit 0058                  ?___lwdiv 0001         __size_of_textInit 005C  
       __size_of_textLost 0060         __size_of_textWait 005C                  ?_lcdData 0001  
                ?_lcdInit 0001      __end_of_pwmFrequency 25AA             lcdCommand@cmd 0008  
                ?_escreve 0009               __smallconst 0600                  ?_pinMode 0001  
                ?_inverso 0001                  ?_ssdInit 0001                  ?_pwmInit 0001  
    __end_of_textGameOver 2084                  ?_textWin 0001          ___lwdiv@quotient 0005  
          __size_of_delay 0044           Apostando@ssorte 0046            __size_of_srand 0028  
          __size_of_verso 002E          pwmFrequency@freq 000F           ___aldiv@divisor 0005  
         ___aldiv@counter 0009               ??_Delay40us 0001            ___wmul@product 0005  
            ??_lcdCommand 0007                 _ssdUpdate 1564                 _textSaldo 1D12  
            ??_kpDebounce 0001           _textInstrutions 21A0               ??_Apostando 0046  
       ___wmul@multiplier 0001           lcdCommand@old_D 0007     kpDebounce@valorAntigo 00E9  
                _Delay2ms 25AA                 main@tecla 007C             ??_textApostas 000C  
       ___lmul@multiplier 0001                 copy_data0 22C8                 copy_data1 22E8  
      __end_of_lcdCommand 1D12              lcdData@old_D 0008              lcdData@valor 0007  
      __end_of_kpDebounce 1406                  __Hrparam 0000                  __Lrparam 0000  
  __size_of_textApostando 00CC                 itoa@basea 000D                ?_ssdUpdate 0001  
               itoa@value 0009          __size_of___aldiv 010C          __size_of___fladd 04C0  
        __size_of___awdiv 00C4          __size_of___awmod 00B0                ?_textSaldo 0001  
        __size_of___lwdiv 0074          __size_of_lcdData 0054          __size_of_lcdInit 0078  
        __size_of_escreve 003A          __size_of_pinMode 024E           ___lwdiv@divisor 0003  
        __size_of_inverso 002E           ___lwdiv@counter 0007                  __ptext10 1E02  
                __ptext11 2508                  __ptext20 23BC                  __ptext12 0B1A  
                __ptext21 245C                  __ptext13 1F50                  __ptext30 2536  
                __ptext22 1564                  __ptext14 2084                  __ptext31 25C6  
                __ptext23 230E                  __ptext15 1D12                  __ptext40 25F8  
                __ptext32 2584                  __ptext24 1E76                  __ptext16 1406  
                __ptext41 2602                  __ptext33 16BE                  __ptext25 1FBA  
                __ptext17 255E                  __ptext42 1288                  __ptext34 1D8A  
                __ptext26 17CA                  __ptext18 1A84                  __ptext35 0DEC  
                __ptext27 065A                  __ptext19 24A0                  __ptext36 1C94  
                __ptext28 1B48                  __ptext37 103A                  __ptext29 2366  
                __ptext38 25AA                  __ptext39 25E0          __size_of_ssdInit 0056  
        __size_of_pwmInit 001A          __size_of_textWin 006A            Apostando@tempo 004E  
           __size_of_main 00EA             __size_of_rand 006E             __size_of_itoa 015E  
           __size_of_time 004C       __end_of_textApostas 22B4   __end_of_textInstrutions 21FC  
              Delay40us@i 0001                  _ssdDigit 230E                  isa$xinst 000000  
                _textInit 21FC                  _textLost 2084                  _textWait 2144  
   __size_of_pwmFrequency 0026                 pwmSet@val 000B     __size_of_textGameOver 0060  
                escreve@i 000B             _textApostando 19B8             ?_digitalWrite 0001  
                itoa@ptr1 0014                  inverso@k 0003                  inverso@x 0004  
       digitalWrite@value 0003              _pwmFrequency 2584              _textGameOver 2024  
             ??_ssdUpdate 0007               ??_textSaldo 0018               kpDebounce@i 000A  
             kpDebounce@j 0009               kpDebounce@k 0007            ?_textApostando 0001  
          ??_digitalWrite 0005             itoa@tmp_value 0012              ___aldiv@sign 000A  
           ___fladd@signs 000D               _textApostas 2258           digitalWrite@pin 0001  
            ___fladd@aexp 000E              ___fladd@bexp 000F                Apostando@t 004A  
        ?_textInstrutions 0001  
